//
// OrcException.java -- Java class OrcException
// Project OrcScala
//
// $Id$
//
// Copyright (c) 2010 The University of Texas at Austin. All rights reserved.
//
// Use and redistribution of this file is governed by the license terms in
// the LICENSE file found in the project's top-level directory and also found at
// URL: http://orc.csres.utexas.edu/license.shtml .
//

package orc.error;

import scala.util.parsing.input.NoPosition$;
import scala.util.parsing.input.Position;

/**
 * Any exception generated by Orc, during compilation, loading, or execution.
 * Though sites written in Java will sometimes produce java-level exceptions,
 * those exceptions are wrapped in a subclass of OrcException to localize and
 * isolate failures (see LocalException, JavaException).
 * 
 * @author dkitchin
 */
@SuppressWarnings("serial") //We don't care about serialization compatibility of Orc Exceptions
public class OrcException extends Exception {
    Position position;

	public OrcException(final String message) {
		super(message);
	}

	public OrcException(final String message, final Throwable cause) {
		super(message, cause);
	}

	public OrcException(final Throwable cause) {
		super(cause);
	}

	@Override
	public String getMessage() {
	    if (position != null && !(position instanceof NoPosition$)) {
	        return position.toString() + ": " + super.getMessage() + "\n" + position.longString();
	    } else {
	        return super.getMessage();
	    }
	}
  
	public String getMessageOnly() {
	    return super.getMessage();
	}
  
	/* (non-Javadoc)
	 * @see scala.util.parsing.input.Positional#pos()
	 */
	public Position getPosition() {
	    return position;
	}
  
	/* (non-Javadoc)
	 * @see scala.util.parsing.input.Positional#pos_$eq(scala.util.parsing.input.Position)
	 */
	public void resetPosition(Position newpos) {
	    position = newpos;
	}
  
	/* (non-Javadoc)
	 * @see scala.util.parsing.input.Positional#setPos(scala.util.parsing.input.Position)
	 */
	public OrcException setPosition(Position newpos) {
	    if (position == null || position instanceof NoPosition$) {
	        position = newpos;
	    }
	    return this;
	}
}
