<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="orc.orchard.soap" soapui-version="2.0.2" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="ProjectSettings@projectRoot">/home/adrian/ut/orc/OrcMainline</con:setting></con:settings><con:interface name="CompilerServicePortBinding" bindingName="{http://soap.orchard.orc/}CompilerServicePortBinding" soapVersion="1_1" definition="http://localhost:8080/orchard/compiler?wsdl"><con:settings/><con:endpoints><con:endpoint>http://localhost:8080/orchard/compiler</con:endpoint><con:endpoint>http://localhost:8280/orchard/soap/compiler</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="compile" bindingOperationName="compile" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8280/orchard/soap/compiler</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <api:compile>
         <arg0>1</arg0>
      </api:compile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:definitionCache rootPart="http://localhost:8080/orchard/compiler?wsdl" type="TEXT"><con:part><con:url>http://localhost:8080/orchard/compiler?wsdl</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<!--Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<definitions targetNamespace="http://soap.orchard.orc/" name="CompilerServiceService" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://soap.orchard.orc/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <import namespace="http://api.orchard.orc/" location="http://localhost:8080/orchard/compiler?wsdl=1"/>
  <binding name="CompilerServicePortBinding" type="ns1:CompilerServiceInterface" xmlns:ns1="http://api.orchard.orc/">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="compile">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="InvalidProgramException">
        <soap:fault name="InvalidProgramException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="CompilerServiceService">
    <port name="CompilerServicePort" binding="tns:CompilerServicePortBinding">
      <soap:address location="http://localhost:8080/orchard/compiler"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/orchard/compiler?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<!--Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<definitions targetNamespace="http://api.orchard.orc/" xmlns:tns="http://api.orchard.orc/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://api.orchard.orc/" schemaLocation="http://localhost:8080/orchard/compiler?xsd=1"/>
    </xsd:schema>
  </types>
  <message name="compile">
    <part name="parameters" element="tns:compile"/>
  </message>
  <message name="compileResponse">
    <part name="parameters" element="tns:compileResponse"/>
  </message>
  <message name="InvalidProgramException">
    <part name="fault" element="tns:InvalidProgramException"/>
  </message>
  <portType name="CompilerServiceInterface">
    <operation name="compile">
      <input message="tns:compile"/>
      <output message="tns:compileResponse"/>
      <fault message="tns:InvalidProgramException" name="InvalidProgramException"/>
    </operation>
  </portType>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/orchard/compiler?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<xs:schema version="1.0" targetNamespace="http://api.orchard.orc/" xmlns:tns="http://api.orchard.orc/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="InvalidProgramException" type="tns:InvalidProgramException"/>
  <xs:element name="compile" type="tns:compile"/>
  <xs:element name="compileResponse" type="tns:compileResponse"/>
  <xs:complexType name="compile">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="compileResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:oil" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="oil">
    <xs:sequence>
      <xs:element name="expression" type="tns:expression" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="version" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="expression" abstract="true">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="bar">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="call">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="callee" type="tns:argument" minOccurs="0"/>
          <xs:element name="argument" type="tns:argument" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="argument" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="constant">
    <xs:complexContent>
      <xs:extension base="tns:argument">
        <xs:sequence>
          <xs:element name="value" type="xs:anyType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="field">
    <xs:complexContent>
      <xs:extension base="tns:argument">
        <xs:sequence/>
        <xs:attribute name="name" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="site">
    <xs:complexContent>
      <xs:extension base="tns:argument">
        <xs:sequence/>
        <xs:attribute name="protocol" type="xs:string"/>
        <xs:attribute name="location" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="variable">
    <xs:complexContent>
      <xs:extension base="tns:argument">
        <xs:sequence/>
        <xs:attribute name="index" type="xs:int" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="definitions">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="definition" type="tns:definition" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="body" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="definition">
    <xs:sequence>
      <xs:element name="body" type="tns:expression" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="arity" type="xs:int" use="required"/>
  </xs:complexType>
  <xs:complexType name="null">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="pull">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="push">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="semicolon">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="InvalidProgramException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache></con:interface><con:interface name="ExecutorServicePortBinding" bindingName="{http://soap.orchard.orc/}ExecutorServicePortBinding" soapVersion="1_1" definition="http://localhost:8280/orchard/executor?wsdl"><con:settings/><con:endpoints><con:endpoint>http://localhost:8280/orchard/executor</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="compileAndSubmit" bindingOperationName="compileAndSubmit" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8280/orchard/executor</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:compileAndSubmit>
         <program>1 | (1,1) | [1,1]</program>
      </soap:compileAndSubmit>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="compileAndSubmitConfigured" bindingOperationName="compileAndSubmitConfigured" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8280/orchard/executor</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:compileAndSubmitConfigured>
         <!--Optional:-->
         <program>?</program>
         <!--Optional:-->
         <configuration>
            <debuggable>?</debuggable>
            <listenable>?</listenable>
         </configuration>
      </soap:compileAndSubmitConfigured>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="jobs" bindingOperationName="jobs" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8280/orchard/executor</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:jobs/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="submit" bindingOperationName="submit" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8280/orchard/executor</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:submit>
         <!--Optional:-->
         <program version="?">
            <!--Optional:-->
            <expression/>
         </program>
      </soap:submit>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="submitConfigured" bindingOperationName="submitConfigured" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8280/orchard/executor</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:submitConfigured>
         <!--Optional:-->
         <program version="?">
            <!--Optional:-->
            <expression/>
         </program>
         <!--Optional:-->
         <configuration>
            <debuggable>?</debuggable>
            <listenable>?</listenable>
         </configuration>
      </soap:submitConfigured>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:definitionCache rootPart="http://localhost:8280/orchard/executor?wsdl" type="TEXT"><con:part><con:url>http://localhost:8280/orchard/executor?wsdl</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<!--Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<definitions targetNamespace="http://soap.orchard.orc/" name="ExecutorServiceService" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://soap.orchard.orc/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://soap.orchard.orc/" schemaLocation="http://localhost:8280/orchard/executor?xsd=1"/>
    </xsd:schema>
  </types>
  <message name="compileAndSubmit">
    <part name="parameters" element="tns:compileAndSubmit"/>
  </message>
  <message name="compileAndSubmitResponse">
    <part name="parameters" element="tns:compileAndSubmitResponse"/>
  </message>
  <message name="QuotaException">
    <part name="fault" element="tns:QuotaException"/>
  </message>
  <message name="InvalidProgramException">
    <part name="fault" element="tns:InvalidProgramException"/>
  </message>
  <message name="InvalidOilException">
    <part name="fault" element="tns:InvalidOilException"/>
  </message>
  <message name="compileAndSubmitConfigured">
    <part name="parameters" element="tns:compileAndSubmitConfigured"/>
  </message>
  <message name="compileAndSubmitConfiguredResponse">
    <part name="parameters" element="tns:compileAndSubmitConfiguredResponse"/>
  </message>
  <message name="UnsupportedFeatureException">
    <part name="fault" element="tns:UnsupportedFeatureException"/>
  </message>
  <message name="jobs">
    <part name="parameters" element="tns:jobs"/>
  </message>
  <message name="jobsResponse">
    <part name="parameters" element="tns:jobsResponse"/>
  </message>
  <message name="submit">
    <part name="parameters" element="tns:submit"/>
  </message>
  <message name="submitResponse">
    <part name="parameters" element="tns:submitResponse"/>
  </message>
  <message name="submitConfigured">
    <part name="parameters" element="tns:submitConfigured"/>
  </message>
  <message name="submitConfiguredResponse">
    <part name="parameters" element="tns:submitConfiguredResponse"/>
  </message>
  <portType name="ExecutorService">
    <operation name="compileAndSubmit">
      <input message="tns:compileAndSubmit"/>
      <output message="tns:compileAndSubmitResponse"/>
      <fault message="tns:QuotaException" name="QuotaException"/>
      <fault message="tns:InvalidProgramException" name="InvalidProgramException"/>
      <fault message="tns:InvalidOilException" name="InvalidOilException"/>
    </operation>
    <operation name="compileAndSubmitConfigured">
      <input message="tns:compileAndSubmitConfigured"/>
      <output message="tns:compileAndSubmitConfiguredResponse"/>
      <fault message="tns:QuotaException" name="QuotaException"/>
      <fault message="tns:InvalidProgramException" name="InvalidProgramException"/>
      <fault message="tns:InvalidOilException" name="InvalidOilException"/>
      <fault message="tns:UnsupportedFeatureException" name="UnsupportedFeatureException"/>
    </operation>
    <operation name="jobs">
      <input message="tns:jobs"/>
      <output message="tns:jobsResponse"/>
    </operation>
    <operation name="submit">
      <input message="tns:submit"/>
      <output message="tns:submitResponse"/>
      <fault message="tns:QuotaException" name="QuotaException"/>
      <fault message="tns:InvalidOilException" name="InvalidOilException"/>
    </operation>
    <operation name="submitConfigured">
      <input message="tns:submitConfigured"/>
      <output message="tns:submitConfiguredResponse"/>
      <fault message="tns:QuotaException" name="QuotaException"/>
      <fault message="tns:InvalidOilException" name="InvalidOilException"/>
      <fault message="tns:UnsupportedFeatureException" name="UnsupportedFeatureException"/>
    </operation>
  </portType>
  <binding name="ExecutorServicePortBinding" type="tns:ExecutorService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="compileAndSubmit">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="QuotaException">
        <soap:fault name="QuotaException" use="literal"/>
      </fault>
      <fault name="InvalidProgramException">
        <soap:fault name="InvalidProgramException" use="literal"/>
      </fault>
      <fault name="InvalidOilException">
        <soap:fault name="InvalidOilException" use="literal"/>
      </fault>
    </operation>
    <operation name="compileAndSubmitConfigured">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="QuotaException">
        <soap:fault name="QuotaException" use="literal"/>
      </fault>
      <fault name="InvalidProgramException">
        <soap:fault name="InvalidProgramException" use="literal"/>
      </fault>
      <fault name="InvalidOilException">
        <soap:fault name="InvalidOilException" use="literal"/>
      </fault>
      <fault name="UnsupportedFeatureException">
        <soap:fault name="UnsupportedFeatureException" use="literal"/>
      </fault>
    </operation>
    <operation name="jobs">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="submit">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="QuotaException">
        <soap:fault name="QuotaException" use="literal"/>
      </fault>
      <fault name="InvalidOilException">
        <soap:fault name="InvalidOilException" use="literal"/>
      </fault>
    </operation>
    <operation name="submitConfigured">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="QuotaException">
        <soap:fault name="QuotaException" use="literal"/>
      </fault>
      <fault name="InvalidOilException">
        <soap:fault name="InvalidOilException" use="literal"/>
      </fault>
      <fault name="UnsupportedFeatureException">
        <soap:fault name="UnsupportedFeatureException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="ExecutorServiceService">
    <port name="ExecutorServicePort" binding="tns:ExecutorServicePortBinding">
      <soap:address location="http://localhost:8280/orchard/executor"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8280/orchard/executor?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<xs:schema version="1.0" targetNamespace="http://soap.orchard.orc/" xmlns:tns="http://soap.orchard.orc/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="InvalidOilException" type="tns:InvalidOilException"/>
  <xs:element name="InvalidProgramException" type="tns:InvalidProgramException"/>
  <xs:element name="QuotaException" type="tns:QuotaException"/>
  <xs:element name="UnsupportedFeatureException" type="tns:UnsupportedFeatureException"/>
  <xs:element name="compileAndSubmit" type="tns:compileAndSubmit"/>
  <xs:element name="compileAndSubmitConfigured" type="tns:compileAndSubmitConfigured"/>
  <xs:element name="compileAndSubmitConfiguredResponse" type="tns:compileAndSubmitConfiguredResponse"/>
  <xs:element name="compileAndSubmitResponse" type="tns:compileAndSubmitResponse"/>
  <xs:element name="jobs" type="tns:jobs"/>
  <xs:element name="jobsResponse" type="tns:jobsResponse"/>
  <xs:element name="submit" type="tns:submit"/>
  <xs:element name="submitConfigured" type="tns:submitConfigured"/>
  <xs:element name="submitConfiguredResponse" type="tns:submitConfiguredResponse"/>
  <xs:element name="submitResponse" type="tns:submitResponse"/>
  <xs:complexType name="compileAndSubmitConfigured">
    <xs:sequence>
      <xs:element name="program" type="xs:string" minOccurs="0"/>
      <xs:element name="configuration" type="tns:jobConfiguration" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="jobConfiguration">
    <xs:sequence>
      <xs:element name="debuggable" type="xs:boolean"/>
      <xs:element name="listenable" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="compileAndSubmitConfiguredResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QuotaException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InvalidProgramException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InvalidOilException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsupportedFeatureException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="compileAndSubmit">
    <xs:sequence>
      <xs:element name="program" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="compileAndSubmitResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="jobs">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="jobsResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="submit">
    <xs:sequence>
      <xs:element name="program" type="tns:oil" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="oil">
    <xs:sequence>
      <xs:element name="expression" type="tns:expression" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="version" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="expression" abstract="true">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="bar">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="call">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="callee" type="tns:argument" minOccurs="0"/>
          <xs:element name="argument" type="tns:argument" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="argument" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="value" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:argument">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="constant">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence>
          <xs:element name="value" type="xs:anyType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="field">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence/>
        <xs:attribute name="name" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="site">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence/>
        <xs:attribute name="protocol" type="xs:string"/>
        <xs:attribute name="location" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="unrepresentableValue">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence/>
        <xs:attribute name="description" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="list">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence>
          <xs:element name="element" type="tns:value" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="option">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="tuple">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence>
          <xs:element name="element" type="tns:value" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="size" type="xs:int" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="variable">
    <xs:complexContent>
      <xs:extension base="tns:argument">
        <xs:sequence/>
        <xs:attribute name="index" type="xs:int" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="definitions">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="definition" type="tns:definition" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="body" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="definition">
    <xs:sequence>
      <xs:element name="body" type="tns:expression" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="arity" type="xs:int" use="required"/>
  </xs:complexType>
  <xs:complexType name="null">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="pull">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="push">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="semicolon">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="submitResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="submitConfigured">
    <xs:sequence>
      <xs:element name="program" type="tns:oil" minOccurs="0"/>
      <xs:element name="configuration" type="tns:jobConfiguration" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="submitConfiguredResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache></con:interface><con:interface name="StandaloneJobServicePortBinding" bindingName="{http://soap.orchard.orc/}StandaloneJobServicePortBinding" soapVersion="1_1" definition="http://localhost:8280/orchard/jobs/c611d869-0521-4436-ace9-bc7588986f3d?wsdl"><con:settings/><con:endpoints><con:endpoint>http://localhost:8280/orchard/jobs/4ed44574-21b9-4570-959b-c5f80b8b0001</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="configuration" bindingOperationName="configuration" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:configuration/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="finish" bindingOperationName="finish" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:finish/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="halt" bindingOperationName="halt" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:halt/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="listen" bindingOperationName="listen" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:listen/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="publications" bindingOperationName="publications" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8280/orchard/jobs/4ed44574-21b9-4570-959b-c5f80b8b0001</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:publications/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="publicationsAfter" bindingOperationName="publicationsAfter" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:publicationsAfter>
         <sequence>?</sequence>
      </soap:publicationsAfter>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="start" bindingOperationName="start" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8280/orchard/jobs/4ed44574-21b9-4570-959b-c5f80b8b0001</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:start/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="state" bindingOperationName="state" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:state/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:definitionCache rootPart="http://localhost:8280/orchard/jobs/c611d869-0521-4436-ace9-bc7588986f3d?wsdl" type="TEXT"><con:part><con:url>http://localhost:8280/orchard/jobs/c611d869-0521-4436-ace9-bc7588986f3d?wsdl</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<!--Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<definitions targetNamespace="http://soap.orchard.orc/" name="StandaloneJobServiceService" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://soap.orchard.orc/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://soap.orchard.orc/" schemaLocation="http://localhost:8280/orchard/jobs/c611d869-0521-4436-ace9-bc7588986f3d?xsd=1"/>
    </xsd:schema>
  </types>
  <message name="configuration">
    <part name="parameters" element="tns:configuration"/>
  </message>
  <message name="configurationResponse">
    <part name="parameters" element="tns:configurationResponse"/>
  </message>
  <message name="publications">
    <part name="parameters" element="tns:publications"/>
  </message>
  <message name="publicationsResponse">
    <part name="parameters" element="tns:publicationsResponse"/>
  </message>
  <message name="InvalidJobStateException">
    <part name="fault" element="tns:InvalidJobStateException"/>
  </message>
  <message name="publicationsAfter">
    <part name="parameters" element="tns:publicationsAfter"/>
  </message>
  <message name="publicationsAfterResponse">
    <part name="parameters" element="tns:publicationsAfterResponse"/>
  </message>
  <message name="start">
    <part name="parameters" element="tns:start"/>
  </message>
  <message name="startResponse">
    <part name="parameters" element="tns:startResponse"/>
  </message>
  <message name="state">
    <part name="parameters" element="tns:state"/>
  </message>
  <message name="stateResponse">
    <part name="parameters" element="tns:stateResponse"/>
  </message>
  <message name="halt">
    <part name="parameters" element="tns:halt"/>
  </message>
  <message name="haltResponse">
    <part name="parameters" element="tns:haltResponse"/>
  </message>
  <message name="listen">
    <part name="parameters" element="tns:listen"/>
  </message>
  <message name="listenResponse">
    <part name="parameters" element="tns:listenResponse"/>
  </message>
  <message name="UnsupportedFeatureException">
    <part name="fault" element="tns:UnsupportedFeatureException"/>
  </message>
  <message name="InterruptedException">
    <part name="fault" element="tns:InterruptedException"/>
  </message>
  <message name="finish">
    <part name="parameters" element="tns:finish"/>
  </message>
  <message name="finishResponse">
    <part name="parameters" element="tns:finishResponse"/>
  </message>
  <portType name="StandaloneJobService">
    <operation name="configuration">
      <input message="tns:configuration"/>
      <output message="tns:configurationResponse"/>
    </operation>
    <operation name="publications">
      <input message="tns:publications"/>
      <output message="tns:publicationsResponse"/>
      <fault message="tns:InvalidJobStateException" name="InvalidJobStateException"/>
    </operation>
    <operation name="publicationsAfter">
      <input message="tns:publicationsAfter"/>
      <output message="tns:publicationsAfterResponse"/>
      <fault message="tns:InvalidJobStateException" name="InvalidJobStateException"/>
    </operation>
    <operation name="start">
      <input message="tns:start"/>
      <output message="tns:startResponse"/>
      <fault message="tns:InvalidJobStateException" name="InvalidJobStateException"/>
    </operation>
    <operation name="state">
      <input message="tns:state"/>
      <output message="tns:stateResponse"/>
    </operation>
    <operation name="halt">
      <input message="tns:halt"/>
      <output message="tns:haltResponse"/>
    </operation>
    <operation name="listen">
      <input message="tns:listen"/>
      <output message="tns:listenResponse"/>
      <fault message="tns:InvalidJobStateException" name="InvalidJobStateException"/>
      <fault message="tns:UnsupportedFeatureException" name="UnsupportedFeatureException"/>
      <fault message="tns:InterruptedException" name="InterruptedException"/>
    </operation>
    <operation name="finish">
      <input message="tns:finish"/>
      <output message="tns:finishResponse"/>
      <fault message="tns:InvalidJobStateException" name="InvalidJobStateException"/>
    </operation>
  </portType>
  <binding name="StandaloneJobServicePortBinding" type="tns:StandaloneJobService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="configuration">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="publications">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="InvalidJobStateException">
        <soap:fault name="InvalidJobStateException" use="literal"/>
      </fault>
    </operation>
    <operation name="publicationsAfter">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="InvalidJobStateException">
        <soap:fault name="InvalidJobStateException" use="literal"/>
      </fault>
    </operation>
    <operation name="start">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="InvalidJobStateException">
        <soap:fault name="InvalidJobStateException" use="literal"/>
      </fault>
    </operation>
    <operation name="state">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="halt">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="listen">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="InvalidJobStateException">
        <soap:fault name="InvalidJobStateException" use="literal"/>
      </fault>
      <fault name="UnsupportedFeatureException">
        <soap:fault name="UnsupportedFeatureException" use="literal"/>
      </fault>
      <fault name="InterruptedException">
        <soap:fault name="InterruptedException" use="literal"/>
      </fault>
    </operation>
    <operation name="finish">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="InvalidJobStateException">
        <soap:fault name="InvalidJobStateException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="StandaloneJobServiceService">
    <port name="StandaloneJobServicePort" binding="tns:StandaloneJobServicePortBinding">
      <soap:address location="http://localhost:8280/orchard/jobs/c611d869-0521-4436-ace9-bc7588986f3d"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8280/orchard/jobs/c611d869-0521-4436-ace9-bc7588986f3d?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<xs:schema version="1.0" targetNamespace="http://soap.orchard.orc/" xmlns:tns="http://soap.orchard.orc/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="InterruptedException" type="tns:InterruptedException"/>
  <xs:element name="InvalidJobStateException" type="tns:InvalidJobStateException"/>
  <xs:element name="UnsupportedFeatureException" type="tns:UnsupportedFeatureException"/>
  <xs:element name="configuration" type="tns:configuration"/>
  <xs:element name="configurationResponse" type="tns:configurationResponse"/>
  <xs:element name="finish" type="tns:finish"/>
  <xs:element name="finishResponse" type="tns:finishResponse"/>
  <xs:element name="halt" type="tns:halt"/>
  <xs:element name="haltResponse" type="tns:haltResponse"/>
  <xs:element name="listen" type="tns:listen"/>
  <xs:element name="listenResponse" type="tns:listenResponse"/>
  <xs:element name="publications" type="tns:publications"/>
  <xs:element name="publicationsAfter" type="tns:publicationsAfter"/>
  <xs:element name="publicationsAfterResponse" type="tns:publicationsAfterResponse"/>
  <xs:element name="publicationsResponse" type="tns:publicationsResponse"/>
  <xs:element name="start" type="tns:start"/>
  <xs:element name="startResponse" type="tns:startResponse"/>
  <xs:element name="state" type="tns:state"/>
  <xs:element name="stateResponse" type="tns:stateResponse"/>
  <xs:complexType name="configuration">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="configurationResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:jobConfiguration" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="jobConfiguration">
    <xs:sequence>
      <xs:element name="debuggable" type="xs:boolean"/>
      <xs:element name="listenable" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="finish">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="finishResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="InvalidJobStateException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="listen">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="listenResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:publication" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="publication">
    <xs:sequence>
      <xs:element name="sequence" type="xs:int"/>
      <xs:element name="timestamp" type="xs:dateTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsupportedFeatureException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InterruptedException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="start">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="startResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="halt">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="haltResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="publications">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="publicationsResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:publication" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="publicationsAfter">
    <xs:sequence>
      <xs:element name="sequence" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="publicationsAfterResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:publication" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="state">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="stateResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache></con:interface><con:interface name="JobsServicePortBinding" bindingName="{http://soap.orchard.orc/}JobsServicePortBinding" soapVersion="1_1" definition="http://localhost:8080/orchard/json/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a?wsdl"><con:settings/><con:endpoints><con:endpoint>http://localhost:8080/orchard/soap/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="configuration" bindingOperationName="configuration" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://localhost:8080/orchard/soap/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:configuration/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="finish" bindingOperationName="finish" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://localhost:8080/orchard/soap/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:finish/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="halt" bindingOperationName="halt" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://localhost:8080/orchard/soap/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:halt/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="listen" bindingOperationName="listen" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://localhost:8080/orchard/soap/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:listen/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="publications" bindingOperationName="publications" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/orchard/soap/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:publications/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="publicationsAfter" bindingOperationName="publicationsAfter" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://localhost:8080/orchard/soap/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:publicationsAfter>
         <sequence>?</sequence>
      </soap:publicationsAfter>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="start" bindingOperationName="start" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://localhost:8080/orchard/soap/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:start/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="state" bindingOperationName="state" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://localhost:8080/orchard/soap/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://soap.orchard.orc/">
   <soapenv:Header/>
   <soapenv:Body>
      <soap:state/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:definitionCache rootPart="http://localhost:8080/orchard/json/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a?wsdl" type="TEXT"><con:part><con:url>http://localhost:8080/orchard/json/jobs?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<xs:schema version="1.0" targetNamespace="http://soap.orchard.orc/" xmlns:tns="http://soap.orchard.orc/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="InterruptedException" type="tns:InterruptedException"/>
  <xs:element name="InvalidJobStateException" type="tns:InvalidJobStateException"/>
  <xs:element name="UnsupportedFeatureException" type="tns:UnsupportedFeatureException"/>
  <xs:element name="configuration" type="tns:configuration"/>
  <xs:element name="configurationResponse" type="tns:configurationResponse"/>
  <xs:element name="finish" type="tns:finish"/>
  <xs:element name="finishResponse" type="tns:finishResponse"/>
  <xs:element name="halt" type="tns:halt"/>
  <xs:element name="haltResponse" type="tns:haltResponse"/>
  <xs:element name="listen" type="tns:listen"/>
  <xs:element name="listenResponse" type="tns:listenResponse"/>
  <xs:element name="publications" type="tns:publications"/>
  <xs:element name="publicationsAfter" type="tns:publicationsAfter"/>
  <xs:element name="publicationsAfterResponse" type="tns:publicationsAfterResponse"/>
  <xs:element name="publicationsResponse" type="tns:publicationsResponse"/>
  <xs:element name="start" type="tns:start"/>
  <xs:element name="startResponse" type="tns:startResponse"/>
  <xs:element name="state" type="tns:state"/>
  <xs:element name="stateResponse" type="tns:stateResponse"/>
  <xs:complexType name="halt">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="haltResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="publications">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="publicationsResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:publication" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="publication">
    <xs:sequence>
      <xs:element name="sequence" type="xs:int"/>
      <xs:element name="timestamp" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="value" type="tns:value" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="value" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:argument">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="argument" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="expression" abstract="true">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="bar">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="call">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="callee" type="tns:argument" minOccurs="0"/>
          <xs:element name="argument" type="tns:argument" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="definitions">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="definition" type="tns:definition" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="body" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="definition">
    <xs:sequence>
      <xs:element name="body" type="tns:expression" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="arity" type="xs:int" use="required"/>
  </xs:complexType>
  <xs:complexType name="null">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="pull">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="push">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="semicolon">
    <xs:complexContent>
      <xs:extension base="tns:expression">
        <xs:sequence>
          <xs:element name="left" type="tns:expression" minOccurs="0"/>
          <xs:element name="right" type="tns:expression" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="variable">
    <xs:complexContent>
      <xs:extension base="tns:argument">
        <xs:sequence/>
        <xs:attribute name="index" type="xs:int" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="constant">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence>
          <xs:element name="value" type="xs:anyType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="field">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence/>
        <xs:attribute name="name" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="site">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence/>
        <xs:attribute name="protocol" type="xs:string"/>
        <xs:attribute name="location" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="unrepresentableValue">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence/>
        <xs:attribute name="description" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="list">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence>
          <xs:element name="element" type="tns:value" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="option">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence>
          <xs:element name="value" type="tns:value" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="tuple">
    <xs:complexContent>
      <xs:extension base="tns:value">
        <xs:sequence>
          <xs:element name="element" type="tns:value" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="size" type="xs:int" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="InvalidJobStateException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="state">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="stateResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="start">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="startResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="finish">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="finishResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="listen">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="listenResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:publication" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsupportedFeatureException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InterruptedException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="publicationsAfter">
    <xs:sequence>
      <xs:element name="sequence" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="publicationsAfterResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:publication" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="configuration">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="configurationResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:jobConfiguration" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="jobConfiguration">
    <xs:sequence>
      <xs:element name="debuggable" type="xs:boolean"/>
      <xs:element name="listenable" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://localhost:8080/orchard/json/jobs/d27a7c14-2946-412b-86ef-53033d86ad4a?wsdl</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<!--Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-.-->
<definitions targetNamespace="http://soap.orchard.orc/" name="JobsServiceService" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://soap.orchard.orc/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://soap.orchard.orc/" schemaLocation="http://localhost:8080/orchard/json/jobs?xsd=1"/>
    </xsd:schema>
  </types>
  <message name="configuration">
    <part name="parameters" element="tns:configuration"/>
  </message>
  <message name="configurationResponse">
    <part name="parameters" element="tns:configurationResponse"/>
  </message>
  <message name="publications">
    <part name="parameters" element="tns:publications"/>
  </message>
  <message name="publicationsResponse">
    <part name="parameters" element="tns:publicationsResponse"/>
  </message>
  <message name="InvalidJobStateException">
    <part name="fault" element="tns:InvalidJobStateException"/>
  </message>
  <message name="publicationsAfter">
    <part name="parameters" element="tns:publicationsAfter"/>
  </message>
  <message name="publicationsAfterResponse">
    <part name="parameters" element="tns:publicationsAfterResponse"/>
  </message>
  <message name="start">
    <part name="parameters" element="tns:start"/>
  </message>
  <message name="startResponse">
    <part name="parameters" element="tns:startResponse"/>
  </message>
  <message name="state">
    <part name="parameters" element="tns:state"/>
  </message>
  <message name="stateResponse">
    <part name="parameters" element="tns:stateResponse"/>
  </message>
  <message name="halt">
    <part name="parameters" element="tns:halt"/>
  </message>
  <message name="haltResponse">
    <part name="parameters" element="tns:haltResponse"/>
  </message>
  <message name="listen">
    <part name="parameters" element="tns:listen"/>
  </message>
  <message name="listenResponse">
    <part name="parameters" element="tns:listenResponse"/>
  </message>
  <message name="UnsupportedFeatureException">
    <part name="fault" element="tns:UnsupportedFeatureException"/>
  </message>
  <message name="InterruptedException">
    <part name="fault" element="tns:InterruptedException"/>
  </message>
  <message name="finish">
    <part name="parameters" element="tns:finish"/>
  </message>
  <message name="finishResponse">
    <part name="parameters" element="tns:finishResponse"/>
  </message>
  <portType name="JobsService">
    <operation name="configuration">
      <input message="tns:configuration"/>
      <output message="tns:configurationResponse"/>
    </operation>
    <operation name="publications">
      <input message="tns:publications"/>
      <output message="tns:publicationsResponse"/>
      <fault message="tns:InvalidJobStateException" name="InvalidJobStateException"/>
    </operation>
    <operation name="publicationsAfter">
      <input message="tns:publicationsAfter"/>
      <output message="tns:publicationsAfterResponse"/>
      <fault message="tns:InvalidJobStateException" name="InvalidJobStateException"/>
    </operation>
    <operation name="start">
      <input message="tns:start"/>
      <output message="tns:startResponse"/>
      <fault message="tns:InvalidJobStateException" name="InvalidJobStateException"/>
    </operation>
    <operation name="state">
      <input message="tns:state"/>
      <output message="tns:stateResponse"/>
    </operation>
    <operation name="halt">
      <input message="tns:halt"/>
      <output message="tns:haltResponse"/>
    </operation>
    <operation name="listen">
      <input message="tns:listen"/>
      <output message="tns:listenResponse"/>
      <fault message="tns:InvalidJobStateException" name="InvalidJobStateException"/>
      <fault message="tns:UnsupportedFeatureException" name="UnsupportedFeatureException"/>
      <fault message="tns:InterruptedException" name="InterruptedException"/>
    </operation>
    <operation name="finish">
      <input message="tns:finish"/>
      <output message="tns:finishResponse"/>
      <fault message="tns:InvalidJobStateException" name="InvalidJobStateException"/>
    </operation>
  </portType>
  <binding name="JobsServicePortBinding" type="tns:JobsService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="configuration">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="publications">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="InvalidJobStateException">
        <soap:fault name="InvalidJobStateException" use="literal"/>
      </fault>
    </operation>
    <operation name="publicationsAfter">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="InvalidJobStateException">
        <soap:fault name="InvalidJobStateException" use="literal"/>
      </fault>
    </operation>
    <operation name="start">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="InvalidJobStateException">
        <soap:fault name="InvalidJobStateException" use="literal"/>
      </fault>
    </operation>
    <operation name="state">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="halt">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="listen">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="InvalidJobStateException">
        <soap:fault name="InvalidJobStateException" use="literal"/>
      </fault>
      <fault name="UnsupportedFeatureException">
        <soap:fault name="UnsupportedFeatureException" use="literal"/>
      </fault>
      <fault name="InterruptedException">
        <soap:fault name="InterruptedException" use="literal"/>
      </fault>
    </operation>
    <operation name="finish">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="InvalidJobStateException">
        <soap:fault name="InvalidJobStateException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="JobsServiceService">
    <port name="JobsServicePort" binding="tns:JobsServicePortBinding">
      <soap:address location="http://localhost:8080/orchard/json/jobs"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache></con:interface><con:properties/><con:wssContainer/></con:soapui-project>