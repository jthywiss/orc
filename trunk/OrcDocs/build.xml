<?xml version="1.0"?>
<!--
  - Original Author:  Nathan A. Good <mail@nathanagood.com>
  - Excerpted from "Build DocBook XML in Eclipse"
  - at http://www.ibm.com/developerworks/xml/library/os-eclipse-docbook/index.html
  -->

<project name="docbook-src" default="all">

	<description>
		This Ant build.xml file is used to transform DocBook XML to various other formats.
		We use it to build all the Orc documentation (User Guide and Reference Manual).
	</description>

	<!--
      - Configure basic properties that will be used in the file.
      -->
	<property name="docbook.xsl.dir" value="docbook-xsl" />
	<property name="build.dir" value="build" />
	<property name="src.dir" value="src" />
	<property name="xslthl.config" value="file://${user.dir}/${src.dir}/highlighting/xslthl-config.xml" />
	<property name="xalan.lib.dir" value="lib" />
	<property name="database.olink.dir" value="${src.dir}" />

	<!--
      - Sets up the classpath for the Xalan and Xerces implementations
      - that are to be used in this script, since the versions that ship
      - with Ant may be out of date.
      -->
	<path id="xalan.classpath">
		<fileset dir="${xalan.lib.dir}" id="xalan.fileset">
			<include name="xalan.jar" />
			<include name="xercesImpl.jar" />
			<include name="xslthl-2.0.0.jar" />
		</fileset>
	</path>

	<!--
	  - target:  all
	  -->
	<target name="all" depends="olinks,build-pdf,build-html-chunk,build-html-single,rm-build-html-chunk,rm-build-html-single" 
		description="Build all documentation" />
	
	<!--
      - target:  usage
      -->
	<target name="usage" description="Prints the Ant build.xml usage">
		<echo message="Use -projecthelp to get a list of the available targets." />
	</target>

	<!--
      - target:  clean
      -->
	<target name="clean" description="Cleans up generated files.">
		<delete dir="${build.dir}" />
	</target>
	
	<!--
	  - target:  test
	  -->
	<target name="test" depends="clean,olinks,rm-build-html-chunk,build-html-single" description="Test build for modifications.">
		<echo message="Test build complete" />
	</target>
	
	<!--
      - target:  depends
      -->
	<target name="depends">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/html" />
		<mkdir dir="${build.dir}/pdf" />
		<mkdir dir="${build.dir}/fo" />
		<mkdir dir="${build.dir}/pdf/refmanual" />
	</target>
	
	<!--
      - target:  xinclude
      -->
	<target name="xinclude" depends="depends">
		<taskdef name="xinclude" classname="gr.abiss.xcluder.XercesXcluder">
			<classpath>
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</taskdef>
		<xinclude in="${src.dir}/root.xml" out="${src.dir}/all.xml" />
	</target>
	
	<!--
	  - target:  olinks
	  -->
	<target name="olinks" depends="xinclude" description="Builds the olink databases for mutual linking between documents">
		<echo message="Creating olink databases..."/>
		<!-- Create database of links for user guide -->
		<xslt style="${src.dir}/xsl/orc.xsl"
				basedir="${src.dir}" destdir="${build.dir}/html"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="root.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.userguide.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- Create database of links for reference manual homepage (TOC) -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="root_ref.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.refmanual.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>

		<!-- Create olink databases for modular chapters/sections -->
		<!-- ref.class -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.class.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.class.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.combinators.otherwise -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.combinators.otherwise.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.combinators.otherwise.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.combinators.parallel -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.combinators.parallel.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.combinators.parallel.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.combinators.pruning -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.combinators.pruning.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.combinators.pruning.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.combinators.sequential -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.combinators.sequential.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.combinators.sequential.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.combinators -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.combinators.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.combinators.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.concepts.reap -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.concepts.reap.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.concepts.reap.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.concepts -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.concepts.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.concepts.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.data.boolean -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.data.boolean.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.data.boolean.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.data.datatype -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.data.datatype.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.data.datatype.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.data.external -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.data.external.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.data.external.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.data.list -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.data.list.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.data.list.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.data.mutable -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.data.mutable.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.data.mutable.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.data.numeric -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.data.numeric.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.data.numeric.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.data.record -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.data.record.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.data.record.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!--  ref.data.signal -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.data.signal.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.data.signal.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.data.string -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.data.string.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.data.string.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.data.tuple -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.data.tuple.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.data.tuple.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.data -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.data.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.data.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.declarations.class -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.declarations.class.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.declarations.class.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.declarations.include -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.declarations.include.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.declarations.include.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.declarations.site -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.declarations.site.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.declarations.site.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.declarations.type -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.declarations.type.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.declarations.type.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.declarations -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.declarations.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.declarations.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.examples.concept -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.examples.concept.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.examples.concept.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.expressions.ifthenelse -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.expressions.ifthenelse.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.expressions.ifthenelse.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.expressions.lambda -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.expressions.lambda.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.expressions.lambda.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.expressions.operators -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.expressions.operators.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.expressions.operators.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.expressions.val -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.expressions.val.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.expressions.val.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.expressions -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.expressions.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.expressions.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.functions.clausal -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.functions.clausal.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.functions.clausal.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.functions.closure -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.functions.closure.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.functions.closure.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.functions.lambda -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.functions.lambda.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.functions.lambda.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.functions.recursion -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.functions.recursion.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.functions.recursion.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.functions -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.functions.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.functions.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.patterns.as -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.patterns.as.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.patterns.as.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.patterns.call -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.patterns.call.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.patterns.call.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.patterns.cons -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.patterns.cons.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.patterns.cons.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.patterns.constant -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.patterns.constant.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.patterns.constant.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.patterns.list -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.patterns.list.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.patterns.list.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.patterns.tuple -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.patterns.tuple.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.patterns.tuple.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.patterns.variable -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.patterns.variable.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.patterns.variable.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.patterns.wildcard -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.patterns.wildcard.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.patterns.wildcard.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.patterns -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.patterns.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.patterns.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.sites.custom -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.sites.custom.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.sites.custom.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.sites.java -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.sites.java.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.sites.java.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.sites.library -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.sites.library.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.sites.library.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.sites.operators -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.sites.operators.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.sites.operators.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.sites.web -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.sites.web.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.sites.web.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.sites -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.sites.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.sites.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.stdlib.core -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.stdlib.core.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.stdlib.core.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.stdlib.idioms -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.stdlib.idioms.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.stdlib.idioms.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.stdlib.list -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.stdlib.list.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.stdlib.list.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.stdlib.reflect -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.stdlib.reflect.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.stdlib.reflect.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.stdlib.state -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.stdlib.state.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.stdlib.state.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.stdlib.text -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.stdlib.text.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.stdlib.text.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.stdlib.time -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.stdlib.time.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.stdlib.time.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.stdlib.util -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.stdlib.util.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.stdlib.util.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.stdlib -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.stdlib.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.stdlib.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.syntax.EBNF -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.syntax.EBNF.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.syntax.EBNF.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.syntax.keywords -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.syntax.keywords.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.syntax.keywords.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.syntax.lexical -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.syntax.lexical.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.syntax.lexical.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.syntax -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.syntax.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.syntax.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.time.rtimer -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.time.rtimer.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.time.rtimer.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.time -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.time.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.time.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
		<!-- ref.types -->
		<xslt style="${src.dir}/xsl/orc.xsl" 
				basedir="${src.dir}/refmanual/content" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="ref.types.xml" />
			<classpath refid="xalan.classpath" />
			<param name="collect.xref.targets" expression="only" />
			<param name="targets.filename" expression="targets.ref.types.db"/>
			<param name="user.dir" expression="${user.dir}" />
		</xslt>
	</target>
	
	<!--
      - target:  build-html-chunk
      -->
	<target name="build-html-chunk" depends="xinclude" description="Generates chunked User Guide HTML doc">
		<xslt style="${src.dir}/xsl/html-chunk.xsl" extension=".html" 
				basedir="${src.dir}" destdir="${build.dir}/html"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="all.xml" />
			<classpath refid="xalan.classpath" />
			<param name="orc.demo" expression="1"/>
			<param name="section.autolabel" expression="1"/>
			<param name="section.label.includes.component.label" expression="1"/>
			<param name="section.autolabel.max.depth" expression="8"/>
			<param name="chunk.quietly" expression="1"/>
			
			<param name="target.database.document" expression="../${database.olink.dir}/olinkdb.xml"/>
			<param name="current.docid" expression="root"/> 
			
			<param name="highlight.source" expression="1"/>
			<param name="highlight.default.language" expression="orc"/>
			<param name="highlight.xslthl.config" expression="${xslthl.config}" />
		</xslt>
		<!-- Delete this because it confuses build-html-single otherwise -->
		<delete file="${build.dir}/html/all.html" />
		<!-- Copy the stylesheet and navigational images -->
		<copy todir="${build.dir}/html/refmanual">
			<fileset dir="css">
				<include name="style.css" />
			</fileset>
		</copy>
		<copy todir="${build.dir}/html/refmanual/images">
			<fileset dir="src/xsl/images"/>
		</copy>
	</target>
		
	<!--
      - target:  rm-build-html-chunk
      -->
	<target name="rm-build-html-chunk" depends="xinclude" description="Generates chunked Reference Manual HTML doc">
		<!-- Hack to make sure the ref manual builds every time -->
		<copy file="${src.dir}/refmanual/root_ref.xml" tofile="${src.dir}/refmanual/refmanual.xml"/>
		
		<xslt style="${src.dir}/xsl/html-chunk.xsl" extension=".html" 
				basedir="${src.dir}/refmanual" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="refmanual.xml" />
			<classpath refid="xalan.classpath" />
			<param name="orc.demo" expression="0"/>
			<param name="section.autolabel" expression="1"/>
			<param name="section.label.includes.component.label" expression="1"/>
			<param name="section.autolabel.max.depth" expression="2"/>
			<param name="chunk.first.sections" expression="1"/>
			<param name="chapter.autolabel" expression="1"/>
			<param name="generate.toc" expression="
				book      toc
				chapter	  toc
			"/>
			<param name="toc.section.depth" expression="1" />
			<param name="header.rule" expression="0"/>
			<param name="use.id.as.filename" expression="1" />
			
			<param name="chunk.quietly" expression="1"/>
			<param name="chunk.section.depth" expression="1"/>
			<param name="suppress.footer.navigation" expression="1"/>
			<param name="navig.graphics" expression="1"/>
			
			<param name="target.database.document" expression="../../${database.olink.dir}/olinkdb.xml"/>
			<param name="current.docid" expression="refmanual"/> 
			
			<param name="highlight.source" expression="1"/>
			<param name="highlight.default.language" expression="orc"/>
			<param name="highlight.xslthl.config" expression="${xslthl.config}" />
		</xslt>
		<!-- Delete this because it confuses rm-build-html-single otherwise -->
		<delete file="${build.dir}/html/refmanual/refmanual.html" />
		<!-- Copy the stylesheet and navigational images -->
		<copy todir="${build.dir}/html/refmanual">
			<fileset dir="css">
				<include name="style.css" />
			</fileset>
		</copy>
		<copy todir="${build.dir}/html/refmanual/images">
			<fileset dir="src/xsl/images"/>
		</copy>
	</target>
	
	<!--
      - target:  build-html-single
      -->
	<target name="build-html-single" depends="xinclude" description="Generates single User Guide HTML doc">
		<xslt style="${src.dir}/xsl/html-single.xsl" extension=".html" 
				basedir="${src.dir}" destdir="${build.dir}/html"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="all.xml" />
			<classpath refid="xalan.classpath" />
			<param name="orc.demo" expression="1"/>
			<param name="section.autolabel" expression="1"/>
			<param name="section.label.includes.component.label" expression="1"/>
			<param name="section.autolabel.max.depth" expression="8"/>
			
			<param name="target.database.document" expression="../${database.olink.dir}/olinkdb.xml"/>
			<param name="current.docid" expression="root"/> 
			
			<param name="highlight.source" expression="1"/>
			<param name="highlight.default.language" expression="orc"/>
			<param name="highlight.xslthl.config" expression="${xslthl.config}" />
		</xslt>
		<copy todir="${build.dir}/html">
			<fileset dir="css">
				<include name="style.css" />
			</fileset>
		</copy>
	</target>

	<!--
	  - target:  rm-build-html-single
	  -->
	<target name="rm-build-html-single" depends="xinclude" description="Generates single Reference Manual HTML doc">
		<!-- Hack to make sure the ref manual builds every time -->
		<copy file="${src.dir}/refmanual/root_ref.xml" tofile="${src.dir}/refmanual/refmanual.xml"/>
		<xslt style="${src.dir}/xsl/html-single.xsl" extension=".html" 
				basedir="${src.dir}/refmanual" destdir="${build.dir}/html/refmanual"
				processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
			<include name="refmanual.xml" />
			<classpath refid="xalan.classpath" />
			<param name="orc.demo" expression="1"/>
			<param name="section.autolabel" expression="0"/>
			<param name="section.label.includes.component.label" expression="1"/>
			<param name="section.autolabel.max.depth" expression="8"/>
			<param name="chapter.autolabel" expression="0"/>
			
			<param name="target.database.document" expression="file://${user.dir}/${database.olink.dir}/olinkdb.xml"/>
			<param name="current.docid" expression="refmanual"/>
			<param name="generate.toc" expression="book toc"/>
			
			<param name="highlight.source" expression="1"/>
			<param name="highlight.default.language" expression="orc"/>
			<param name="highlight.xslthl.config" expression="${xslthl.config}" />
		</xslt>
		<copy todir="${build.dir}/html/refmanual">
			<fileset dir="css">
				<include name="style.css" />
			</fileset>
		</copy>
	</target>
	
	<!--
	    - target:  build-pdf
	    - description:  Iterates through a directory and transforms
	    -     .xml files into .fo files which can then be turned into a PDF document
	    -->
	<target name="build-pdf" depends="xinclude" 
		    description="Generates PDF files from DocBook XML">
	    <xslt style="${src.dir}/xsl/fo.xsl" extension=".fo" 
			basedir="${src.dir}" destdir="${build.dir}/fo"
			processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
	        <classpath refid="xalan.classpath" />
	    	<param name="section.autolabel" expression="1"/>
	    	<param name="section.label.includes.component.label" expression="1"/>
	    	<param name="section.autolabel.max.depth" expression="8"/>
		<!-- default to indented layout to match HTML dl -->
	    	<param name="variablelist.as.blocks" expression="1"/>
		<!-- when table layout is used, default to 12em width for terms -->
		<param name="variablelist.max.termlength" expression="12"/>
	        <include name="all.xml" />
	        	
		<param name="highlight.source" expression="1"/>
		<param name="highlight.default.language" expression="orc"/>
	    	<param name="highlight.xslthl.config" expression="${xslthl.config}" />
	    </xslt>

	    <property name="fop.home" value="lib/fop" />

	    <taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
	        <classpath>
	            <fileset dir="${fop.home}/lib">
	                <include name="*.jar" />
	            </fileset>
	            <fileset dir="${fop.home}/build">
	                <include name="fop.jar" />
	                <include name="fop-hyph.jar" />
	            </fileset>
	        </classpath>
	    </taskdef>

	    <fop format="application/pdf" fofile="${build.dir}/fo/all.fo" 
	        outfile="${build.dir}/pdf/all.pdf" />
	</target>
	
	<!--
	    - target:  rm-build-pdf
	    - description:  Iterates through a directory and transforms
	    -     .xml files into .fo files which can then be turned into a PDF document
	    -->
	<target name="rm-build-pdf" depends="xinclude" 
		    description="Generates PDF files from DocBook XML for the reference manual">
	    <xslt style="${src.dir}/xsl/fo.xsl" extension=".fo" 
			basedir="${src.dir}/refmanual" destdir="${build.dir}/fo/refmanual"
			processor="org.apache.tools.ant.taskdefs.optional.TraXLiaison">
	        <classpath refid="xalan.classpath" />
	    	<param name="section.autolabel" expression="1"/>
	    	<param name="section.label.includes.component.label" expression="1"/>
	    	<param name="section.autolabel.max.depth" expression="8"/>
	    	<param name="toc.section.depth" expression="1" />
		<!-- default to indented layout to match HTML dl -->
	    	<param name="variablelist.as.blocks" expression="1"/>
		<!-- when table layout is used, default to 12em width for terms -->
		<param name="variablelist.max.termlength" expression="12"/>
	        <include name="root_ref.xml" />
	        
		<param name="target.database.document" expression="file://${user.dir}/${database.olink.dir}/olinkdb.xml"/>	
		<param name="current.docid" expression="refmanual"/>
			
		<param name="highlight.source" expression="1"/>
		<param name="highlight.default.language" expression="orc"/>
	    	<param name="highlight.xslthl.config" expression="${xslthl.config}" />
	    </xslt>

	    <property name="fop.home" value="lib/fop" />

	    <taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
	        <classpath>
	            <fileset dir="${fop.home}/lib">
	                <include name="*.jar" />
	            </fileset>
	            <fileset dir="${fop.home}/build">
	                <include name="fop.jar" />
	                <include name="fop-hyph.jar" />
	            </fileset>
	        </classpath>
	    </taskdef>

	    <fop format="application/pdf" fofile="${build.dir}/fo/refmanual/root_ref.fo" 
	        outfile="${build.dir}/pdf/refmanual/root_ref.pdf" />
	</target>
	
</project>