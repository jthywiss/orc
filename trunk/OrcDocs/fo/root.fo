<?xml version="1.0" encoding="UTF-8"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" font-family="serif,Symbol,ZapfDingbats" font-size="10pt" text-align="justify" line-height="normal" font-selection-strategy="character-by-character" line-height-shift-adjustment="disregard-shifts" language="en"><fo:layout-master-set><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="blank"><fo:region-body margin-top="0.5in" margin-bottom="0.5in" display-align="center" region-name="blank-body"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-blank"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-blank"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-first"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-odd"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-even"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-first"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-odd"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-even"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-first"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-odd"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-even"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-first"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-odd"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-even"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-first"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-odd"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-even"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-first"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-odd"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-even"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="blank-draft"><fo:region-body margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-blank"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-blank"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-first-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-odd-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-even-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-first-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-odd-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-even-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-first-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-odd-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-even-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-first-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-odd-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-even-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-first-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-odd-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-even-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-first-draft"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-odd-draft"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-left="1in" margin-right="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-even-draft"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:page-sequence-master master-name="titlepage"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="titlepage-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="titlepage-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="lot-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="lot-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="front-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="front-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="body-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="body-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="back-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="back-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="index-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="index-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="titlepage-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="titlepage-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="titlepage-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="lot-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="lot-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="front-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="front-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="body-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="body-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="back-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="back-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="index-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="index-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master></fo:layout-master-set><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" master-reference="lot" hyphenate="true" language="en" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="toc...N2000B"><fo:block><fo:block><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" font-size="17.28pt" start-indent="0pt" margin-left="0pt" space-after="0.5em" space-before.maximum="2em" space-before.optimum="1.5em" space-before.minimum="1em">Table of Contents</fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N2000E">1. The Orc Programming Language</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N2000E"><fo:page-number-citation ref-id="N2000E"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.N2000B.N2000E" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20012">1.1. Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20012"><fo:page-number-citation ref-id="N20012"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20028">1.2. Cor: A Functional Subset</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20028"><fo:page-number-citation ref-id="N20028"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.N2000B.N20028" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20228">1.2.1. Constants</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20228"><fo:page-number-citation ref-id="N20228"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="language.base.oeprators">1.2.2. Operators</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="language.base.oeprators"><fo:page-number-citation ref-id="language.base.oeprators"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N203CC">1.2.3. Conditionals</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N203CC"><fo:page-number-citation ref-id="N203CC"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N204A4">1.2.4. Variables</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N204A4"><fo:page-number-citation ref-id="N204A4"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N204E3">1.2.5. Data Structures</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N204E3"><fo:page-number-citation ref-id="N204E3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20584">1.2.6. Patterns</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20584"><fo:page-number-citation ref-id="N20584"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N205FF">1.2.7. Functions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N205FF"><fo:page-number-citation ref-id="N205FF"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N206E5">1.2.8. Comments</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N206E5"><fo:page-number-citation ref-id="N206E5"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20700">1.3. Orc: Orchestrating services</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20700"><fo:page-number-citation ref-id="N20700"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.N2000B.N20700" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20806">1.3.1. Communicating with external services</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20806"><fo:page-number-citation ref-id="N20806"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20854">1.3.2. The concurrency combinators of Orc</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20854"><fo:page-number-citation ref-id="N20854"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N2092E">1.3.3. Changes to functional expressions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N2092E"><fo:page-number-citation ref-id="N2092E"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N209E5">1.3.4. Time</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N209E5"><fo:page-number-citation ref-id="N209E5"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N209EB">1.4. Advanced Features of Orc</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N209EB"><fo:page-number-citation ref-id="N209EB"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.N2000B.N209EB" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20B3C">1.4.1. Special call forms</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20B3C"><fo:page-number-citation ref-id="N20B3C"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20BB1">1.4.2. Special patterns</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20BB1"><fo:page-number-citation ref-id="N20BB1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20C2A">1.4.3. Special declarations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20C2A"><fo:page-number-citation ref-id="N20C2A"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20C66">1.4.4. The after combinator</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20C66"><fo:page-number-citation ref-id="N20C66"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20CAE">2. Programming Methodology</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20CAE"><fo:page-number-citation ref-id="N20CAE"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chapter.services">3. Accessing and Creating External Services</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="chapter.services"><fo:page-number-citation ref-id="chapter.services"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20CBB">A. Complete Syntax of Orc</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20CBB"><fo:page-number-citation ref-id="N20CBB"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="appendix.library">B. Standard Library</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="appendix.library"><fo:page-number-citation ref-id="appendix.library"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20FD8">C. FAQ</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20FD8"><fo:page-number-citation ref-id="N20FD8"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:flow></fo:page-sequence>

<fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" master-reference="body" hyphenate="true" language="en" format="1" initial-page-number="1" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>The Orc Programming Language</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>The Orc Programming Language</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="N2000E"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-weight="bold" font-size="24.8832pt"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="left" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 1. The Orc Programming Language</fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block id="N20012"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="20.735999999999997pt">1.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Orc is a programming language designed to make distributed and
concurrent programs simple and intuitive to write. Orc expresses
orchestration, a type of structured concurrency. It emphasizes the
flow of control and gives a global view of a concurrent system. Orc
is well-suited for task orchestration, a form of
concurrent programming with applications in workflow, business process
management, and web service orchestration. Orc provides constructs to
orchestrate the concurrent invocation of services while managing
time-outs, priorities, and failures of services or communication.  To
learn more about Orc and run your own Orc programs, visit the website:
<fo:basic-link xmlns:xlink="http://www.w3.org/1999/xlink" external-destination="url(http://orc.csres.utexas.edu/)"><fo:inline font-family="monospace">http://orc.csres.utexas.edu/</fo:inline></fo:basic-link>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
This chapter describes the Orc programming language in three steps. In Section 1.2, we
discuss a small subset of Orc called Cor. Cor is a pure functional language,
which has no features for concurrency, has no state, and does not communicate 
with external services. Cor introduces us to the parts of Orc that are most familiar 
from existing programming languages, such as arithmetic operations, variables,
conditionals, and functions.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Next, in Section 1.3, we consider Orc itself, which in addition to Cor, comprises 
external services and combinators for concurrent orchestration of those services. 
We show how Orc interacts with these external services, how the combinators can be
used to build up complex orchestrations from simple base expressions, and how the 
functional constructs of Cor take on new, subtler behaviors in the concurrent 
context of Orc.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Finally, in Section 1.4, we discuss some additional features of Orc that extend 
the basic syntax. These are useful for creating large-scale Orc programs, but 
they are not essential to the understanding of the language.
</fo:block>
 
</fo:block> 


<fo:block id="N20028"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Cor: A Functional Subset</fo:marker><fo:block font-size="20.735999999999997pt">1.2. Cor: A Functional Subset</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>



 
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In this section we introduce Cor, a pure functional subset of the Orc language.
Users of functional programming languages such as Haskell and ML will already be 
familiar with many of the key concepts of Cor.  
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A Cor program is called an <fo:inline font-style="italic">expression</fo:inline>. Cor expressions are built
up recursively from smaller expressions. Cor <fo:inline font-style="italic">evaluates</fo:inline> an expression
to reduce it to some simple <fo:inline font-style="italic">value</fo:inline> which cannot be evaluated further, 
for example a list of numbers or a Boolean truth value. This value is called the <fo:inline font-style="italic">
result</fo:inline> of the expression.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In the following subsections we introduce the concepts of Cor. First, we talk about
simple constants, such as numbers and truth values, and the operations that we can perform
on those values. Then we introduce conditionals (<fo:inline font-family="monospace">if then else</fo:inline>). Then we 
introduce variables and binding, as a way to give a name to the value of an expression. 
After that, we talk about constructing data structures, and examining those structures
using patterns. Lastly, we introduce functions.
</fo:block> 

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The following figure describes the syntax of Cor. Each part of the syntax is explained 
in a subsequent section.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">

<fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="cor-ebnf-table" xmlns:rx="http://www.renderx.com/XSL/Extensions"><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="none" border-right-style="none" border-top-style="none" border-bottom-style="none" table-layout="fixed" width="80%"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-column column-number="3" column-width="proportional-column-width(10)"/><fo:table-column column-number="4" column-width="proportional-column-width(4)"/><fo:table-column column-number="5" column-width="proportional-column-width(7)"/><fo:table-body end-indent="0pt" start-indent="0pt"><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Expression</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>C</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">constant value</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>E <fo:inline font-style="italic">op</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">operator</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>X</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">variable</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">if</fo:inline> E <fo:inline font-family="monospace">then</fo:inline> E <fo:inline font-family="monospace">else</fo:inline> E </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">conditional</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>X<fo:inline font-family="monospace">(</fo:inline> E <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> E <fo:inline font-family="monospace">)</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">function call</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">(</fo:inline> E <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> E <fo:inline font-family="monospace">)</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">tuple</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">[</fo:inline> E <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> E <fo:inline font-family="monospace">]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">list</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>D E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">scoped declaration</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>C</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">true</fo:inline> | <fo:inline font-family="monospace">false</fo:inline> | <fo:inline font-style="italic">integer</fo:inline> | <fo:inline font-style="italic">string</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Constant</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>X</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">identifier</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Variable</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>D</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Declaration</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">val</fo:inline> P <fo:inline font-family="monospace">=</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">value declaration</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">def</fo:inline> X<fo:inline font-family="monospace">(</fo:inline> P <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> P <fo:inline font-family="monospace">)</fo:inline> <fo:inline font-family="monospace">=</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">function declaration</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>P</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Pattern</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>X</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">variable</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>C</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">constant</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">_</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">wildcard</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">(</fo:inline> P <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> P <fo:inline font-family="monospace">)</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">tuple</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">[</fo:inline> P <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> P <fo:inline font-family="monospace">]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">list</fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>
</fo:block>



<fo:block id="N20228"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Constants</fo:marker><fo:block font-size="17.28pt">1.2.1. Constants</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The simplest expression one can write is a constant. It evaluates trivially
to that constant value. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">

Cor has three types of constants, and thus for the moment three types of values:

<fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N20231"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20233"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
Integers: <fo:inline font-family="monospace"> ... -1, 0, 1 ... </fo:inline>
</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20239"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
Booleans: <fo:inline font-family="monospace">true</fo:inline> and <fo:inline font-family="monospace">false</fo:inline>
</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20242"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
Strings: <fo:inline font-family="monospace">"orc"</fo:inline>, <fo:inline font-family="monospace">"ceci n'est pas une |"</fo:inline>
</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

</fo:block>

<fo:block id="language.base.oeprators"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Operators</fo:marker><fo:block font-size="17.28pt">1.2.2. Operators</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Cor has a standard set of arithmetic, logical, and comparison operators.
As in most other programming languages, they are written in the usual 
infix style. They have Java-like operator precedence, which can be
overridden by adding parentheses.  
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N20258"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2025C"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">1+2</fo:inline> evaluates to <fo:inline font-family="monospace">3</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20264"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">(98+2)*17</fo:inline> evaluates to <fo:inline font-family="monospace">1700</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2026C"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">4 = 20 / 5</fo:inline> evaluates to <fo:inline font-family="monospace">true</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20274"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">3-5 &gt;= 5-3 </fo:inline> evaluates to <fo:inline font-family="monospace">false</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2027C"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">true &amp;&amp; (false || true)</fo:inline> evaluates to <fo:inline font-family="monospace">true</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20284"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">"leap" + "frog"</fo:inline> evaluates to <fo:inline font-family="monospace">"leapfrog"</fo:inline>.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Here is the full set of operators that Cor supports:

<fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="ops-table" xmlns:rx="http://www.renderx.com/XSL/Extensions"><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="none" border-right-style="none" border-top-style="none" border-bottom-style="none" table-layout="fixed" width="95%"><fo:table-column column-number="1"/><fo:table-column column-number="2" column-width="proportional-column-width(4)"/><fo:table-column column-number="3"/><fo:table-column column-number="4" column-width="proportional-column-width(6)"/><fo:table-column column-number="5"/><fo:table-column column-number="6" column-width="proportional-column-width(3)"/><fo:table-column column-number="7"/><fo:table-column column-number="8" column-width="proportional-column-width(4)"/><fo:table-header end-indent="0pt" start-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block font-weight="bold">Arithmetic</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block font-weight="bold">Comparison</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block font-weight="bold">Logical</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block font-weight="bold">String</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body end-indent="0pt" start-indent="0pt"><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">+</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>addition</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">=</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>equality</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">&amp;&amp;</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>logical and</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">+</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>concatenation</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">-</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>subtraction</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">/=</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>inequality</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">||</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>logical or</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">*</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>multiplication</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">&lt;</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>less than</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">~</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>logical not</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">/</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>division</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">&gt;</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>greater than</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">%</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>modulus</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">&lt;=</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>less than or equal</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">&gt;=</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>greater than or equal</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>

</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The <fo:inline font-family="monospace">=</fo:inline> operator can compare values of any type.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N20398"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2039C"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">10 = true</fo:inline> evaluates to <fo:inline font-family="monospace">false</fo:inline>.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Sometimes, there are situations where an expression is stuck, because it is attempting to perform 
some impossible operation and cannot reach a value. If this is the case, we say that the expression
is <fo:inline font-style="italic">silent</fo:inline>. An expression is also silent if it depends on the result of a silent 
subexpression.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N203AE"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N203B2"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">10 / 0</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N203B7"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">6 + false</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N203BC"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">3 + 1/0</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N203C1"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">4 + true = 5</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Note that Cor is a dynamically typed language. It does not statically check the type correctness
of an expression; instead, an expression with a type error is simply silent when evaluated.
</fo:block>

</fo:block>


<fo:block id="N203CC"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Conditionals</fo:marker><fo:block font-size="17.28pt">1.2.3. Conditionals</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A conditional expression in Cor is of the form 
<fo:inline font-family="monospace">if</fo:inline> E <fo:inline font-family="monospace">then</fo:inline> F <fo:inline font-family="monospace">else</fo:inline> G. 
Its meaning is similar to that in other languages: the value
of the expression is the value of F if and only if E evaluates to true, 
or the value of G if and only if E evaluates to false. Note that G is not
evaluated at all if E evaluates to true, and similarly F is not evaluated
at all of E evaluates to false. Thus, for example, evaluation of 
<fo:inline font-family="monospace">if 3 = 3 then 5 else 1/0</fo:inline> does not cause any error. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Unlike other languages, expressions in Cor may be silent. If E is
silent, then the entire expression is silent. And if E evaluates to true 
but F is silent (or if E evaluates to false and G is silent) then the 
expression is silent.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The behavior of conditionals is summarized by the following table
(<fo:inline font-style="italic">v</fo:inline> denotes a value).

<fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="cond-table" xmlns:rx="http://www.renderx.com/XSL/Extensions"><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="none" border-right-style="none" border-top-style="none" border-bottom-style="none" table-layout="fixed" width="80%"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-column column-number="3"/><fo:table-column column-number="4" column-width="proportional-column-width(3)"/><fo:table-header end-indent="0pt" start-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block font-weight="bold">E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block font-weight="bold">F</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block font-weight="bold">G</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block font-weight="bold"><fo:inline font-family="monospace">if</fo:inline> E <fo:inline font-family="monospace">then</fo:inline> F <fo:inline font-family="monospace">else</fo:inline> G</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body end-indent="0pt" start-indent="0pt"><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-family="monospace">true</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-style="italic">v</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-style="italic">v</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-family="monospace">true</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-family="monospace">false</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-style="italic">v</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-style="italic">v</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-family="monospace">false</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>

</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N20481"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20485"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">if true then 4 else 5</fo:inline> evaluates to <fo:inline font-family="monospace">5</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2048D"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">if  2 &lt; 3 &amp;&amp; 5 &lt; 4  then "blue" else "green"</fo:inline> evaluates to "green".</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20492"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">if  true || "fish"  then "yes" else "no"</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20497"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">if  false || false  then 4+true else 4+5</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2049C"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">if 0 &lt; 5 then 0/5 else 5/0</fo:inline> evaluates to 0.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>


</fo:block>


<fo:block id="N204A4"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Variables</fo:marker><fo:block font-size="17.28pt">1.2.4. Variables</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A <fo:inline font-style="italic">variable</fo:inline> names the value of some expression so that we can use it later.
Expression <fo:inline font-family="monospace">x</fo:inline>, where x is some variable name, evaluates to the result <fo:inline font-style="italic">bound</fo:inline>
to the variable x.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Variables are bound using a <fo:inline font-style="italic">declaration</fo:inline>. A declaration is a statement that has no value 
of its own but instead binds one or more variables. The simplest form of declaration is <fo:inline font-family="monospace">val</fo:inline>, which 
evaluates an expression and binds its result to a variable. Declarations follow the rules of 
<fo:basic-link xmlns:xlink="http://www.w3.org/1999/xlink" external-destination="url(http://en.wikipedia.org/wiki/Lexical_scope)">lexical scoping</fo:basic-link><fo:inline xmlns:xlink="http://www.w3.org/1999/xlink" hyphenate="false"> [<fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/Lexical_scope)">http://en.wikipedia.org/wiki/Lexical_scope</fo:basic-link>]</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N204C3">
val x = 1 + 2 + 3 + 4 + 5
val y = x + x
</fo:block>

These declarations bind variable <fo:inline font-family="monospace">x</fo:inline> to 15 and variable <fo:inline font-family="monospace">y</fo:inline> to 30.
</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
If the expression on the right side of a <fo:inline font-family="monospace">val</fo:inline> is silent, then the variable is not bound, but 
evaluation of other declarations and expressions can continue. If an evaluated expression depends on that
variable, that expression is silent.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N204D2">
val x = 1/0
val y = 4+5
if false then x else y
</fo:block>

Evaluation of the declaration and <fo:inline font-family="monospace">val y = 4+5</fo:inline> and the expression <fo:inline font-family="monospace">if false then x else y</fo:inline>
may continue even though <fo:inline font-family="monospace">x</fo:inline> is not bound. The expression evaluates to 9.

</fo:block>



</fo:block>


<fo:block id="N204E3"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Data Structures</fo:marker><fo:block font-size="17.28pt">1.2.5. Data Structures</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Cor supports two basic data structures, <fo:inline font-style="italic">tuples</fo:inline> and <fo:inline font-style="italic">lists</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A <fo:inline font-style="italic">tuple expression</fo:inline> is a comma-separated sequence of at least two 
expressions, enclosed by parentheses. Each expression is evaluated; the value of the whole 
tuple expression is a tuple value containing each of these values in order. 
If any of the expressions is silent, then the whole tuple expression is silent.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N204F8"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N204FC"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">(1+2, 7)</fo:inline> evaluates to <fo:inline font-family="monospace">(3,7)</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20504"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace"> ("true" + "false", true || false, true &amp;&amp; false) </fo:inline> evaluates to <fo:inline font-family="monospace">("truefalse", true, false)</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2050C"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">(2/2, 2/1, 2/0)</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A <fo:inline font-style="italic">list expression</fo:inline> is a comma-separated sequence of expressions enclosed by
square brackets. It may be of any length, including zero. Each expression is evaluated; the value 
of the whole list expression is a list value containing each of these values in order.   
If any of the expressions is silent, then the whole list expression is silent.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N2051B"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2051F"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">[1,2+3] </fo:inline> evaluates to <fo:inline font-family="monospace">[1,5]</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20527"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace"> [true &amp;&amp; true]  </fo:inline> evaluates to <fo:inline font-family="monospace">[true]</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2052F"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">[]</fo:inline> evaluates trivially to <fo:inline font-family="monospace">[]</fo:inline>, the empty list.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20537"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">[5, 5 + true, 5]</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
There is also a concatenation (<fo:inline font-style="italic">cons</fo:inline>) operation on lists,
written <fo:inline font-style="italic">h</fo:inline><fo:inline font-family="monospace">:</fo:inline><fo:inline font-style="italic">t</fo:inline>, where <fo:inline font-style="italic">h</fo:inline>
and <fo:inline font-style="italic">t</fo:inline> are expressions. Its result is a new list whose first element is the 
result of <fo:inline font-style="italic">h</fo:inline> and whose remaining elements are the list result of
<fo:inline font-style="italic">t</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N20559"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2055D"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">(1+3):[2+5,6]</fo:inline> evaluates to <fo:inline font-family="monospace">[4,7,6]</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20565"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">2:2:5:[] </fo:inline> evaluates to <fo:inline font-family="monospace">[2,2,5]</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2056D"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Suppose <fo:inline font-family="monospace">t</fo:inline> is bound to [3,5]. Then <fo:inline font-family="monospace">1:t</fo:inline> evaluates to <fo:inline font-family="monospace">[1,3,5]</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20579"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">2:3</fo:inline> is silent, because <fo:inline font-family="monospace">3</fo:inline> is not a list.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>


</fo:block>

<fo:block id="N20584"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Patterns</fo:marker><fo:block font-size="17.28pt">1.2.6. Patterns</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
We have seen how to construct data structures. But how do we examine them, and use them? We use <fo:inline font-style="italic">patterns</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A pattern is a powerful way to bind variables. When writing <fo:inline font-family="monospace">val</fo:inline> declarations, instead of just
binding one variable, we can replace the variable name with a more complex pattern that follows the structure of the
value, and matches its components. A pattern's structure is called its <fo:inline font-style="italic">shape</fo:inline>; a
pattern may take the shape of any structured value. A pattern can hierarchically match a value, going deep into its 
structure. It can also bind an entire structure to a variable.

</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N20599"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2059D"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">val (x,y) = (2+3,2*3)</fo:inline> binds <fo:inline font-family="monospace">x</fo:inline> to 5 and <fo:inline font-family="monospace">y</fo:inline> to 6.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N205A8"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
<fo:inline font-family="monospace">val [a,b,c] = ["one", "two", "three"]</fo:inline> binds <fo:inline font-family="monospace">a</fo:inline> to "one", 
<fo:inline font-family="monospace">b</fo:inline> to "two", and <fo:inline font-family="monospace">c</fo:inline> to "three".
</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N205B7"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
<fo:inline font-family="monospace">val ((a,b),c) = ((1, true), (2, false))</fo:inline> binds <fo:inline font-family="monospace">a</fo:inline> to 1, <fo:inline font-family="monospace">b</fo:inline> to <fo:inline font-family="monospace">true</fo:inline>,
and <fo:inline font-family="monospace">c</fo:inline> to <fo:inline font-family="monospace">(2,false)</fo:inline>.
</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Patterns are <fo:inline font-style="italic">linear</fo:inline>; that is, a pattern may mention a variable name at most once. 
For example, <fo:inline font-family="monospace">(x,y,x)</fo:inline> is not a valid pattern.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Note that a pattern may fail to match a value, if it does not have the same shape as that value. In a <fo:inline font-family="monospace">val</fo:inline>
declaration, this has the same effect as evaluating a silent expression. No variable in the pattern is bound, and
if any one of those variables is later evaluated, it is silent.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
It is often useful to ignore parts of the value that are not relevant. We can use the
wildcard pattern, written <fo:inline font-family="monospace">_</fo:inline>, to do this; it matches any shape and binds no
variables.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N205E5"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N205E9"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">val (x,_,_) = (1,(2,2),[3,3,3])</fo:inline> binds <fo:inline font-family="monospace">x</fo:inline> to 1.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N205F1"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">val [[_,x],[_,y]] = [[1,3],[2,4]]</fo:inline> binds <fo:inline font-family="monospace">x</fo:inline> to 3 and <fo:inline font-family="monospace">y</fo:inline> to 4.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

</fo:block>

<fo:block id="N205FF"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Functions</fo:marker><fo:block font-size="17.28pt">1.2.7. Functions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Like most other programming languages, Cor has the capability to define <fo:inline font-style="italic">functions</fo:inline>,
which are expressions that have a defined name, and have some number of parameters. Functions are declared 
using the keyword <fo:inline font-family="monospace">def</fo:inline>, in the following way.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N2060B">
def add(x,y) = x+y
</fo:block>

The expression on the right of the <fo:inline font-family="monospace">=</fo:inline> is called the <fo:inline font-style="italic">body</fo:inline> of the function.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
After defining the function, we can <fo:inline font-style="italic">call</fo:inline> it. A call looks just like the left side of
the declaration except that the variable names (the <fo:inline font-style="italic">formal parameters</fo:inline>) have been 
replaced by expressions (the <fo:inline font-style="italic">actual parameters</fo:inline>). 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
To evaluate a call, we treat it as a sequence of <fo:inline font-family="monospace">val</fo:inline> declarations associating the formal
parameters with the actual parameters, followed by the body of the function. 

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20626">
{- Evaluation of add(1+2,3+4) -}
val x = 1+2
val y = 3+4
x+y
</fo:block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N2062C"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20630"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">add(10,10*10)</fo:inline> evaluates to <fo:inline font-family="monospace">110</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20638"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">add(add(5,3),5)</fo:inline> evaluates to <fo:inline font-family="monospace">13</fo:inline>.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Notice that the evaluation strategy of functions allows to call to proceed even if some of the actual
parameters to be silent, so long as the values of those actual parameters are not used in the evaluation
of the body.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20644">
def cond(b,x,y) = if b then x else y
cond(true, 3, 5/0)
</fo:block>

This evaluates to <fo:inline font-family="monospace">3</fo:inline> even though <fo:inline font-family="monospace">5/0</fo:inline> is silent, because <fo:inline font-family="monospace">y</fo:inline> is not
needed.

</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A definition or a call may have zero arguments, in which case we write <fo:inline font-family="monospace">()</fo:inline> for the arguments.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20656">
def zero() = 0
</fo:block>
</fo:block>


<fo:block id="N2065A"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.2.7.1. Recursion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Definitions can be recursive; that is, the name of a definition may be used in its own body.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20660">
def sumto(n) = if n &lt; 1 then 0 else n + sumto(n-1)
</fo:block>

Then, <fo:inline font-family="monospace">sumto(5)</fo:inline> evaluates to 15.
</fo:block>  

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Mutual recursion is also supported.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20669">
def even(n) = 
  if (n &gt; 0) then odd(n-1)
  else if (n &lt; 0) then odd(n+1)
  else true
def odd(n) = 
  if (n &gt; 0) then even(n-1)
  else if (n &lt; 0) then even(n+1)
  else false
</fo:block>

There is no special keyword for mutual recursion; any contiguous sequence of function declarations is assumed to be 
mutually recursive.
</fo:block>

</fo:block>

<fo:block id="N2066E"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.2.7.2. Closure</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Functions are actually values, just like any other value. Defining a function creates a special value called a 
<fo:inline font-style="italic">closure</fo:inline>; the name of the function is a variable and its bound value is the closure. Thus, 
a closure can be put into a data structure, or bound to some other variable, just like any other value.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20677">
def a(x) = x-3
def b(y) = y*4
val funs = (a,b)
</fo:block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Like any other value, a closure can be passed as an argument to another function. This means that Cor
supports <fo:inline font-style="italic">higher-order</fo:inline> functions.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20680">
def onetwosum(f) = f(1) + f(2)
def triple(x) = x * 3
</fo:block>

Then, <fo:inline font-family="monospace">onetwosum(triple)</fo:inline> is <fo:inline font-family="monospace">triple(1) + triple(2)</fo:inline>, which is <fo:inline font-family="monospace">1 * 3 + 2 * 3</fo:inline>, which evaluates to <fo:inline font-family="monospace">9</fo:inline>.

</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Since all declarations (including function declarations) in Cor are lexically scoped, these closures are
<fo:inline font-style="italic">lexical closures</fo:inline>. This means that when a closure is created, if the body of the
function contains any variables other than the formal parameters, the bindings for those variables are
stored in the closure. Then, when the closure is called, the evaluation of the function body uses those 
stored variable bindings.  
</fo:block>


</fo:block>

<fo:block id="N20697"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.2.7.3. Lambda</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Sometimes one would like to create a closure directly, without bothering to give it a name. 
There is a special keyword <fo:inline font-family="monospace">lambda</fo:inline> for this purpose. By writing a function
definition with the keyword <fo:inline font-family="monospace">lambda</fo:inline> instead of a function name, that definition
becomes an expression which evaluates to a closure. 

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206A3">
def onetwosum(f) = f(1) + f(2)

onetwosum( lambda(x) = x * 3 )
{- 
  identical to:
  def triple(x) = x * 3
  onetwosum(triple)
-}
</fo:block>

Then, <fo:inline font-family="monospace">onetwosum( lambda(x) = x * 3 )</fo:inline> evaluates to 9. 

</fo:block>

</fo:block>


<fo:block id="N206AC"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.2.7.4. Clauses</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The combination of functions and pattern matching offers a powerful capability: 
<fo:inline font-style="italic">clausal</fo:inline> definition of functions. We can define expressions which execute 
different code depending on the structure of their arguments. 
</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Here's an example.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206B8">
def sum([]) = 0
def sum(h:t) = h + sum(t)
</fo:block>

<fo:inline font-family="monospace">sum(L)</fo:inline> publishes the sum of the numbers in the list <fo:inline font-family="monospace">L</fo:inline>. It has two clauses: 
one which matches the empty list, and one which matches any nonempty list. If its argument is an empty 
list, it returns 0, the appropriate sum for an empty list. If the argument is a nonempty list, it adds 
the first element of that list to the sum of all of the other elements. In this way, it recursively finds 
the sum of the list.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A function may have multiple clauses, each of which has a sequence of patterns to match each argument, 
and a body expression. Naturally, all clauses of a function must have the same number of arguments. Any 
contiguous sequence of definitions with the same name and different arguments is interpreted as a clausal 
definition, where each individual declaration is a clause of the larger function. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
When the function is called, the clauses are tried in the order in which they appear until a match is found. 
If no clause matches, the call remains silent.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
We allow a new form of pattern which is very useful in clausal definition of functions: a constant pattern.
A constant pattern is a match only for the same constant value. We can use this to define the "base case"
of a recursive function in a straightforward way.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206CA">
{- Fibonacci numbers -}
def fib(0) = 1
def fib(1) = 1
def fib(n) = if (n &lt; 0) then 0 else fib(n-1) + fib(n-2)
</fo:block>

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206CD">
{- Take up to the first n elements from a list -}
def take(0,_) = []
def take(_,[]) = []
def take(n,h:t) = h:(take(n-1,t))
</fo:block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Mutual recursion and clausal definitions are allowed to occur together.
For example, this function takes a list and evaluates to a new list with every other element repeated:

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206D3">
def stutter([]) = []
def stutter(h:t) = h:h:mutter(t)
def mutter([]) = []
def mutter(h:t) = h:stutter(t)
</fo:block>

<fo:inline font-family="monospace">stutter([1,2,3])</fo:inline> evaluates to <fo:inline font-family="monospace">[1,1,2,3,3]</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Clauses of mutually recursive functions may also be interleaved, to make
them easier to read.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206DF">
def even(0) = true
def odd(0) = false
def even(n) = odd(if n &gt; 0 then n-1 else n+1)
def odd(n) = even(if n &gt; 0 then n-1 else n+1)
</fo:block>

</fo:block>

</fo:block>

</fo:block>

<fo:block id="N206E5"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Comments</fo:marker><fo:block font-size="17.28pt">1.2.8. Comments</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Cor has two kinds of comments.   

</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A line which begins with two dashes (<fo:inline font-family="monospace">--</fo:inline>), preceded only by whitespace, is a single line comment.
The region from the two dashes to the next encountered newline, inclusive, is ignored.  
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206F1">
-- This is a single line comment.
	 -- This is also a single line comment.
</fo:block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Multiline comments are enclosed by matching braces of the form <fo:inline font-family="monospace">{- -}</fo:inline>. 
Multiline comments may be nested. They may appear anywhere, even in the middle of an expression.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206FA">
{- 
   This is a
   multiline comment.
-}
   
{- Multiline comments {- can be nested -} -}

{- They may appear anywhere, -} 
1 + {- even in the middle of an expression. -} 2 + 3
</fo:block>

</fo:block>

</fo:block>

</fo:block>



<fo:block id="N20700"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Orc: Orchestrating services</fo:marker><fo:block font-size="20.735999999999997pt">1.3. Orc: Orchestrating services</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In this section we present the full Orc language. As in Cor, an Orc program is an 
<fo:inline font-style="italic">expression</fo:inline>; Orc expressions are built up recursively from smaller 
expressions. All Cor expressions are also Orc expressions.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Orc expressions are <fo:inline font-style="italic">executed</fo:inline>, rather than evaluated; an execution 
communicates with external services and <fo:inline font-style="italic">publishes</fo:inline> some number of 
values (possibly zero). If an execution publishes no value, it is called <fo:inline font-style="italic">silent</fo:inline>.
However, unlike silent expressions in Cor, a silent expression in Orc might perform some meaningful 
computation or communication; silence does not necessarily indicate an error.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In the following sections we discuss the features of Orc. First, we discuss how Orc
communicates with external services. Then we introduce Orc's concurrency <fo:inline font-style="italic">combinators</fo:inline>,
which combine expressions into larger orchestrations and manage concurrent executions. 
We have already discussed the functional subset of Orc in our coverage of Cor, but we
reprise some of those topics; some Cor constructs exhibit new behaviors in the 
concurrent, stateful context of Orc.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The following figure summarizes the new syntax that Orc introduces, as an extension
of the syntax of Cor.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="orc-ebnf-table" xmlns:rx="http://www.renderx.com/XSL/Extensions"><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="none" border-right-style="none" border-top-style="none" border-bottom-style="none" table-layout="fixed" width="80%"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-column column-number="3" column-width="proportional-column-width(10)"/><fo:table-column column-number="4" column-width="proportional-column-width(4)"/><fo:table-column column-number="5" column-width="proportional-column-width(7)"/><fo:table-body end-indent="0pt" start-indent="0pt"><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>D</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> ... </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Declaration</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">site</fo:inline> X <fo:inline font-family="monospace">=</fo:inline> <fo:inline font-style="italic">URL</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">site declaration</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>C</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> ... </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Constant</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">signal</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">signal value</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>...</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Expression</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>E <fo:inline font-family="monospace">|</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">bar combinator</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>E <fo:inline font-family="monospace">&gt;</fo:inline>P<fo:inline font-family="monospace">&gt;</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">sequential combinator</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>E <fo:inline font-family="monospace">&lt;</fo:inline>P<fo:inline font-family="monospace">&lt;</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">asymmetric combinator</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">stop</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">silent expression</fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>
</fo:block>

<fo:block id="N20806"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Communicating with external services</fo:marker><fo:block font-size="17.28pt">1.3.1. Communicating with external services</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Cor is a pure declarative language. It has no state, since variables are bound at most once 
and cannot be reassigned. Evaluation of an expression results in at most one value.
It cannot communicate with the outside world except by producing a value. Clearly, the full 
Orc language must transcend these limitations, because the orchestration of external services 
is critical to Orc's purpose.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
We introduce <fo:inline font-style="italic">sites</fo:inline>: Orc's interface to external services.
Sites are called using the same syntax as a function call, but with a slightly different 
meaning. Sites are values, introduced and bound to variables by a special declaration.
</fo:block>

<fo:block id="N20813"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.3.1.1. Calling a site</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Suppose that the variable <fo:inline font-family="monospace">Google</fo:inline> is bound to a site which sends a 
string to the Google search engine and returns the URL of the top result. A call to
<fo:inline font-family="monospace">Google</fo:inline> looks just like a function call.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N2081F">
{- Get the top search result for "computation orchestration" -}
Google("computation orchestration")
</fo:block>

When the Google search engine determines the top result for this search, it responds with
some URL. The site call then publishes that response. Note that the service might
never respond: Google's servers might be down, the network might be down, or the search 
might yield no result URL. If the service fails to respond, the site call remains
silent.
</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A site call sends only a single request to an external service and receives at most one
response. These restrictions have two important consequences. First, all of the information needed 
for the call must be present before contacting the service. Thus, site calls are strict; all 
arguments must be bound before the call can proceed. If any argument is silent, the call never occurs.
Second, a site call publishes at most one value, since at most one response is received.
</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A site is sometimes called purely for its effect on the external world; its return
value is irrelevant. Many sites which do not need to return a meaningful value will
instead return a <fo:inline font-style="italic">signal</fo:inline>: a special value which carries no 
information (analogous to the unit value <fo:inline font-family="monospace">()</fo:inline> in ML). The signal value
can be written as <fo:inline font-family="monospace">signal</fo:inline> within Orc programs.


<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20831">
-- Use the 'print' site to print a string to an output console
-- The return value of this site call is a signal
println("Hello, World!")
</fo:block>
</fo:block>


</fo:block>


<fo:block id="N20837"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.3.1.2. Declaring sites</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A <fo:inline font-family="monospace">site</fo:inline> declaration makes some service available as a site and
binds it to a variable. The service might be an object in the host language, 
an external service on the web accessed through some protocol like SOAP or REST, 
or even a primitive operation like addition. We will discuss the particulars of 
these declarations, and the guidelines for accessing web-based services or creating 
one's own services, in <fo:basic-link internal-destination="chapter.services"><fo:inline xmlns:xlink="http://www.w3.org/1999/xlink">Chapter 3</fo:inline></fo:basic-link>. Also,
many useful sites are already defined in the Orc standard library, documented
in <fo:basic-link internal-destination="appendix.library"><fo:inline xmlns:xlink="http://www.w3.org/1999/xlink">Appendix B</fo:inline></fo:basic-link>. For now, we present a simple 
type of site declaration: using an object in the host language as a site.  
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The following example instantiates a Java object to be used as a site in an Orc program, specifically
a Java object which provides an asynchronous buffer service. The declaration uses a
fully qualified Java class name to find and load a class, and creates an instance of that
class to provide the service. 

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N2084B">
{-  Define the Buffer site  -}
site Buffer = orc.lib.state.Buffer
</fo:block>  
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">

</fo:block>
  
</fo:block>

</fo:block>


<fo:block id="N20854"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">The concurrency combinators of Orc</fo:marker><fo:block font-size="17.28pt">1.3.2. The concurrency combinators of Orc</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Orc has three concurrency <fo:inline font-style="italic">combinators</fo:inline>: ways of connecting expressions together so that they can
be executed concurrently.
</fo:block>

<fo:block id="N2085E"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.3.2.1. The parallel combinator</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Orc's simplest combinator is <fo:inline font-family="monospace">|</fo:inline>, the parallel combinator. Orc executes
the expression F <fo:inline font-family="monospace">|</fo:inline> G, where F and G are Orc expressions, by executing 
F and G concurrently. Whenever F or G communicates with a service or publishes a value, 
the whole execution does so as well.
</fo:block>   


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N2086D">
-- Publish 1, 2, and 3 in parallel  
1 | 2 | 1+2
</fo:block>
</fo:block>  

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20873">
{- 
  Access two search sites, Google and Yahoo, in parallel.

  Publish any results they return.
  
  Since each call may publish a value, the expression
  may publish up to two values.
-}  
Google("cupcake") | Yahoo("cupcake")
</fo:block>
</fo:block>  

</fo:block>

<fo:block id="N20878"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.3.2.2. The sequential combinator</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Now that we have expressions which publish multiple values, what can we do with those
publications? The sequential combinator, written F <fo:inline font-family="monospace">&gt;x&gt;</fo:inline> G, 
combines the expression F, which publishes some values, with another expression G 
which will use those values as they are published, using <fo:inline font-family="monospace">x</fo:inline> to transmit
the values from from F to G.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The execution of F <fo:inline font-family="monospace">&gt;x&gt;</fo:inline> G executes F. Whenever F publishes a value, 
a new copy of G is executed in parallel with F (and with any previous copies of G); in that
copy of G, <fo:inline font-family="monospace">x</fo:inline> is bound to the value published by F. Values published by copies
of G are published by the whole expression, but the values published by F are not published
by the whole expression; they are consumed by the variable binding.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20890">
-- Publish 1 and 2 in parallel  
(0 | 1) &gt;n&gt; n+1
</fo:block>
</fo:block>  

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20896">
-- Publish 3 and 4 in parallel  
2 &gt;n&gt; (n+1 | n+2)
</fo:block>
</fo:block>  


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N2089C">
-- Publish 1, 2, 3 and 4 in parallel  
(0 | 2) &gt;n&gt; (n+1 | n+2)
</fo:block>
</fo:block>  


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N208A2">
-- Prepend the string "Result: " to each published search result
-- The cat site concatenates any number of arguments into one string  
(Google("cupcake") | Yahoo("cupcake")) &gt;s&gt; cat("Result: ", s)
</fo:block>
</fo:block>  




<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The sequential combinator may be written as F <fo:inline font-family="monospace">&gt;</fo:inline>P<fo:inline font-family="monospace">&gt;</fo:inline> G, 
where P is a pattern instead of just a variable name. Any value published by F is matched against the 
pattern P. If this match is successful, a new copy of G is started with all of the bindings from the match. 
Otherwise, the published value is simply ignored, and no new copy of G is executed.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N208B1">
-- Publish the elements of a triple in unspecified order
-- Publishes 3, 6, and 9
(3,6,9)  &gt;(x,y,z)&gt;  ( x | y | z )
</fo:block>
</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N208B7">
-- Publish x from any tuple of the form (1,x)
-- Publishes 4 and 6  
( (1,4) | (2,5) | (1,6) )  &gt;(1,x)&gt; x
</fo:block>
</fo:block>
 


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
We may also omit the variable entirely, writing <fo:inline font-family="monospace">&gt;&gt;</fo:inline>. This
is equivalent to using a wildcard pattern: <fo:inline font-family="monospace">&gt;_&gt;</fo:inline>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
We may want to execute an expression just for its effects, and hide all of its publications.
We can do this using <fo:inline font-family="monospace">&gt;&gt;</fo:inline> together with the special expression 
<fo:inline font-family="monospace">stop</fo:inline>, which is always silent.  
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N208CF">
{- 
  Print two strings to the console,
  but don't publish the return values of the print calls.
-}
( print("goodbye") | print("world") ) &gt;&gt; stop
</fo:block>
</fo:block>


</fo:block>


<fo:block id="N208D4"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.3.2.3. The asymmetric combinator</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The asymmetric combinator, written F <fo:inline font-family="monospace">&lt;x&lt;</fo:inline> G, allows us to block 
a computation waiting for a result, or terminate a computation.
</fo:block> 

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
As with the sequential combinator, we consider the simple, one-variable case first. 
The execution of F <fo:inline font-family="monospace">&lt;x&lt;</fo:inline> G starts executing F and G in parallel. Whenever
F publishes a value, that value is published by the entire execution. When G publishes
its first value, that value is bound to x in F, and then G is immediately <fo:inline font-style="italic">terminated</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A terminated expression cannot perform any more execution; if it is in the process of communicating
with an external service, that communication is allowed to complete but the response is ignored.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N208EC">
-- Publish either 5 or 6, but not both
x+2 &lt;x&lt; 3 | 4
</fo:block>
</fo:block>  

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N208F2">
-- Query Google and Yahoo for a search result
-- Print out the result that arrives first; ignore the other result
print(result) &lt;result&lt; Google("cupcake") | Yahoo("cupcake")
</fo:block>
</fo:block>  

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
If an execution in F encounters the variable <fo:inline font-family="monospace">x</fo:inline>, but G has not yet published
a value, that execution <fo:inline font-style="italic">blocks</fo:inline> until G publishes a value and <fo:inline font-family="monospace">x</fo:inline>
becomes bound.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The asymmetric combinator may include a full pattern P instead of just a variable name. Any
value published by G is matched against the pattern P. If this match is successful, then G
terminates and all of the bindings of the pattern P are made in F. Otherwise, the published 
value is simply ignored and G continues to execute.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20907">
-- Publish either 9 or 25, but not 16.
x*x &lt;(x,0)&lt; (3,0) | (4,1) | (5,0)
</fo:block>
</fo:block>  

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Note that even if <fo:inline font-family="monospace">(4,1)</fo:inline> is published before <fo:inline font-family="monospace">(3,0)</fo:inline> or <fo:inline font-family="monospace">(5,0)</fo:inline>, 
it is ignored. The right side continues to execute and will publish one of <fo:inline font-family="monospace">(3,0)</fo:inline> or 
<fo:inline font-family="monospace">(5,0)</fo:inline>.
</fo:block> 

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The pattern is optional; without a variable the combinator is written <fo:inline font-family="monospace">&lt;&lt;</fo:inline>. It
is equivalent to using a wildcard: <fo:inline font-family="monospace">&lt;_&lt;</fo:inline>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20928">
-- Print only one of "true" or "false" to the console.
-- Publish no values.
stop &lt;&lt; print("true") | print("false")
</fo:block>
</fo:block>


</fo:block>



</fo:block>



<fo:block id="N2092E"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Changes to functional expressions</fo:marker><fo:block font-size="17.28pt">1.3.3. Changes to functional expressions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Now that we have introduced concurrency and state, some of the assumptions we
made when describing the behavior of functional expressions in Cor no longer hold.
</fo:block>

<fo:block id="N20935"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.3.3.1. <fo:inline font-family="monospace">val</fo:inline></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
It turns out that <fo:inline font-family="monospace">val x = g</fo:inline> followed by expression <fo:inline font-family="monospace">f</fo:inline> is 
actually just a prefix form of the asymmetric combinator <fo:inline font-family="monospace">f &lt;x&lt; g</fo:inline>.
Thus, <fo:inline font-family="monospace">val</fo:inline> shares all of the behavior of the asymmetric combinator,
which we have already described. This is also true when a pattern is used instead
of a variable name.
</fo:block>

</fo:block>


<fo:block id="N2094A"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.3.3.2. Nested expressions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Orc expressions with concurrency combinators may occur as subexpressions of Cor expressions, 
such as arithmetic operations or function call arguments. Such expressions may publish many 
values and perform many communications, as in <fo:inline font-family="monospace">(1 | 2) + 3</fo:inline>. What do these
expressions mean in a purely functional context?
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The specific syntactic contexts we are interested in are as follows (E is any Orc expression):

<fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="value-context-table" xmlns:rx="http://www.renderx.com/XSL/Extensions"><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="none" border-right-style="none" border-top-style="none" border-bottom-style="none" table-layout="fixed" width="80%"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-body end-indent="0pt" start-indent="0pt"><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>E <fo:inline font-style="italic">op</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block><fo:inline font-style="italic">operators</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">if</fo:inline> E <fo:inline font-family="monospace">then</fo:inline> ...</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block><fo:inline font-style="italic">conditionals</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>X<fo:inline font-family="monospace">(</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> E <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">)</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block><fo:inline font-style="italic">calls</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">(</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> E <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">)</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block><fo:inline font-style="italic">tuples</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">[</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> E <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block><fo:inline font-style="italic">lists</fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Roughly speaking, these are contexts where only one value is expected.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Whenever an Orc expression F appears in such a Cor context E[], it is 
treated as if it was on the right side of an asymmetric combinator,
using a fresh variable name to fill in the hole. Thus, E[F] (where F
is an Orc expression and E is a Cor context) translates to 
E[<fo:inline font-family="monospace">x</fo:inline>] <fo:inline font-family="monospace">&lt;x&lt;</fo:inline> F.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In other words, the expression executes until it publishes its first
value, and then it is terminated. That value is used in the context
as if it were the result of evaluation a Cor expression.
</fo:block>

</fo:block>


<fo:block id="N209DC"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.3.3.3. Functions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In the context of Orc, function calls are not strict. When a function
is called, the function body and the arguments are actually evaluated
in parallel. Whenever an execution in the function body reaches one of 
the argument variables, it blocks until the corresponding argument 
expression publishes a value.
</fo:block>

</fo:block>



</fo:block>


<fo:block id="N209E5"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Time</fo:marker><fo:block font-size="17.28pt">1.3.4. Time</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>


</fo:block>


</fo:block>



<fo:block id="N209EB"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Advanced Features of Orc</fo:marker><fo:block font-size="20.735999999999997pt">1.4. Advanced Features of Orc</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In this section we introduce some advanced features of Orc. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The following figure details the new syntactic constructs discussed
in this section.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="advanced-ebnf-table" xmlns:rx="http://www.renderx.com/XSL/Extensions"><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="none" border-right-style="none" border-top-style="none" border-bottom-style="none" table-layout="fixed" width="80%"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-column column-number="3" column-width="proportional-column-width(10)"/><fo:table-column column-number="4" column-width="proportional-column-width(6)"/><fo:table-column column-number="5" column-width="proportional-column-width(7)"/><fo:table-body end-indent="0pt" start-indent="0pt"><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>...</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Expression</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>X G+</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">generalized call</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>E <fo:inline font-family="monospace">;</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">after combinator</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>G</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Argument group</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> <fo:inline font-family="monospace">(</fo:inline> E <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> E <fo:inline font-family="monospace">)</fo:inline> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">curried arguments</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> <fo:inline font-family="monospace">.</fo:inline><fo:inline font-style="italic">field</fo:inline> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">field access</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>P</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>...</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Pattern</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">!</fo:inline>P</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">bang pattern</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>P <fo:inline font-family="monospace">as</fo:inline> X</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">as pattern</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>X<fo:inline font-family="monospace">(</fo:inline> P <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> P <fo:inline font-family="monospace">)</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">call pattern</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>D</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> ... </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Declaration</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">class</fo:inline> X <fo:inline font-family="monospace">=</fo:inline> <fo:inline font-style="italic">classname</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">class declaration</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">include</fo:inline> <fo:inline font-family="monospace">"</fo:inline> <fo:inline font-style="italic">filename</fo:inline> <fo:inline font-family="monospace">"</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">inclusion</fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>
</fo:block>


<fo:block id="N20B3C"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Special call forms</fo:marker><fo:block font-size="17.28pt">1.4.1. Special call forms</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block id="N20B40"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.4.1.1. The <fo:inline font-family="monospace">.</fo:inline> notation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In many object-oriented programming languages, one calls a method or accesses a field of an
object using the dot operator; for example, <fo:inline font-family="monospace">obj.m()</fo:inline> calls the method
<fo:inline font-family="monospace">m</fo:inline> of the object <fo:inline font-family="monospace">obj</fo:inline>. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
There is a special kind of site call in Orc which serves a similar purpose. One may write
<fo:inline font-family="monospace">x.msg</fo:inline>, for any identifiers <fo:inline font-family="monospace">x</fo:inline> and <fo:inline font-family="monospace">msg</fo:inline>. This attempts
to treat the value bound to <fo:inline font-family="monospace">x</fo:inline> as a site, and call it with a special 
<fo:inline font-style="italic">message</fo:inline> value. If the value cannot be interpreted as a site, no call is made. 
If that site understands the message <fo:inline font-family="monospace">msg</fo:inline> (for example, if <fo:inline font-family="monospace">x</fo:inline> is 
bound to a Java object with a field called <fo:inline font-family="monospace">msg</fo:inline>), the site interprets the message 
and responds with some appropriate value. If the value is a site, but it does not 
understand the message sent to it, it does not respond, and no publication occurs. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Typically this capability is used so that sites may be syntactically treated like objects, 
with multiple methods and fields. For example, a channel <fo:inline font-family="monospace">c</fo:inline> might understand the messages
<fo:inline font-family="monospace">get</fo:inline> and <fo:inline font-family="monospace">put</fo:inline>, to get values from and put values on that channel,
respectively. Such calls would be written <fo:inline font-family="monospace">c.get()</fo:inline>, or <fo:inline font-family="monospace">c.put(6)</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Such calls actually occur in two steps: first <fo:inline font-family="monospace">c.put</fo:inline> sends the message
<fo:inline font-family="monospace">put</fo:inline> to the value <fo:inline font-family="monospace">c</fo:inline>; this publishes a site whose only purpose
is to put values to that channel. Then, that 'put site' is called on the argument
<fo:inline font-family="monospace">6</fo:inline>, sending 6 on that channel. Readers familiar with functional programming
will recognize this technique as <fo:inline font-style="italic">currying</fo:inline>.
</fo:block>
</fo:block>


<fo:block id="N20B93"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.4.1.2. Currying</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
It is sometimes useful to <fo:inline font-style="italic">stage</fo:inline> the arguments to a function; that is,
rather than writing a function on two arguments, one instead writes a function on one
argument which returns a function taking the second argument and performing the remainder
of the evaluation. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
This technique is known as <fo:inline font-style="italic">currying</fo:inline> and it is common in functional
programming languages. It is obviously supported in Orc since it is possible to define
closures. However, there is additional support for making curried function calls, and
for defining functions directly in a curried way.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Suppose we want to define a curried addition function on two arguments, and later 
apply that function to the arguments 3 and 4. The verbose way to write such 
a program is as follows:

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20BA5">
def add(a) = ( lambda(b) = a+b )  
val f = add(3)
f(4)
</fo:block>

</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
When defining a curried function, we have abstracted it in two steps, and when
applying it we have written two separate calls. However, Orc has a special syntax
for curried definitions and curried applications that will simplify both of
these steps.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20BAB">
def add(a)(b) = a+b
add(3)(4)
</fo:block>

Definitions may have multiple argument sequences; they are enclosed in parentheses
and concatenated. Curried function calls chain together multiple applications in
a similar way.
</fo:block>

</fo:block>


</fo:block>

<fo:block id="N20BB1"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Special patterns</fo:marker><fo:block font-size="17.28pt">1.4.2. Special patterns</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block id="N20BB5"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.4.2.1. Bang pattern</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A bang pattern, written <fo:inline font-family="monospace">!p</fo:inline>, will publish the value that matches the pattern 
<fo:inline font-family="monospace">p</fo:inline> if the match is successful.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20BC1">
(1,2,3)  &gt;(x,!y,!z)&gt; stop
</fo:block>

This publishes <fo:inline font-family="monospace">2</fo:inline> and <fo:inline font-family="monospace">3</fo:inline>. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Note that a bang pattern will not publish if the overall match fails, even if its particular match succeeds:

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20BCE">
( (1,2,3) | (4,5,6) )  &gt;(1,!x,y)&gt;  stop
</fo:block>

This publishes only <fo:inline font-family="monospace">2</fo:inline>. Even though the pattern <fo:inline font-family="monospace">x</fo:inline> matches the value <fo:inline font-family="monospace">5</fo:inline>, 
the overall pattern <fo:inline font-family="monospace">(1,!x,y)</fo:inline> does not match the value <fo:inline font-family="monospace">(4,5,6)</fo:inline>, so <fo:inline font-family="monospace">5</fo:inline> 
is not published.
</fo:block>

</fo:block>

<fo:block id="N20BE6"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.4.2.2. As pattern</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In taking apart a value with a pattern, it is often useful to capture intermediate results.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20BEC">
val (a,b) = ((1,2),(3,4))
val (ax,ay) = a
val (bx,by) = b
</fo:block>

We can use the <fo:inline font-family="monospace">as</fo:inline> keyword to simplify this process, giving a name to an entire
subpattern. Here is an equivalent version of the above code.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20BF2">
val ((ax,ay) as a, (bx,by) as b) = ((1,2),(3,4))
</fo:block>
</fo:block>

</fo:block>

<fo:block id="N20BF7"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.4.2.3. Site patterns</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A site pattern, written <fo:inline font-family="monospace">M(p,...,p)</fo:inline>, matches any value which was published by a call to the
site <fo:inline font-family="monospace">M</fo:inline> with arguments that match the tuple <fo:inline font-family="monospace">(p,...,p)</fo:inline>. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Site patterns provide a generalized version of datatype matching, as seen in the <fo:inline font-family="monospace">case .. of</fo:inline>
 or <fo:inline font-family="monospace">match .. with </fo:inline> constructs provided by Haskell and ML.
</fo:block> 

</fo:block>


<fo:block id="N20C11"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.4.2.4. Patterns as views</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In addition to matching data structures constructed within Orc, patterns can also be used to match
external data structures and values. In this setting, a pattern does not necessarily observe the
true structure of the data, but instead provides a <fo:inline font-style="italic">view</fo:inline> of that data.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
For example, a list pattern can be used to view some sequentially structured data (such as lines
in a file) as if it were a list. The views allowed on a value are determined by the value itself;
for example, a value which does not support a list view will be refused by any list pattern it
is matched against.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The concept of views and view patterns is not new in programming languages; it has been demonstrated
in other languages, most notably <fo:basic-link xmlns:xlink="http://www.w3.org/1999/xlink" external-destination="url(http://www.scala-lang.org/)">Scala</fo:basic-link><fo:inline xmlns:xlink="http://www.w3.org/1999/xlink" hyphenate="false"> [<fo:basic-link external-destination="url(http://www.scala-lang.org/)">http://www.scala-lang.org/</fo:basic-link>]</fo:inline>. In fact, the 
underlying implementation strategy for using sites as view patterns is very similar to the use of
extractor objects and the <fo:inline font-family="monospace">unapply</fo:inline> method in Scala.
</fo:block>

</fo:block>

</fo:block>

<fo:block id="N20C2A"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Special declarations</fo:marker><fo:block font-size="17.28pt">1.4.3. Special declarations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block id="N20C2E"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.4.3.1. Class declarations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
When Orc is run on top of an object-oriented programming language, classes
from that language may be used as sites in Orc itself, via the <fo:inline font-family="monospace">class</fo:inline>
declaration. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20C3A">
{- Use the String class from Java's standard library as a site -}
class String = java.lang.String
val s = String("foo")
s.concat("bar")
</fo:block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
This program binds the variable <fo:inline font-family="monospace">String</fo:inline> to the constructor of Java's
String class. When it is called, it constructs a new instance of String, passing
the given arguments to the constructor.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
This instance of String is a Java object; its methods are called and its fields
are accessed using the <fo:inline font-family="monospace">.</fo:inline> notation, just as one would expect in Java.
</fo:block>
</fo:block>


<fo:block id="N20C4B"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">1.4.3.2. Included declarations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
It is often convenient to group related declarations into units that can be
shared between programs. The <fo:inline font-family="monospace">include</fo:inline> declaration offers a simple
way to do this. It names a source file containing a sequence of Orc declarations;
those declarations are incorporated into the program as if they had textually
replaced the include declaration.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20C57">
{- Contents of fold.inc -}
def foldl(f,[],s) = s
def foldl(f,h:t,s) = foldl(f,t,f(h,s))

def foldr(f,l,s) = foldl(f,rev(l),s)
</fo:block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20C5D">
{- This is the same as inserting the contents of fold.inc here -}
include "fold.inc"

def sum(L) = foldl(lambda(a,b) = a+b, L, 0)

sum([1,2,3])
</fo:block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Note that these declarations still obey the rules of lexical scope. Also,
Orc does not detect shared declarations; if the same file is included twice,
its declarations occur twice.
</fo:block>

</fo:block>


</fo:block>

<fo:block id="N20C66"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">The after combinator</fo:marker><fo:block font-size="17.28pt">1.4.4. The after combinator</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Orc has a fourth concurrent combinator: the <fo:inline font-style="italic">after</fo:inline> combinator,
written <fo:inline font-family="monospace">f ; g</fo:inline>. The after combinator executes its left side, publishing 
each of its publications as they occur. When the left side is done executing, then 
the right side executes.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
We determine when an expression is done executing using the following rules.

<fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N20C75"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20C77"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Any Cor expression is done when it is fully evaluated.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20C7A"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>A site call is done when it has published a value or it is known 
that the request will never receive a response.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20C7D"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>F <fo:inline font-family="monospace">|</fo:inline> G is done when its subexpressions F and G are done.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20C83"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>F <fo:inline font-family="monospace">&gt;x&gt;</fo:inline> G when F is done and all created copies of G are done.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20C89"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>F <fo:inline font-family="monospace">&lt;x&lt;</fo:inline> G is done when F is done, and G is either 
done or has been terminated after publishing a value.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20C8F"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>F <fo:inline font-family="monospace">;</fo:inline> G is done when its subexpressions F and G are done.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20C95"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">stop</fo:inline> is done.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>

</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The after combinator is intended to capture as closely as possible the notion of sequential
processing, as denoted by <fo:inline font-family="monospace">;</fo:inline> in other languages. It was not present in the
original formulation of the Orc concurrency calculus; it has been added to support computation
and iteration over strictly finite data. Sequential programs conflate the concept of
producing a value with the concept of completion. Orc separates these two concepts; variable
binding combinators like <fo:inline font-family="monospace">&gt;x&gt;</fo:inline> and <fo:inline font-family="monospace">&lt;x&lt;</fo:inline> handle
values, whereas <fo:inline font-family="monospace">;</fo:inline> detects the completion of an execution.
</fo:block>

</fo:block>


</fo:block>



</fo:flow></fo:page-sequence>

 
<fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" master-reference="body" hyphenate="true" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>Programming Methodology</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>Programming Methodology</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="N20CAE"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-weight="bold" font-size="24.8832pt"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="left" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 2. Programming Methodology</fo:block></fo:block></fo:block></fo:block></fo:block>

Under construction.



</fo:flow></fo:page-sequence>


<fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" master-reference="body" hyphenate="true" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>Accessing and Creating External Services</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>Accessing and Creating External Services</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="chapter.services"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-weight="bold" font-size="24.8832pt"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="left" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 3. Accessing and Creating External Services</fo:block></fo:block></fo:block></fo:block></fo:block>

Under construction.

</fo:flow></fo:page-sequence>



<fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" master-reference="back" hyphenate="true" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>Complete Syntax of Orc</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>Complete Syntax of Orc</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="N20CBB"><fo:block><fo:block><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" font-size="24.8832pt" margin-left="0pt"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="left" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Appendix A. Complete Syntax of Orc</fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">

<fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="full-ebnf-grammar" xmlns:rx="http://www.renderx.com/XSL/Extensions"><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="none" border-right-style="none" border-top-style="none" border-bottom-style="none" table-layout="fixed" width="80%"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-column column-number="3" column-width="proportional-column-width(10)"/><fo:table-column column-number="4" column-width="proportional-column-width(4)"/><fo:table-column column-number="5" column-width="proportional-column-width(7)"/><fo:table-body end-indent="0pt" start-indent="0pt"><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Expression</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>C</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">constant value</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>E <fo:inline font-style="italic">op</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">operator</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>X</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">variable</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">if</fo:inline> E <fo:inline font-family="monospace">then</fo:inline> E <fo:inline font-family="monospace">else</fo:inline> E </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">conditional</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>X G+</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">call</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">(</fo:inline> E <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> E <fo:inline font-family="monospace">)</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">tuple</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">[</fo:inline> E <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> E <fo:inline font-family="monospace">]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">list</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>D E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">scoped declaration</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>E <fo:inline font-family="monospace">|</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">bar combinator</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>E <fo:inline font-family="monospace">&gt;</fo:inline>P<fo:inline font-family="monospace">&gt;</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">sequential combinator</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>E <fo:inline font-family="monospace">&lt;</fo:inline>P<fo:inline font-family="monospace">&lt;</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">asymmetric combinator</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>E <fo:inline font-family="monospace">;</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">after combinator</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">stop</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">silent expression</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>G</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Argument group</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> <fo:inline font-family="monospace">(</fo:inline> E <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> E <fo:inline font-family="monospace">)</fo:inline> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">arguments</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> <fo:inline font-family="monospace">.</fo:inline><fo:inline font-style="italic">field</fo:inline> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">field access</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>C</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">true</fo:inline> | <fo:inline font-family="monospace">false</fo:inline> | <fo:inline font-style="italic">integer</fo:inline> | <fo:inline font-style="italic">string</fo:inline> | <fo:inline font-family="monospace">signal</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Constant</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>X</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">identifier</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Variable</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>D</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Declaration</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">val</fo:inline> P <fo:inline font-family="monospace">=</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">value declaration</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">def</fo:inline> X<fo:inline font-family="monospace">(</fo:inline> P <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> P <fo:inline font-family="monospace">)</fo:inline> <fo:inline font-family="monospace">=</fo:inline> E</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">function declaration</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">site</fo:inline> X <fo:inline font-family="monospace">=</fo:inline> <fo:inline font-style="italic">URL</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">site declaration</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">class</fo:inline> X <fo:inline font-family="monospace">=</fo:inline> <fo:inline font-style="italic">classname</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">class declaration</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">include</fo:inline> <fo:inline font-family="monospace">"</fo:inline> <fo:inline font-style="italic">filename</fo:inline> <fo:inline font-family="monospace">"</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">inclusion</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block>P</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>::=</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">Pattern</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>X</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">variable</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>C</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">constant</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">_</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">wildcard</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">(</fo:inline> P <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> P <fo:inline font-family="monospace">)</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">tuple</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">[</fo:inline> P <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> P <fo:inline font-family="monospace">]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">list</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">!</fo:inline>P</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">bang pattern</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>P <fo:inline font-family="monospace">as</fo:inline> X</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">as pattern</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="right"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>|</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>X<fo:inline font-family="monospace">(</fo:inline> P <fo:inline font-family="monospace">,</fo:inline> ... <fo:inline font-family="monospace">,</fo:inline> P <fo:inline font-family="monospace">)</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-style="italic">call pattern</fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>
</fo:block>


</fo:flow></fo:page-sequence>


<fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" master-reference="back" hyphenate="true" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>Standard Library</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>Standard Library</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="appendix.library"><fo:block><fo:block><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" font-size="24.8832pt" margin-left="0pt"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="left" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Appendix B. Standard Library</fo:block></fo:block></fo:block></fo:block></fo:block>
Under construction.
</fo:flow></fo:page-sequence>

 
<fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" master-reference="back" hyphenate="true" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>FAQ</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>FAQ</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="N20FD8"><fo:block><fo:block><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" font-size="24.8832pt" margin-left="0pt"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="left" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Appendix C. FAQ</fo:block></fo:block></fo:block></fo:block></fo:block>

Under construction.


</fo:flow></fo:page-sequence>

 

 
</fo:root>