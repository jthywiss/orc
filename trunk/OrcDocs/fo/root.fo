<?xml version="1.0" encoding="UTF-8"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" font-family="serif,Symbol,ZapfDingbats" font-size="10pt" text-align="justify" line-height="normal" font-selection-strategy="character-by-character" line-height-shift-adjustment="disregard-shifts" language="en"><fo:layout-master-set><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="blank"><fo:region-body margin-top="0.5in" margin-bottom="0.5in" display-align="center" region-name="blank-body"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-blank"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-blank"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-first"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-odd"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-even"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-first"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-odd"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-even"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-first"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-odd"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-even"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-first"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-odd"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-even"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-first"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-odd"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-even"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-first"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-odd"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-even"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="blank-draft"><fo:region-body margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-blank"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-blank"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-first-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-odd-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="titlepage-even-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-first-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-odd-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="lot-even-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-first-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-odd-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="front-even-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-first-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-odd-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="body-even-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-first-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-odd-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in - 0pt" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="back-even-draft"><fo:region-body column-count="1" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-first-draft"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-first"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-first"/></fo:simple-page-master><fo:simple-page-master margin-right="1in" margin-left="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-odd-draft"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-odd"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-odd"/></fo:simple-page-master><fo:simple-page-master margin-left="1in" margin-right="1in" margin-bottom="0.5in" margin-top="0.5in" page-height="11in" page-width="8.5in" master-name="index-even-draft"><fo:region-body column-count="2" column-gap="12pt" margin-top="0.5in" margin-bottom="0.5in" background-image="url(http://docbook.sourceforge.net/release/images/draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before display-align="before" extent="0.4in" region-name="xsl-region-before-even"/><fo:region-after display-align="after" extent="0.4in" region-name="xsl-region-after-even"/></fo:simple-page-master><fo:page-sequence-master master-name="titlepage"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="titlepage-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="titlepage-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="lot-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="lot-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="front-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="front-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="body-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="body-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="back-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="back-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank"/><fo:conditional-page-master-reference page-position="first" master-reference="index-first"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="index-odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="titlepage-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="titlepage-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="titlepage-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="lot-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="lot-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="front-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="front-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="body-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="body-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="back-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="back-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference blank-or-not-blank="blank" master-reference="blank-draft"/><fo:conditional-page-master-reference page-position="first" master-reference="index-first-draft"/><fo:conditional-page-master-reference odd-or-even="odd" master-reference="index-odd-draft"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master></fo:layout-master-set><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" master-reference="lot" hyphenate="true" language="en" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="toc...N2000B"><fo:block><fo:block><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" font-size="17.28pt" start-indent="0pt" margin-left="0pt" space-after="0.5em" space-before.maximum="2em" space-before.optimum="1.5em" space-before.minimum="1em">Table of Contents</fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N2000E">1. The Orc Programming Language</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N2000E"><fo:page-number-citation ref-id="N2000E"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.N2000B.N2000E" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20012">Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20012"><fo:page-number-citation ref-id="N20012"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.N2000B.N20012" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N2003E">Base Expression</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N2003E"><fo:page-number-citation ref-id="N2003E"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20049">Cor</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20049"><fo:page-number-citation ref-id="N20049"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20055">Cor</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20055"><fo:page-number-citation ref-id="N20055"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.N2000B.N20055" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20074">Constants</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20074"><fo:page-number-citation ref-id="N20074"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="language.base.oeprators">Operators</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="language.base.oeprators"><fo:page-number-citation ref-id="language.base.oeprators"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20218">Conditionals</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20218"><fo:page-number-citation ref-id="N20218"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N2031C">Variables</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N2031C"><fo:page-number-citation ref-id="N2031C"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20361">Data Structures</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20361"><fo:page-number-citation ref-id="N20361"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20402">Patterns</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20402"><fo:page-number-citation ref-id="N20402"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N2047D">Functions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N2047D"><fo:page-number-citation ref-id="N2047D"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N2054E">Comments</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N2054E"><fo:page-number-citation ref-id="N2054E"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20569">Communicating with external services</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20569"><fo:page-number-citation ref-id="N20569"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.N2000B.N20569" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20576">Calling a site</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20576"><fo:page-number-citation ref-id="N20576"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20599">Declaring sites</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20599"><fo:page-number-citation ref-id="N20599"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N205A8">The concurrency combinators of Orc</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N205A8"><fo:page-number-citation ref-id="N205A8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.N2000B.N205A8" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N205B2">Bar: Parallelism and publications</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N205B2"><fo:page-number-citation ref-id="N205B2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N205EC">Push: Capturing publications</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N205EC"><fo:page-number-citation ref-id="N205EC"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N2062A">Pull: Making val concurrent</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N2062A"><fo:page-number-citation ref-id="N2062A"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20657">Additional Features</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20657"><fo:page-number-citation ref-id="N20657"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.N2000B.N20657" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N2065E">Special call forms</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N2065E"><fo:page-number-citation ref-id="N2065E"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N206C7">Special patterns</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N206C7"><fo:page-number-citation ref-id="N206C7"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="N20741">The before combinator</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader keep-with-next.within-line="always" leader-alignment="reference-area" leader-pattern-width="3pt" leader-pattern="dots"/> <fo:basic-link internal-destination="N20741"><fo:page-number-citation ref-id="N20741"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence>

<fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" master-reference="body" hyphenate="true" language="en" format="1" initial-page-number="1" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>The Orc Programming Language</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block>The Orc Programming Language</fo:block></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="before" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="center" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="before" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell display-align="after" text-align="left" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="center" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell display-align="after" text-align="right" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="N2000E"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-weight="bold" font-size="24.8832pt"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="left" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 1. The Orc Programming Language</fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block id="N20012"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="20.735999999999997pt">Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Orc is a programming language designed to make distributed and
concurrent programs simple and intuitive to write.  Orc expresses
orchestration, a type of structured concurrency. It emphasizes the
flow of control and gives a global view of a concurrent system. Most
other concurrency-oriented languages describe the individual pieces of
a system and their local interactions, but without a global view.  Orc
is particularly well-suited for task orchestration, a form of
concurrent programming with applications in workflow, business process
management, and web service orchestration. Orc provides constructs to
orchestrate the concurrent invocation of services while managing
time-outs, priorities, and failures of services or communication.  To
learn more about Orc and its community of users, visit our website:
<fo:basic-link xmlns:xlink="http://www.w3.org/1999/xlink" external-destination="url(http://orc.csres.utexas.edu)">http://orc.csres.utexas.edu</fo:basic-link>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
This chapter describes the Orc programming language. The language is
built around <fo:inline font-style="italic">expressions</fo:inline>. Given that <fo:inline font-family="monospace">f</fo:inline>, 
<fo:inline font-family="monospace">g</fo:inline> and <fo:inline font-family="monospace">h</fo:inline> are Orc expressions, an expression is defined by

<fo:inline font-family="monospace">f</fo:inline> <fo:inline font-family="monospace">::=</fo:inline> base expression | <fo:inline font-family="monospace">g | h</fo:inline> | <fo:inline font-family="monospace">g &gt;x&gt; h</fo:inline> | <fo:inline font-family="monospace">g &lt;x&lt; h</fo:inline>

The language supports a variety of other ways of writing expressions
in structured manner, but they are all based on the constructs shown
above. The combinators (<fo:inline font-family="monospace">|</fo:inline>, &gt;x&gt; and &lt;x&lt;) 
are concurrency combinators that allow, respectively, concurrent computations, 
(a general form of) sequential execution with spawning of computations and 
concurrency combined with computation termination. We describe the language
features that support the concurrency combinators in Section ... . Next, we
describe base expressions. 
</fo:block>

<fo:block id="N2003E"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Base Expression</fo:marker><fo:block font-size="17.28pt">Base Expression</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Base expressions are either calls to
external <fo:inline font-style="italic">services</fo:inline> (described in Section  .. ), 
or simple (functional) expressions that can evaluated locally, (next Section ..). 
</fo:block>

</fo:block>

<fo:block id="N20049"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Cor</fo:marker><fo:block font-size="17.28pt">Cor</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Cor is a functional subset of Orc. The original Orc
calculus [reference] did not include a functional subset; thus to
compute 3+4, an external service for addition was called with the
arguments 3 and 4. We retain the underlying philosophy of Orc, but
we also allow the user to simply write <fo:inline font-family="monospace">3+4</fo:inline>, or even functional
programs in a restricted language, which are then translated to calls
on appropriate services.
</fo:block>

</fo:block>

</fo:block> 

<fo:block id="N20055"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Cor</fo:marker><fo:block font-size="20.735999999999997pt">Cor</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>
 
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In this section we introduce <fo:inline font-style="italic">Cor</fo:inline>, a subset of the Orc language.
Users of functional programming languages such as Haskell and ML will already be 
familiar with many of the key concepts of Cor.  
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A Cor program is called an <fo:inline font-style="italic">expression</fo:inline>. Cor expressions are built
up recursively from smaller expressions. Cor <fo:inline font-style="italic">evaluates</fo:inline> an expression
to reduce it to some simple <fo:inline font-style="italic">value</fo:inline> which cannot be evaluated further, 
for example a list of numbers or a Boolean truth value. This value is called the <fo:inline font-style="italic">
result</fo:inline> of the expression.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In the following subsections we'll introduce the concepts of Cor. First, we'll talk about
simple constants, such as numbers and truth values, and the operations that we can perform
on those values. Then we'll introduce conditionals (<fo:inline font-family="monospace">if/then/else</fo:inline>). Then we'll 
introduce variables and binding, as a way to give a name to the value of an expression. 
After that, we'll talk about constructing data structures, and examining those structures
using patterns. Lastly, we'll introduce functions.
</fo:block> 


<fo:block id="N20074"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Constants</fo:marker><fo:block font-size="17.28pt">Constants</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The simplest expression one can write is a constant. It evaluates trivially
to that constant value. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">

Cor has three types of constants, and thus for the moment three types of values:

<fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N2007D"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2007F"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
Integers: <fo:inline font-family="monospace"> ... -1, 0, 1 ... </fo:inline>
</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20085"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
Booleans: <fo:inline font-family="monospace">true</fo:inline> and <fo:inline font-family="monospace">false</fo:inline>
</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2008E"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
Strings: <fo:inline font-family="monospace">"orc"</fo:inline>, <fo:inline font-family="monospace">"ceci n'est pas une |"</fo:inline>
</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

</fo:block>

<fo:block id="language.base.oeprators"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Operators</fo:marker><fo:block font-size="17.28pt">Operators</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Cor has a standard set of arithmetic, logical, and comparison operators.
As in most other programming languages, they are written in the usual 
infix style. They have Java-like operator precedence, which can be
overridden by adding parentheses.  
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N200A4"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N200A8"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">1+2</fo:inline> evaluates to <fo:inline font-family="monospace">3</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N200B0"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">(98+2)*17</fo:inline> evaluates to <fo:inline font-family="monospace">1700</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N200B8"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">4 = 20 / 5</fo:inline> evaluates to <fo:inline font-family="monospace">true</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N200C0"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">3-5 &gt;= 5-3 </fo:inline> evaluates to <fo:inline font-family="monospace">false</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N200C8"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">true &amp;&amp; (false || true)</fo:inline> evaluates to <fo:inline font-family="monospace">true</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N200D0"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">"leap" + "frog"</fo:inline> evaluates to <fo:inline font-family="monospace">"leapfrog"</fo:inline>.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Here is the full set of operators that Cor supports:

<fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="ops-table" xmlns:rx="http://www.renderx.com/XSL/Extensions"><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="none" border-right-style="none" border-top-style="none" border-bottom-style="none" table-layout="fixed" width="80%"><fo:table-column column-number="1"/><fo:table-column column-number="2" column-width="proportional-column-width(3)"/><fo:table-column column-number="3"/><fo:table-column column-number="4" column-width="proportional-column-width(3)"/><fo:table-column column-number="5"/><fo:table-column column-number="6" column-width="proportional-column-width(3)"/><fo:table-column column-number="7"/><fo:table-column column-number="8" column-width="proportional-column-width(3)"/><fo:table-header end-indent="0pt" start-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block font-weight="bold">Arithmetic</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block font-weight="bold">Comparison</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block font-weight="bold">Logical</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block font-weight="bold">String</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body end-indent="0pt" start-indent="0pt"><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">+</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>addition</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">=</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>equality</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">&amp;&amp;</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>logical and</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">+</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>concatenation</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">-</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>subtraction</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">/=</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>inequality</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">||</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>logical or</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">*</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>multiplication</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">&lt;</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>less than</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">~</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>logical not</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">/</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>division</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">&gt;</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>greater than</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">%</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>modulus</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">&lt;=</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>less than or equal</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">&gt;=</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>greater than or equal</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left" number-columns-spanned="2"><fo:block> </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>

</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The <fo:inline font-family="monospace">=</fo:inline> operator can compare values of any type.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N201E4"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N201E8"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">10 = true</fo:inline> evaluates to <fo:inline font-family="monospace">false</fo:inline>.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Sometimes, there are situations where an expression is stuck, because it is attempting to perform 
some impossible operation and cannot reach a value. If this is the case, we say that the expression
is <fo:inline font-style="italic">silent</fo:inline>. An expression is also silent if it depends on the result of a silent 
subexpression.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N201FA"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N201FE"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">10 / 0</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20203"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">6 + false</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20208"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">3 + 1/0</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2020D"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">4 + true = 5</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Note that Cor is a dynamically typed language. It does not statically check the type correctness
of an expression; instead, an expression with a type error is simply silent when evaluated.
</fo:block>

</fo:block>


<fo:block id="N20218"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Conditionals</fo:marker><fo:block font-size="17.28pt">Conditionals</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A conditional expression in Cor is of the form 
<fo:inline font-family="monospace">if</fo:inline> <fo:inline font-style="italic">b</fo:inline> <fo:inline font-family="monospace">then&gt;</fo:inline> <fo:inline font-style="italic">f</fo:inline> <fo:inline font-family="monospace">else</fo:inline> <fo:inline font-style="italic">g</fo:inline>. 
Its meaning is similar to that in other languages: the value
of the expression is the value of <fo:inline font-style="italic">f</fo:inline> if <fo:inline font-style="italic">b</fo:inline> is true, 
or the value of <fo:inline font-style="italic">g</fo:inline> if <fo:inline font-style="italic">b</fo:inline> is false. Note that <fo:inline font-style="italic">f</fo:inline> is 
evaluated only if <fo:inline font-style="italic">b</fo:inline> is true and <fo:inline font-style="italic">g</fo:inline> only if <fo:inline font-style="italic">b</fo:inline> is false. 
Thus, evaluation of <fo:inline font-family="monospace">if 3 = 3 then 5 else 1/0</fo:inline> does not cause any error. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Unlike other languages, expressions in Cor may be silent. If <fo:inline font-style="italic">b</fo:inline> is
silent, then the entire expression is silent. And, if <fo:inline font-style="italic">b</fo:inline> is true but <fo:inline font-style="italic">f</fo:inline>
is silent then also the expression is silent (similarly, if <fo:inline font-style="italic">b</fo:inline> is false
and <fo:inline font-style="italic">g</fo:inline> is silent).
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The behavior of conditionals is summarized by the following table,
where <fo:inline font-style="italic">v</fo:inline> denotes a value.

<fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="cond-table" xmlns:rx="http://www.renderx.com/XSL/Extensions"><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="none" border-right-style="none" border-top-style="none" border-bottom-style="none" table-layout="fixed" width="50%"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-column column-number="3"/><fo:table-column column-number="4"/><fo:table-header end-indent="0pt" start-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block font-weight="bold"><fo:inline font-style="italic">bexp</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block font-weight="bold"><fo:inline font-style="italic">texp</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block font-weight="bold"><fo:inline font-style="italic">fexp</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block font-weight="bold"><fo:inline font-style="italic">result</fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body end-indent="0pt" start-indent="0pt"><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-family="monospace">true</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-style="italic">v</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-style="italic">v</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-family="monospace">true</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-family="monospace">false</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-style="italic">v</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-style="italic">v</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block><fo:inline font-family="monospace">false</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>-</fo:block></fo:table-cell><fo:table-cell padding-left="2pt" padding-right="2pt" padding-top="2pt" padding-bottom="2pt" text-align="center"><fo:block>silent</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>

</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N202F9"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N202FD"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">if true then 4 else 5</fo:inline> evaluates to <fo:inline font-family="monospace">5</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20305"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">if  2 &lt; 3 &amp;&amp; 5 &lt; 4  then "blue" else "green"</fo:inline> evaluates to "green".</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2030A"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">if  true || "fish"  then "yes" else "no"</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2030F"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">if  false || false  then 4+true else 4+5</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20314"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">if 0 &lt; 5 then 0/5 else 5/0</fo:inline> evaluates to 0.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>


</fo:block>


<fo:block id="N2031C"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Variables</fo:marker><fo:block font-size="17.28pt">Variables</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A <fo:inline font-style="italic">variable</fo:inline> is a way of naming the value of some expression so that we can use it later.
Expression <fo:inline font-family="monospace">x</fo:inline>, where x is some variable name, evaluates to the result <fo:inline font-style="italic">bound</fo:inline>
to the variable x.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Variables are bound using a <fo:inline font-style="italic">declaration</fo:inline>. A declaration is a statement that has no value 
of its own but instead binds one or more variables. The simplest declaration is <fo:inline font-family="monospace">val</fo:inline>, which 
evaluates an expression and binds its result to a variable. Declarations follow the rules of 
<fo:basic-link xmlns:xlink="http://www.w3.org/1999/xlink" external-destination="url(http://en.wikipedia.org/wiki/Lexical_scope)">lexical scoping</fo:basic-link><fo:inline xmlns:xlink="http://www.w3.org/1999/xlink" hyphenate="false"> [<fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/Lexical_scope)">http://en.wikipedia.org/wiki/Lexical_scope</fo:basic-link>]</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N2033B">
val x = 1 + 2 + 3 + 4 + 5
val y = x + x
</fo:block>

These declarations bind variable <fo:inline font-family="monospace">x</fo:inline> to 15 and variable <fo:inline font-family="monospace">y</fo:inline> to 30.
</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
If the expression on the right side of a <fo:inline font-family="monospace">val</fo:inline> is silent, then the variable is not bound, but 
evaluation of other declarations and expressions can continue. If an evaluated expression depends on that
variable, that expression is silent.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N2034A">
val x = 1/0
val y = 4+5
if false then x else y
</fo:block>

Evaluation of the declaration and <fo:inline font-family="monospace">val y = 4+5</fo:inline> and the expression <fo:inline font-family="monospace">if false then x else y</fo:inline>
may continue even though <fo:inline font-family="monospace">x</fo:inline> is not bound. The expression evaluates to 9.

</fo:block>

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="N20357"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block>
<fo:inline font-family="monospace">val</fo:inline> expresses a limited form of concurrency called <fo:inline font-style="italic">declarative concurrency</fo:inline> (add
biblio reference to CTMCP). A declaration may be evaluated in parallel with the declarations and expressions that
follow it; any expression which uses a variable introduced by a declaration that is still evaluating will wait for
that evaluation to complete. However, since Cor is a purely declarative language, and cannot express state changes
or the progress of time, it is impossible to distinguish a parallel evaluation from a sequential evaluation within
Cor.
</fo:block></fo:block>


</fo:block>

<fo:block id="N20361"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Data Structures</fo:marker><fo:block font-size="17.28pt">Data Structures</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Cor supports two basic data structures, <fo:inline font-style="italic">tuples</fo:inline> and <fo:inline font-style="italic">lists</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A <fo:inline font-style="italic">tuple expression</fo:inline> is a comma-separated sequence of at least two 
expressions, enclosed by parentheses. Each expression is evaluated; the value of the whole 
tuple expression is a tuple value containing each of these values in order. 
If any of the expressions is silent, then the whole tuple expression is silent.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N20376"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2037A"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">(1+2, 7)</fo:inline> evaluates to <fo:inline font-family="monospace">(3,7)</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20382"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace"> ("true" + "false", true || false, true &amp;&amp; false) </fo:inline> evaluates to <fo:inline font-family="monospace">("truefalse", true, false)</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2038A"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">(2/2, 2/1, 2/0)</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A <fo:inline font-style="italic">list expression</fo:inline> is a comma-separated sequence of expressions enclosed by
square brackets. It may be of any length, including zero. Each expression is evaluated; the value 
of the whole list expression is a list value containing each of these values in order.   
If any of the expressions is silent, then the whole list expression is silent.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N20399"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2039D"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">[1,2+3] </fo:inline> evaluates to <fo:inline font-family="monospace">[1,5]</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N203A5"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace"> [true &amp;&amp; true]  </fo:inline> evaluates to <fo:inline font-family="monospace">[true]</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N203AD"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">[]</fo:inline> evaluates trivially to <fo:inline font-family="monospace">[]</fo:inline>, the empty list.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N203B5"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">[5, 5 + true, 5]</fo:inline> is silent.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
There is also a concatenation (<fo:inline font-style="italic">cons</fo:inline>) operation on lists,
written <fo:inline font-style="italic">h</fo:inline><fo:inline font-family="monospace">:</fo:inline><fo:inline font-style="italic">t</fo:inline>, where <fo:inline font-style="italic">h</fo:inline>
and <fo:inline font-style="italic">t</fo:inline> are expressions. Its result is a new list whose first element is the 
result of <fo:inline font-style="italic">h</fo:inline> and whose remaining elements are the list result of
<fo:inline font-style="italic">t</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N203D7"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N203DB"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">(1+3):[2+5,6]</fo:inline> evaluates to <fo:inline font-family="monospace">[4,7,6]</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N203E3"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">2:2:5:[] </fo:inline> evaluates to <fo:inline font-family="monospace">[2,2,5]</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N203EB"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Suppose <fo:inline font-family="monospace">t</fo:inline> is bound to [3,5]. Then <fo:inline font-family="monospace">1:t</fo:inline> evaluates to <fo:inline font-family="monospace">[1,3,5]</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N203F7"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">2:3</fo:inline> is silent, because <fo:inline font-family="monospace">3</fo:inline> is not a list.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>


</fo:block>

<fo:block id="N20402"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Patterns</fo:marker><fo:block font-size="17.28pt">Patterns</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
We have seen how to construct data structures. But how do we examine them, and use them? We use <fo:inline font-style="italic">patterns</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A pattern is a powerful way to bind variables. When writing <fo:inline font-family="monospace">val</fo:inline> declarations, instead of just
binding one variable, we can replace the variable name with a more complex pattern that follows the structure of the
value, and matches its components. A pattern's structure is called its <fo:inline font-style="italic">shape</fo:inline>; a
pattern may take the shape of any structured value. A pattern can hierarchically match a value, going deep into its 
structure. It can also bind an entire structure to a variable.

</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N20417"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2041B"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">val (x,y) = (2+3,2*3)</fo:inline> binds <fo:inline font-family="monospace">x</fo:inline> to 5 and <fo:inline font-family="monospace">y</fo:inline> to 6.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20426"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
<fo:inline font-family="monospace">val [a,b,c] = ["one", "two", "three"]</fo:inline> binds <fo:inline font-family="monospace">a</fo:inline> to "one", 
<fo:inline font-family="monospace">b</fo:inline> to "two", and <fo:inline font-family="monospace">c</fo:inline> to "three".
</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20435"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
<fo:inline font-family="monospace">val ((a,b),c) = ((1, true), (2, false))</fo:inline> binds <fo:inline font-family="monospace">a</fo:inline> to 1, <fo:inline font-family="monospace">b</fo:inline> to <fo:inline font-family="monospace">true</fo:inline>,
and <fo:inline font-family="monospace">c</fo:inline> to <fo:inline font-family="monospace">(2,false)</fo:inline>.
</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A pattern must not use a variable name more than once; patterns are <fo:inline font-style="italic">linear</fo:inline>. 
For example, <fo:inline font-family="monospace">(x,y,x)</fo:inline> is not a valid pattern.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Note that a pattern may fail to match a value, if it does not have the same shape as that value. In a <fo:inline font-family="monospace">val</fo:inline>
declaration, this has the same effect as evaluating a silent expression. No variable in the pattern is bound, and
if any one of those variables is later evalauted, it is silent.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
It is often useful to ignore parts of the value that are not relevant. We can use the
wildcard pattern, written <fo:inline font-family="monospace">_</fo:inline>, to do this; it matches any shape and binds no
variables.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N20463"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N20467"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">val (x,_,_) = (1,(2,2),[3,3,3])</fo:inline> binds <fo:inline font-family="monospace">x</fo:inline> to 1.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2046F"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">val [[_,x],[_,y]] = [[1,3],[2,4]]</fo:inline> binds <fo:inline font-family="monospace">x</fo:inline> to 3 and <fo:inline font-family="monospace">y</fo:inline> to 4.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

</fo:block>

<fo:block id="N2047D"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Functions</fo:marker><fo:block font-size="17.28pt">Functions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Like most other programming languages, Cor has the capability to define <fo:inline font-style="italic">functions</fo:inline>,
which are expressions that have a defined name, and have some number of parameters. Functions are declared 
using the keyword <fo:inline font-family="monospace">def</fo:inline>, in the following way.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20489">
def add(x,y) = x+y
</fo:block>

The expression on the right of the <fo:inline font-family="monospace">=</fo:inline> is called the <fo:inline font-style="italic">body</fo:inline> of the function.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
After defining the function, we can <fo:inline font-style="italic">call</fo:inline> it. A call looks just like the left side of
the declaration except that the variables have been replaced by expressions. To evaluate a call, first we 
evaluate each of its arguments. Then, we evaluate the body of the function with each of the argument 
names bound to the values of the arguments. The result of the call is the result of the function body.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N2049B"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N2049F"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">add(10,10*10)</fo:inline> evaluates to <fo:inline font-family="monospace">110</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N204A7"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">add(add(5,3),5)</fo:inline> evaluates to <fo:inline font-family="monospace">13</fo:inline>.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A call may have zero arguments, in which case we write <fo:inline font-family="monospace">()</fo:inline> for the arguments.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N204B6">
def zero() = 0
</fo:block>
</fo:block>


<fo:block id="N204BA"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Non-strict evaluation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Function calls are not strict in their arguments. Even if some of the argument expressions
to a call are silent, the function body will still be evaluated. Any variable 

</fo:block>


</fo:block>

<fo:block id="N204C2"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Recursion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Definitions can be recursive; that is, the name of a definition is bound in its own body.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N204C8">
def sumto(n) = if n &lt; 1 then 0 else n + sumto(n-1)
</fo:block>

Then, <fo:inline font-family="monospace">sumto(5)</fo:inline> evaluates to 15.
</fo:block>  

</fo:block>

<fo:block id="N204D0"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Mutual Recursion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

Mutual recursion is also supported: 

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N204D4">
def even(n) = 
  if (n &gt; 0) then odd(n-1)
  else if (n &lt; 0) then odd(n+1)
  else true
def odd(n) = 
  if (n &gt; 0) then even(n-1)
  else if (n &lt; 0) then even(n+1)
  else false
</fo:block>

There is no special keyword for mutual recursion; any contiguous sequence of function declarations is assumed to be 
mutually recursive.

</fo:block>

<fo:block id="N204D8"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Closure</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Functions are actually values, just like any other value. Defining a function creates a special value called a 
<fo:inline font-style="italic">closure</fo:inline>; the name of the function is a variable and its bound value is the closure. Thus, 
a closure can be put into a data structure, or bound to some other variable, just like any other value.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N204E1">
def a(x) = x-3
def b(y) = y*4
val funs = (a,b)
</fo:block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Like any other value, a closure can be passed as an argument to another function. This means that Cor
has <fo:inline font-style="italic">higher-order</fo:inline> functions.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N204EA">
def onetwosum(f) = f(1) + f(2)
def triple(x) = x * 3
onetwosum(triple)
</fo:block>

Then, <fo:inline font-family="monospace">onetwosum(triple)</fo:inline> is <fo:inline font-family="monospace">triple(1) + triple(2)</fo:inline>, which is <fo:inline font-family="monospace">1 * 3 + 2 * 3</fo:inline>, which evaluates to <fo:inline font-family="monospace">9</fo:inline>.

</fo:block>

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="N204FA"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block>
Since all declarations (including function declarations) in Cor are lexically scoped, these closures are
<fo:inline font-style="italic">lexical closures</fo:inline>.
</fo:block></fo:block>

</fo:block>

<fo:block id="N20501"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Lambda</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Sometimes one would like to create a closure directly, without bothering to give it a name. 
There is a special keyword <fo:inline font-family="monospace">lambda</fo:inline> for this purpose. By writing a function
definition with the keyword <fo:inline font-family="monospace">lambda</fo:inline> instead of a function name, that definition
becomes an expression which evaluates to a closure. 

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N2050D">
def onetwosum(f) = f(1) + f(2)
onetwosum( lambda(x) = x * 3 )
{- 
  identical to:
 
  def onetwosum(f) = f(1) + f(2)
  def triple(x) = x * 3
  onetwosum(triple)
-}
</fo:block>

Then, <fo:inline font-family="monospace">onetwosum( lambda(x) = x * 3 )</fo:inline> evaluates to 9. 

</fo:block>

</fo:block>


<fo:block id="N20515"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Clauses</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The combination of functions and pattern matching offers a powerful capability: 
<fo:inline font-style="italic">clausal</fo:inline> definition of functions. We can define expressions which execute 
different code depending on the structure of their arguments. 
</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Here's an example.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20521">
def sum([]) = 0
def sum(h:t) = h + sum(t)
</fo:block>

<fo:inline font-family="monospace">sum(L)</fo:inline> publishes the sum of the numbers in the list <fo:inline font-family="monospace">L</fo:inline>. It has two clauses: 
one which matches the empty list, and one which matches any nonempty list. If its argument is an empty 
list, it returns 0, the appropriate sum for an empty list. If the argument is a nonempty list, it adds 
the first element of that list to the sum of all of the other elements. In this way, it recursively finds 
the sum of the list.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A function may have multiple clauses, each of which has a sequence of patterns to match each argument, 
and a body expression. Naturally, all clauses of a function must have the same number of arguments. Any 
contiguous sequence of definitions with the same name and different arguments is interpreted as a clausal 
definition, where each individual declaration is a clause of the larger function. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
When the function is called, the clauses are tried in the order in which they appear until a match is found. 
If no clause matches, the call remains silent.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
We allow a new form of pattern which is very useful in clausal definition of functions: a constant pattern.
A constant pattern is a match only for the same constant value. We can use this to define the "base case"
of a recursive function in a straightforward way.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20533">
{- Fibonacci numbers -}
def fib(1) = 1
def fib(n) = if (n &lt; 1) then 0 else fib(n-1) + fib(n-2)
</fo:block>

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20536">
{- Take up to the first n elements from a list -}
def take(0,_) = []
def take(_,[]) = []
def take(n,h:t) = h:(take(n-1,t))
</fo:block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Mutual recursion and clausal definitions are allowed to occur together.
For example, this function takes a list and evaluates to a new list with every other element repeated:

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N2053C">
def stutter([]) = []
def stutter(h:t) = h:h:mutter(t)
def mutter([]) = []
def mutter(h:t) = h:stutter(t)
</fo:block>

<fo:inline font-family="monospace">stutter([1,2,3])</fo:inline> evaluates to <fo:inline font-family="monospace">[1,1,2,3,3]</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Clauses of mutually recursive functions may also be interleaved, to make
them easier to read.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20548">
def even(0) = true
def odd(0) = false
def even(n) = odd(if n &gt; 0 then n-1 else n+1)
def odd(n) = even(if n &gt; 0 then n-1 else n+1)
</fo:block>

</fo:block>

</fo:block>

</fo:block>

<fo:block id="N2054E"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Comments</fo:marker><fo:block font-size="17.28pt">Comments</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Cor has two kinds of comments.   

</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A line which begins with two dashes (<fo:inline font-family="monospace">--</fo:inline>), preceded only by whitespace, is a single line comment.
The region from the two dashes to the next encountered newline, inclusive, is ignored.  
<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N2055A">
-- This is a single line comment.
	 -- This is also a single line comment.
</fo:block>
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Multiline comments are enclosed by matching braces of the form <fo:inline font-family="monospace">{- -}</fo:inline>. 
Multiline comments may be nested. They may appear anywhere, even in the middle of an expression.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20563">
{- 
   This is a
   multiline comment.
-}
   
{- Multiline comments {- can be nested -} -}

{- They may appear anywhere, -} 
1 + {- even in the middle of an expression. -} 2 + 3
</fo:block>

</fo:block>

</fo:block>

</fo:block>


<fo:block id="N20569"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Communicating with external services</fo:marker><fo:block font-size="20.735999999999997pt">Communicating with external services</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Cor is a pure declarative language. It has no state, since variables are bound at most once 
and cannot be reassigned. It cannot communicate with the outside world except by producing 
a value. Clearly, the full Orc language must transcend this limitation, because the
orchestration of external services is critical to Orc's purpose.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
We now introduce <fo:inline font-style="italic">sites</fo:inline>: Orc's interface to external services.
Sites are called using the same syntax as a function call, but with a slightly different 
meaning. Sites are values, introduced and bound to variables by a special declaration.
</fo:block>

<fo:block id="N20576"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Calling a site</fo:marker><fo:block font-size="17.28pt">Calling a site</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Suppose that the variable <fo:inline font-family="monospace">Google</fo:inline> is bound to a site which sends a 
string to the Google search engine and returns the URL of the top result. A call to
<fo:inline font-family="monospace">Google</fo:inline> looks just like a function call.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20582">
{- Get the top search result for "computation orchestration" -}
Google("computation orchestration")
</fo:block>

When the Google service determines the top result for this search, it responds with
some URL. The site call then evaluates to that URL value. Note that the service might
never respond: Google's servers might be down, the network might be down, or the search 
might yield no result URL. If the service fails to respond, the site call remains
silent.
</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A site call involves only one roundtrip communication with an external service. All 
of the information needed for the call must be present before contacting the service.
Thus, site calls are strict; all arguments must be bound before the call can proceed. 
If any argument is silent, the call never occurs.
</fo:block>


<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A site is sometimes called purely for its effect on the external world; its return
value is irrelevant. Many sites which do not need to return a meaningful value will
instead return a <fo:inline font-style="italic">signal</fo:inline>: a special value which carries no 
information (analogous to the unit value <fo:inline font-family="monospace">()</fo:inline> in ML). The signal value
can be written as <fo:inline font-family="monospace">signal</fo:inline> within Orc programs.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20594">
-- Print a string to some output console
-- The return value of this site call is a signal
print("Hello, World!")
</fo:block>
</fo:block>


</fo:block>


<fo:block id="N20599"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Declaring sites</fo:marker><fo:block font-size="17.28pt">Declaring sites</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Sites are bound to variables by a <fo:inline font-family="monospace">site</fo:inline> declaration. This declaration makes
some external service available as a site and binds that site to the given variable.

This example instantiates a Java object to be used as a site in an Orc program, specifically
a Java object which provides an asynchronous buffer service.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N205A2">
{-  Define the Buffer site  -}
site Buffer = orc.lib.state.Buffer
</fo:block>
</fo:block>

  
</fo:block>

</fo:block>


<fo:block id="N205A8"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">The concurrency combinators of Orc</fo:marker><fo:block font-size="20.735999999999997pt">The concurrency combinators of Orc</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The Cor language has no concurrency. We extend Cor's simple model with powerful
concurrent capabilities by adding three <fo:inline font-style="italic">combinators</fo:inline>: special
operators that connect expressions together so that they can evaluate concurrently
in useful ways. We also generalize the simple notion of evaluation to a more
powerful notion that makes more sense in a concurrent context.
</fo:block>

<fo:block id="N205B2"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Bar: Parallelism and publications</fo:marker><fo:block font-size="17.28pt">Bar: Parallelism and publications</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The first combinator we introduce is the bar combinator, written <fo:inline font-family="monospace">|</fo:inline>. Two
expressions combined by <fo:inline font-family="monospace">|</fo:inline> evaluate in parallel with each other.
But what is the value of such an expression? For example, what is the value of 
<fo:inline font-family="monospace">1+2 | 3+4</fo:inline> ? 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
At this point, we can no longer talk about evaluation of an expression, because expressions 
may not have a single unique value. Instead, we <fo:inline font-style="italic">execute</fo:inline> an expression, 
which <fo:inline font-style="italic">publishes</fo:inline> some number of values. Whenever a Cor expression
is executed, it is evaluated, and its value is published. If the expression is silent,
then no value is published. An expression whose execution publishes no values is also
called silent.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
So, two expressions combined by <fo:inline font-family="monospace">|</fo:inline> execute in parallel, and whenever one of
those execution publishes a value, the combined execution publishes that value.
</fo:block>   

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Examples</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="N205D3"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N205D7"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">3+4</fo:inline> publishes 7.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N205DC"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">3/0 | 3/1</fo:inline> publishes <fo:inline font-family="monospace">3</fo:inline>.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="N205E4"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">1 | 2 | 1+2</fo:inline> publishes 1, 2, and 3, in unspecified order.</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
</fo:block>

</fo:block>

<fo:block id="N205EC"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Push: Capturing publications</fo:marker><fo:block font-size="17.28pt">Push: Capturing publications</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Now that we have expressions which publish multiple values, what can we do with those
publications? The push combinator, written <fo:inline font-family="monospace">&gt;x&gt;</fo:inline>, combines an
expression which publishes some values with another expression which will use those
values.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:inline font-style="italic">f</fo:inline> <fo:inline font-family="monospace">&gt;x&gt;</fo:inline> <fo:inline font-style="italic">g</fo:inline> executes
only the expression <fo:inline font-style="italic">f</fo:inline>. Each time that <fo:inline font-style="italic">f</fo:inline> publishes
a value <fo:inline font-style="italic">v</fo:inline>, a new parallel copy of <fo:inline font-style="italic">g</fo:inline> executes, in which 
the variable <fo:inline font-family="monospace">x</fo:inline> is bound to that value <fo:inline font-style="italic">v</fo:inline>. The combined
execution does not publish the value <fo:inline font-style="italic">v</fo:inline>; it is <fo:inline font-style="italic">hidden</fo:inline>.
However, whenever some copy of <fo:inline font-style="italic">g</fo:inline> publishes a value, the combined
execution also publishes that value.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The variable is optional; a push without a variable is written <fo:inline font-family="monospace">&gt;&gt;</fo:inline>.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
<fo:inline font-family="monospace">stop</fo:inline> is a special expression which is always silent. 
It is typically used together with a push to silence the publications of another expression.
</fo:block>

</fo:block>


<fo:block id="N2062A"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Pull: Making val concurrent</fo:marker><fo:block font-size="17.28pt">Pull: Making <fo:inline font-family="monospace">val</fo:inline> concurrent</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The pull combinator, written <fo:inline font-style="italic">g</fo:inline> <fo:inline font-family="monospace">&lt;x&lt;</fo:inline> <fo:inline font-style="italic">f</fo:inline>,
allows us to block a computation waiting for a result, or terminate a computation. In fact,
we have already seen this combinator: it is often useful to write it as a declaration of
the form <fo:inline font-family="monospace">val x =</fo:inline> <fo:inline font-style="italic">f</fo:inline> preceding an expression <fo:inline font-style="italic">g</fo:inline>.
In a functional setting, its behavior is exactly as previously described. However, in a concurrent 
setting, <fo:inline font-family="monospace">val</fo:inline> takes on two new properties.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
First, we cannot simply bind the variable to the result of the expression, because an expression may
now publish many values as it executes. Instead, the variable is bound to the first value
published by the execution of the expression. Additionally, as soon as that expression publishes
its first value, it <fo:inline font-style="italic">terminates</fo:inline>; its execution immediately stops. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Second, execution of subsequent statements and expressions continues immediately, without
waiting for the expression to publish a value and bind the variable. If the variable is used 
before it is bound, the execution using that variable <fo:inline font-style="italic">blocks</fo:inline> until the 
variable is bound. If the variable is never bound, then that execution blocks forever and 
becomes silent.
</fo:block>

</fo:block>



</fo:block>




<fo:block id="N20657"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Additional Features</fo:marker><fo:block font-size="20.735999999999997pt">Additional Features</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Orc has some advanced features that are useful in writing certain kinds of programs.
</fo:block>

<fo:block id="N2065E"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Special call forms</fo:marker><fo:block font-size="17.28pt">Special call forms</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block id="N20662"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">The <fo:inline font-family="monospace">.</fo:inline> notation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In many object-oriented programming languages, one calls a method or accesses a field of an
object using the dot operator; for example, <fo:inline font-family="monospace">obj.m()</fo:inline> calls the method
<fo:inline font-family="monospace">m</fo:inline> of the object <fo:inline font-family="monospace">obj</fo:inline>. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
There is a special kind of call in Orc which serves a similar purpose. One may write
<fo:inline font-family="monospace">x.msg</fo:inline>, for any identifiers <fo:inline font-family="monospace">x</fo:inline> and <fo:inline font-family="monospace">msg</fo:inline>. This attempts
to send the <fo:inline font-style="italic">message</fo:inline> 'msg' to the value bound to <fo:inline font-family="monospace">x</fo:inline>. 
The message may not be understood, in which case no publication occurs. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Typically this capability is used so that sites may be treated like objects, with multiple
methods and fields. For example, a channel <fo:inline font-family="monospace">c</fo:inline> might understand the messages
<fo:inline font-family="monospace">get</fo:inline> and <fo:inline font-family="monospace">put</fo:inline>, to get values from and put values on that channel,
respectively. Such calls would be written <fo:inline font-family="monospace">c.get()</fo:inline>, or <fo:inline font-family="monospace">c.put(6)</fo:inline>.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="N20698"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block>
Such calls actually occur in two steps: first <fo:inline font-family="monospace">c.put</fo:inline> sends the message
<fo:inline font-family="monospace">put</fo:inline> to the value <fo:inline font-family="monospace">c</fo:inline>; this publishes a site whose only purpose
is to put values to that channel. Then, that 'put site' is called on the argument
<fo:inline font-family="monospace">6</fo:inline>, sending 6 on that channel. Readers familiar with functional programming
will recognize this technique as <fo:inline font-style="italic">currying</fo:inline>.
</fo:block></fo:block>
</fo:block>

</fo:block>

<fo:block id="N206AC"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Currying</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
It is sometimes useful to <fo:inline font-style="italic">stage</fo:inline> the arguments to a function; that is,
rather than writing a function on two arguments, one instead writes a function on one
argument which returns a function taking the second argument and performing the remainder
of the evaluation.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
This technique is known as <fo:inline font-style="italic">currying</fo:inline> and it is common in functional
programming languages. It is obviously supported in Orc since it is possible to define
closures. However, there is additional support in defining functions directly in a curried way.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
For example, instead of writing

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206BE">
def f(x) = lambda(y) = x+y
</fo:block>

it is also permissible to simply write

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206C1">
def f(x)(y) = x+y
</fo:block>

Separate stages of application are separated by parentheses around their argument lists.
</fo:block>

</fo:block>


</fo:block>

<fo:block id="N206C7"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Special patterns</fo:marker><fo:block font-size="17.28pt">Special patterns</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block id="N206CB"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Bang pattern</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A bang pattern, written <fo:inline font-family="monospace">!p</fo:inline>, will publish the value that matches the pattern 
<fo:inline font-family="monospace">p</fo:inline> if the match is successful. This pattern is refutable only if <fo:inline font-family="monospace">p</fo:inline> is refutable.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206DA">
(1,2,3)  &gt;(x,!y,!z)&gt; stop
</fo:block>

This publishes <fo:inline font-family="monospace">2</fo:inline> and <fo:inline font-family="monospace">3</fo:inline>. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Note that a bang pattern will not publish if the overall match fails, even if its particular match succeeds:

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N206E6">
( (1,2,3) | (4,5,6) )  &gt;(1,!x,y)&gt;  stop
</fo:block>

This publishes only <fo:inline font-family="monospace">2</fo:inline>. Even though the pattern <fo:inline font-family="monospace">x</fo:inline> matches the value <fo:inline font-family="monospace">5</fo:inline>, 
the overall pattern <fo:inline font-family="monospace">(1,!x,y)</fo:inline> refuses the value <fo:inline font-family="monospace">(4,5,6)</fo:inline>, so <fo:inline font-family="monospace">5</fo:inline> is not published.
</fo:block>

</fo:block>

<fo:block id="N206FD"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">As pattern</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In taking apart a value with a pattern, it is often useful to capture intermediate results.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20703">
val (a,b) = ((1,2),(3,4))
val (ax,ay) = a
val (bx,by) = b
</fo:block>

We can use the <fo:inline font-family="monospace">as</fo:inline> keyword to simplify this process, giving a name to an entire
subpattern. Here is an equivalent version of the above code.

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="N20709">
val ((ax,ay) as a, (bx,by) as b) = ((1,2),(3,4))
</fo:block>
</fo:block>

</fo:block>

<fo:block id="N2070E"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Site patterns</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
A site pattern, written <fo:inline font-family="monospace">M(p,...,p)</fo:inline>, matches any value which was published by a call to the
site <fo:inline font-family="monospace">M</fo:inline> with arguments that match the tuple <fo:inline font-family="monospace">(p,...,p)</fo:inline>. 
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Site patterns provide a generalized version of datatype matching, as seen in the <fo:inline font-family="monospace">case .. of</fo:inline>
 or <fo:inline font-family="monospace">match .. with </fo:inline> constructs provided by Haskell and ML.
</fo:block> 

</fo:block>


<fo:block id="N20728"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Patterns as views</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
In addition to matching data structures constructed within Orc, patterns can also be used to match
external data structures and values. In this setting, a pattern does not necessarily observe the
true structure of the data, but instead provides a <fo:inline font-style="italic">view</fo:inline> of that data.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
For example, a list pattern can be used to view some sequentially structured data (such as lines
in a file) as if it were a list. The views allowed on a value are determined by the value itself;
for example, a value which does not support a list view will be refused by any list pattern it
is matched against.
</fo:block>


<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="N20735"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block>
The concept of views and view patterns is not new in programming languages; it has been demonstrated
in other languages, most notably <fo:basic-link xmlns:xlink="http://www.w3.org/1999/xlink" external-destination="url(http://www.scala-lang.org/)">Scala</fo:basic-link><fo:inline xmlns:xlink="http://www.w3.org/1999/xlink" hyphenate="false"> [<fo:basic-link external-destination="url(http://www.scala-lang.org/)">http://www.scala-lang.org/</fo:basic-link>]</fo:inline>. In fact, the 
underlying implementation strategy for using sites as view patterns is very similar to the use of
extractor objects and the <fo:inline font-family="monospace">unapply</fo:inline> method in Scala.
</fo:block></fo:block>


</fo:block>


</fo:block>

<fo:block id="N20741"><fo:block><fo:block><fo:block keep-together.within-column="always" font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">The before combinator</fo:marker><fo:block font-size="17.28pt">The before combinator</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
Orc has a fourth concurrent combinator: the <fo:inline font-style="italic">before</fo:inline> combinator,
written <fo:inline font-family="monospace">f ; g</fo:inline>. The before combinator executes its left side, publishing 
each of its publications as they occur. When the left side has completely finished 
executing (i.e. it is equivalent to <fo:inline xmlns:xlink="http://www.w3.org/1999/xlink"><fo:inline font-family="monospace">stop</fo:inline></fo:inline>), 
then the right side executes.
</fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
The before combinator is intended to capture as closely as possible the notion of sequential
processing, as denoted by <fo:inline font-family="monospace">;</fo:inline> in other languages. It was not present in the
original formulation of the Orc concurrency calculus; it has been added to support computation
and iteration over strictly finite data. Sequential programs conflate the concept of
producing a value with the concept of termination. Orc separates these two concepts; variable
binding combinators like <fo:inline font-family="monospace">&gt;x&gt;</fo:inline> and <fo:inline font-family="monospace">&lt;x&lt;</fo:inline> handle
values, whereas <fo:inline font-family="monospace">;</fo:inline> detects the completion of an execution.
</fo:block>

</fo:block>


</fo:block>

</fo:flow></fo:page-sequence>


 
</fo:root>