<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.declarations.site.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<!-- Site -->
	<section xml:id="ref.declarations.site">

	<title><code>site</code>:  Import Site</title>
	
	<!-- Index pointers for unwritten terms -->
	<indexterm><primary>import site</primary></indexterm>
	
		<para>
A <code>site</code> declaration makes some service available as a site and
binds it to a variable. The service might be an object in the host language 
(e.g. a class instance in Scala or Java), or an external Web service, 
or even a primitive operation like addition.
		</para>
		<para>
A site declaration loads a platform object, specifically a Java class, to be 
used as a site in an Orc program. The declaration uses a fully qualified Java class 
name to find and load a class, and creates an instance of that class to provide the service. 
		</para>
		
		<section xml:id="ref.declarations.site.syntax">
	  <title>Syntax</title>
	  <para>
	    <productionset>
	    	<productionrecap linkend="ebnf.declaration.site"/>
	    </productionset>
	  </para>
  </section>
  
    <section xml:id="ref.declarations.site.type">
	  <title>Type</title>
	  <para>
	    The type of a site is determined entirely by the site itself. It may be representable
	    in Orc, for example as a <link linkend="ref.data.closure.type">function type</link>,
	    or it may be an entirely opaque type. The type of a site behaves very much like a site
	    itself during typechecking; it is invoked with argument types and responds with a return
	    type.
	  </para>
    </section>
		
		<section xml:id="ref.declarations.site.examples">
		<title>Examples</title>
		
		
		  
		  <example xml:id="ref.declarations.site.examples.floor"><title>Declaring the Floor Site</title>
<programlisting language="orc-demo"><![CDATA[
{-  
Define the Floor site by instantiating a Java object
that calculates the floor function.
-}

site Floor = orc.lib.math.Floor

Floor(3.8) | Floor(-3.3)

{-
OUTPUT:PERMUTABLE:
3
-4
-}
]]></programlisting> 
		  </example>
		  
		  <example xml:id="ref.declarations.site.examples.sitedecl"><title>Declaring the Buffer Site</title>
<programlisting language="orc-demo"><![CDATA[
{-  
Define the Buffer site by instantiating a Java object
that provides a factory for buffers.
-}

site Buffer = orc.lib.state.Buffer

val b = Buffer()
b.put(10) >> b.get()

{-
OUTPUT:
10
-}
]]></programlisting> 
		  </example>

<para>
See the <link linkend="ref.stdlib.state.Buffer"><code>Buffer</code> site</link>.
</para>

		</section>
		
		<section xml:id="ref.declarations.site.links">
		  <title>Related Links</title>
		  
		  <informaltable frame="none">
	  		<tgroup cols="1" align="left">
	    	<thead>
	      		<row>
	        		<entry align="left">Related Reference Topics</entry>
	        	</row>
	    	</thead>
	    	<tbody valign="top">
	     		<row>
	        		<entry><itemizedlist>
	          			<listitem><para><link linkend="ref.stdlib">Standard Library</link></para></listitem>
	        		</itemizedlist></entry>
	        	</row>
	    	</tbody>
	  		</tgroup>
		  </informaltable>
		  
		  <informaltable frame="none">
	  		<tgroup cols="1" align="left">
	    	<thead>
	      		<row>
	        		<entry align="left">Related Tutorial Sections</entry>
	        	</row>
	    	</thead>
	    	<tbody valign="top">
	     		<row>
	        		<entry><itemizedlist>
          				<listitem><para><olink targetdoc="userguide" targetptr="chapter.services">Accessing External Services</olink></para></listitem>
        			</itemizedlist></entry>
	        	</row>
	    	</tbody>
	  		</tgroup>
		  </informaltable>
		  
	  </section>
	</section>

