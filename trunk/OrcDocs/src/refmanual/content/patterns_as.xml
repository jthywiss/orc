<?xml version="1.0" encoding="UTF-8"?>
<!-- patterns_as.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2010 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<!-- As Pattern -->
	<section xml:id="ref.patterns.as">
		<title>As Pattern</title>
		<section xml:id="ref.patterns.as.body">
			<para>
				In taking apart a value with a pattern, it is often useful to capture intermediate results.  
				The 'as' keyword is used to simplify programs, giving a name to an entire sub-pattern.
			</para>
			<para><emphasis role="strong">EBNF</emphasis>: <emphasis>P ::= P as X</emphasis></para>
		</section>
		
		 <section xml:id="ref.patterns.as.examples">
		  <title>Examples</title>

		  <example xml:id="ref.patterns.as.one"><title>Simplified Fragment</title>
<programlisting><![CDATA[
{- Consider this initial program fragment, without an 'as' pattern -}
val (a,b) = ((1,2),(3,4))
val (ax,ay) = a
val (bx,by) = b

{- Compared to the following fragment -}
val ((ax,ay) as a, (bx,by) as b) = ((1,2),(3,4))
]]></programlisting>
		  </example>
		</section>
		
		<section xml:id="ref.patterns.as.links">
		  <title>Related Links</title>
		  <informaltable frame='all'>
			<tgroup cols='2' align='left' colsep='1' rowsep='1'>
			<colspec colname='c1'/>
			<colspec colname='c2'/>
			<thead>
			<row>
			  <entry align="center">Related Reference Topics</entry>
			  <entry align="center">Related Tutorial Sections</entry>
			</row>
			</thead>
			<tbody>
			<row>
			  <entry>Combinators</entry>
			  <entry><olink targetdoc="root" targetptr="special.dot">The . notation</olink></entry>
			</row>
			<row>
			  <entry>Parallel Server Network</entry>
			  <entry><olink targetdoc="root" targetptr="terms.constant">Constants</olink></entry>
			</row>
			<row>
			  <entry>Site</entry>
			  <entry><olink targetdoc="root" targetptr="cor.closures">Closures</olink></entry>
			</row>
			<row>
			  <entry>JavaCall</entry>
			  <!-- Use the following entry to fill up any remaining empty slots in that column -->
			  <entry morerows='1' valign='middle'><para></para></entry>
			</row>
			<row>
			  <entry>Baz</entry>
			</row>
			</tbody>
			</tgroup>
		  </informaltable>
	  </section>
	</section>
