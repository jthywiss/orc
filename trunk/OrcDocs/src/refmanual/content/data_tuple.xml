<?xml version="1.0" encoding="UTF-8"?>
<!-- data_tuple.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2010 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<section xml:id="ref.data.tuple">
<title>Tuple Values</title>

<para><emphasis role="strong">Type</emphasis>: <code>(T1, T2...)</code></para>

<para>
Orc's <type>Tuple</type> data type is a sequence of values of a specific length, greater than one.
(Orc does not provide for the construction of "0-tuples" or "1-tuples".)
Tuples vary from lists in two significant ways:
<itemizedlist>
<listitem><para>Tuples are intended to be used where they have a fixed length.
Lists may have varying lengths.</para></listitem>
<listitem><para>Tuples may have elements of varying types in each position.
Lists must be of a uniform type (though this may be <type>Top</type>).</para></listitem>
</itemizedlist>
</para>

<para>
Although one can explicitly project a tuple element by its index, it is
idiomatic, safer, and far more common to use pattern matching to extract
tuple elements.
</para>

<section xml:id="ref.data.tuple.constructors">
<title>Constructors</title>

<para><emphasis role="strong">EBNF</emphasis>: <replaceable>Tuple</replaceable> ::= <code>(</code> <replaceable>E</replaceable><code>,</code> ... <code>,</code> <replaceable>E</replaceable> <code>)</code></para>

<para>Tuple are constructed simply with parenthesis-enclosed comma-separated lists of expressions.</para>

<para>Construction proceeds by evaluating all the expressions in parallel, and using the
first publication of each, as if each was under a pruning combinator.
The tuple is published when all expressions have published a value.
If any expression is silent, the tuple constructor is silent.</para>

</section>

<section xml:id="ref.data.tuple.operations">
<title>Operations</title>

<para>Notable tuple operations include:
<itemizedlist>
<listitem><para>Projection: <replaceable>tuple</replaceable><code>(</code> <replaceable>index</replaceable> <code>)</code></para></listitem>
<listitem><para>Project first element of pair: <code>fst</code></para></listitem>
<listitem><para>Project second element of pair: <code>snd</code></para></listitem>
</itemizedlist>
</para>

</section>

<section xml:id="ref.data.tuple.javacalls">
<title>Java calls</title>

<para>Orc <type>Tuple</type>s don't correspond to any Java value, so if a <type>Tuple</type>
is passed to Java code, it will be as an <type>java.lang.Object</type> of a type not specified here.</para>

</section>

<section xml:id="ref.data.tuple.examples">
<title>Examples</title>


<example xml:id="ref.data.tuple.examples.one">
<title>TODO:Example1</title>
<programlisting language="orc-demo"><![CDATA[
--TODO
signal
]]></programlisting>
</example>

<example xml:id="ref.data.tuple.examples.forkjoin"><title>Fork-Join</title>
<programlisting><![CDATA[
def f() = println("f starting") >> Rtimer(450) >> println("f is done") >> "f"
def g() = println("g starting") >> Rtimer(900) >> println("g is done") >> "g"

Rtimer(100) >> (f(), g())
]]></programlisting>
</example>

</section>

<section xml:id="ref.data.tuple.links">
<title>Related Links</title>

<informaltable frame="none">
  <tgroup cols="2" align="left">
    <thead>
      <row>
        <entry align="center">Related Reference Topics</entry>
        <entry align="center">Related Tutorial Sections</entry>
      </row>
    </thead>
    <tbody valign="top">
      <row>
        <entry><itemizedlist>
          <listitem><para><xref linkend="types.Tuple"/></para></listitem>
          <listitem><para><xref linkend="library.state.fst"/></para></listitem>
          <listitem><para><xref linkend="library.state.snd"/></para></listitem>
        </itemizedlist></entry>
        <entry><itemizedlist>
          <listitem><para><olink targetdoc="root" targetptr="TODO">TODO</olink></para></listitem>
          <listitem><para><olink targetdoc="root" targetptr="TODO">TODO</olink></para></listitem>
          <listitem><para><olink targetdoc="root" targetptr="TODO">TODO</olink></para></listitem>
        </itemizedlist></entry>
      </row>
    </tbody>
  </tgroup>
</informaltable>

</section>

</section>
