<?xml version="1.0" encoding="UTF-8"?>
<!-- data_list.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2010 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<section xml:id="ref.data.list">
<title>List Values</title>

<para><emphasis role="strong">Type</emphasis>: <code>List[T]</code></para>

<para>
A list consists of a finite sequence of values, all of the same type. The
list may have no item; in that case it is an empty list. An empty list
is written as [].
</para>

<para>
The type of a list is <code>List[U]</code>, where <code>U</code> is the join 
of the types of each of its elements. In particular, if all of the elements 
have type <code>T</code>, then the list will have type <code>List[T]</code>.
</para>

<section xml:id="ref.data.list.co
nstructors">
<title>Constructors</title>

<para><emphasis role="strong">EBNF</emphasis>: <emphasis>List ::= <code><![CDATA[(E, ..., E)]]></code></emphasis></para>

<para>
A list is constructed by enclosing a comma-separated sequence of expressions in square brackets.
The value of the list expression [e_1, e_2, ..., e_n] is the same as the value of
<programlisting><![CDATA[
[x_1, x_2, ..., x_n]
   <x_1< e_1
   <x_2< e_2
   ...
   <x_n< e_n
]]></programlisting>
</para>

<para>
	That is, all expressions are concurrently evaluated, and the first published value
	from each expression is used for construction of the list.  If any expression is silent, 
	the list constructor is silent.
</para>

</section>

<section xml:id="ref.data.list.operations">
<title>Operations</title>

<para>Notable list operations include:
<itemizedlist>
<listitem><para><code>head</code>: applied to a non-empty list, it returns the first item of the list.</para></listitem>
<listitem><para><code>tail</code>: applied to a non-empty list, it returns the original list without its head.</para></listitem>
<listitem><para><code>cons</code>: applied to an item h and a list t returns a list whose head is h and tail
  								   is t. Either t has to be empty or the elements of t have the same
  								   type as that of h. cons is written as a colon (:) separating h and t.</para></listitem>
</itemizedlist>
</para>

</section>

<section xml:id="ref.data.list.javacalls">
<title>Java calls</title>

<para>Orc <type>List</type>s don't correspond to any Java value, so if a <type>List</type>
is passed to Java code, it will be as a <type>java.lang.Object</type> of a type not specified here.</para>

</section>

<section xml:id="ref.data.list.examples">
<title>Examples</title>


<example xml:id="ref.data.list.examples.one">
<title>Sample Lists</title>
<programlisting language="orc"><![CDATA[
[] -- empty list
[1,2,3] -- a list of integers
[(1,2),(2,3),(3,4)] -- a list of tuples of integers
[fib(1),fib(2),fib(3)] -- the list of first 3 fibonacci numbers
[[1],[2,2],[3,3,3]] -- a list of lists of integers

-- The following are valid lists, but they all have type List[Top],
-- since their elements have incompatible types.
  [[2],3,5,7]         [(3,5), 8]          [(3,5), (3,8,2)]    [0,"misra"]

-- The order and number of elements in a list matter. So,
[2,3] {- is not the same as -}  [3,2]
[2] {- is not the same as -}    [2,2]
]]></programlisting>
</example>

<example xml:id="ref.data.list.examples.two">
<title>List Operations</title>
<programlisting language="orc"><![CDATA[
head([3]) = 3
tail([3]) = []
head([3,2,5]) = 3
tail([3,2,5]) = [2,5]
3:[] = [3]
3:[2,5] = [3,2,5]
[2,3]: [[1],[2,3,4]] = [[2,3],[1],[2,3,4]]
]]></programlisting>
</example>

</section>

<section xml:id="ref.data.list.links">
<title>Related Links</title>

	<informaltable frame="none">
  		<tgroup cols="1" align="left">
    	<thead>
      		<row>
        		<entry align="center">Related Reference Topics</entry>
        	</row>
    	</thead>
    	<tbody valign="top">
     		<row>
        		<entry><itemizedlist>
        			<listitem><para>ADD LINKS TO LIBRARY</para></listitem>
          			<listitem><para><olink targetdoc="ref.syntax.lexical" targetptr="ref.syntax.lexical">Lexical Specifications</olink></para></listitem>
          			<listitem><para><olink targetdoc="ref.syntax.EBNF" targetptr="ref.syntax.EBNF">EBNF</olink></para></listitem>
        		</itemizedlist></entry>
        	</row>
    	</tbody>
  		</tgroup>
	  </informaltable>
	  
	  <informaltable frame="none">
  		<tgroup cols="1" align="left">
    	<thead>
      		<row>
        		<entry align="left">Related Tutorial Sections</entry>
        	</row>
    	</thead>
    	<tbody valign="top">
     		<row>
        		<entry><itemizedlist>
          			<listitem><para><olink targetdoc="root" targetptr="cor.data">Data Structures</olink></para></listitem>
        		</itemizedlist></entry>
        	</row>
    	</tbody>
  		</tgroup>
	  </informaltable>
</section>

</section>
