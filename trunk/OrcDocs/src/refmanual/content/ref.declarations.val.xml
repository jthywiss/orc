<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.declarations.val.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2010 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<!-- Val -->
	<section xml:id="ref.declarations.val">
		<title><code>val</code> &#8212; Bind Value</title>
		<section xml:id="ref.declarations.val.body">
			<para>
				The declaration <code>val</code> <replaceable>x</replaceable> <code>=</code> <replaceable>G</replaceable>, followed by expression <replaceable>F</replaceable>, is a different way of writing the expression <replaceable>F</replaceable> <code>&lt;</code><replaceable>x</replaceable><code>&lt;</code> <replaceable>G</replaceable>.
				Thus, <code>val</code> shares all of the behavior of the <link linkend="ref.combinators.pruning">pruning</link> combinator.
			</para>
		</section>
		
		<section xml:id="ref.declarations.val.syntax">
	  <title>Syntax</title>
	  <para>
	    <productionset>
	    	<productionrecap linkend="ebnf.declaration.val"/>
	    </productionset>
	  </para>
	  </section>
		
		<section xml:id="ref.expressions.val.type">
	    <title>Type</title>
			<para>
				When a declaration occurs as <code>val</code> <replaceable>x</replaceable> <code>=</code> <replaceable>F</replaceable>, the expression in scope for the declaration
				is typechecked using the assumption <replaceable>x</replaceable> <code>::</code> <replaceable>T</replaceable>, where <replaceable>T</replaceable> is the type of <replaceable>F</replaceable>.
			</para>
		</section>
		
		<section xml:id="ref.declarations.val.examples">
		<title>Examples</title>

		<example xml:id="ref.expressions.val.examples.bindings"><title>Bindings</title>
<programlisting language="orc-demo"><![CDATA[
{- Bind x to true or false arbitrarily 
   Bind y to 2
-}

val x = true | false
val y = Rwait(200) >> 2 | Rwait(300) >> 3

"x is " + x + ", " +
"y is " + y

{-
OUTPUT:
"x is true, y is 2"

OUTPUT:
"x is false, y is 2"
-}
]]></programlisting>
		  </example>
		  
		  <example xml:id="ref.expressions.val.examples.timeout"><title>Timeout</title>
<programlisting language="orc"><![CDATA[
{- Publish the result of a Google search.
   If it takes more than 5 seconds, time out.
-}

val result = Google("impatience") | Rwait(5000) >> "Search timed out."

{-
NONRUNNABLE
-}
]]></programlisting>
		  </example>
		  
		  <example xml:id="ref.expressions.val.examples.die"><title>Roll Die</title>
<programlisting language="orc"><![CDATA[
{- Bind an arbitrary integer between 1 and 6, inclusive,
   to a variable in order to simulate a 6-sided die roll.
-}

val roll = (1 | 2 | 3 | 4 | 5 | 6)
"You rolled " + roll

{-
OUTPUT:
"You rolled 1"

OUTPUT:
"You rolled 2"

OUTPUT:
"You rolled 3"

OUTPUT:
"You rolled 4"

OUTPUT:
"You rolled 5"

OUTPUT:
"You rolled 6"
-}
]]></programlisting>
		  </example>
		  
		</section>
		
		<section xml:id="ref.declarations.val.links">
		  <title>Related Links</title>
		  
		  <informaltable frame="none">
	  		<tgroup cols="1" align="left">
	    	<thead>
	      		<row>
	        		<entry align="left">Related Reference Topics</entry>
	        	</row>
	    	</thead>
	    	<tbody valign="top">
	     		<row>
	        		<entry><itemizedlist>
	          			<listitem><para><link linkend="ref.expressions">Expressions</link></para></listitem>
	          			<listitem><para><link linkend="ref.declarations.def"><code>def</code> &#8212; Define Function</link></para></listitem>
	        		</itemizedlist></entry>
	        	</row>
	    	</tbody>
	  		</tgroup>
		  </informaltable>
		  
		  <informaltable frame="none">
	  		<tgroup cols="1" align="left">
	    	<thead>
	      		<row>
	        		<entry align="left">Related Tutorial Sections</entry>
	        	</row>
	    	</thead>
	    	<tbody valign="top">
	     		<row>
	        		<entry><itemizedlist>
          				<listitem><para><olink targetdoc="userguide" targetptr="orc.language.patterns">Patterns</olink></para></listitem>
        			</itemizedlist></entry>
	        	</row>
	    	</tbody>
	  		</tgroup>
		  </informaltable>
		  
	  </section>
	</section>
