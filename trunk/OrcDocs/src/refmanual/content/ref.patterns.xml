<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.patterns.xml - DocBook source for an Orc reference manual chapter

     $Id$

     Copyright (c) 2010 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<chapter 
	xml:id="ref.patterns"  
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xi="http://www.w3.org/2001/XInclude">
	
<title>Patterns</title>

<para>
A pattern is a structure whose components may be variables, constants,
wild cards, or other patterns.
</para>

<para>
Patterns may be used in declarations, clausal definitions of functions, etc.
</para>

<para>
A pattern is a powerful way to bind variables. When writing <code>val</code> declarations, instead of just
binding one variable, we can replace the variable name with a more complex pattern that follows the structure of the
value, and matches its components. A pattern's structure is called its <firstterm>shape</firstterm>; a
pattern may take the shape of any structured value. A pattern can hierarchically match a value, going deep into its 
structure. It can also bind an entire structure to a variable.
</para>

<para>
Patterns are <firstterm>linear</firstterm>; that is, a pattern may mention a variable name at most once. 
For example, <code>(x,y,x)</code> is not a valid pattern.
</para>

<para>
Note that a pattern may fail to match a value, if it does not have the same shape as that value. In a <code>val</code>
declaration, this has the same effect as evaluating a silent expression. No variable in the pattern is bound, and
if any one of those variables is later evaluated, it is silent.
</para>

<xi:include href="ref.patterns.constant.xml"/>
<xi:include href="ref.patterns.variable.xml"/>
<xi:include href="ref.patterns.tuple.xml"/>
<xi:include href="ref.patterns.list.xml"/>
<xi:include href="ref.patterns.call.xml"/>
<xi:include href="ref.patterns.cons.xml"/>
<xi:include href="ref.patterns.as.xml"/>
<xi:include href="ref.patterns.wildcard.xml"/>

</chapter>
