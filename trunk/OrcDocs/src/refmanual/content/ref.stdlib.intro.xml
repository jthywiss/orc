<?xml version='1.0' encoding='UTF-8'?>
<!-- ref.stdlib.intro.xml - DocBook source for an Orc reference manual component

     $Id$

     Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<para xmlns="http://docbook.org/ns/docbook">
     <para>
     The standard library is a set of declarations implicitly available to all Orc
     programs.  In this section we give an informal description of the standard library,
     including the type of each declaration and a short explanation of its use.
     
     Orc programs are expected to rely on the host language and environment for
     all but the most essential sites.  For example, in the Java implementation of
     Orc, the entire Java standard library is available to Orc programs via
     <code>class</code> declarations. Therefore the Orc standard library aims only
     to provide convenience for the most common Orc idioms, not the complete set of
     features needed for general-purpose programming.
     
     The documentation of library functions uses special notation for parametric 
     types that have dot-accessible members.
     Member names are written in the form Type.member, e.g.  <code>Foo.get</code>
     refers to the <code>get</code> member of an object of type <code>Foo</code>.
     The object type can include type variables which are referenced by the member
     type, so for example <code>site Buffer[A].get() :: A</code> means that
     when the <code>get</code> method is called on a <code>Buffer</code> holding an
     arbitrary element type <code>A</code>, it will return a value of the same type.
     </para>

	 <para>
		The Standard Library makes use of colored tags to quickly convey properties 
		of library sites.  The tags and their definitions are as follows:
	 </para>
	
	<para>
		<variablelist><title>Site Property Set</title>
		  <varlistentry>
		    <term><sitepropset><siteprop propname="indefinite"/></sitepropset></term>
		    <listitem>
		      <para>The site may block execution of an expression, since it is not 
		            guaranteed to always eventually publish a value or halt.</para>
		    </listitem>
		  </varlistentry>
		  <varlistentry>
		    <term><sitepropset><siteprop propname="definite"/></sitepropset></term>
		    <listitem>
		      <para>The site will never block execution of an expression, since it is 
		            guaranteed to always eventually publish a value or halt.</para>
		    </listitem>
		  </varlistentry>
		  <varlistentry>
		    <term><sitepropset><siteprop propname="pure"/></sitepropset></term>
		    <listitem>
		      <para>The site is pure.</para>
		    </listitem>
		  </varlistentry>
		  <varlistentry>
		    <term><sitepropset><siteprop propname="idempotent"/></sitepropset></term>
		    <listitem>
		      <para>The site is idempotent, therefore applying it multiple times to the same
		      		argument will not change the result.</para> 
		    </listitem>
		  </varlistentry>
 </variablelist>
	
	</para>
	
</para>