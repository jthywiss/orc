<?xml version='1.0' encoding='UTF-8'?>
<section xml:id="ref.stdlib.time"> 
        <!--Generated by OrcDocgen from time.inc on Feb 2, 2011 4:27:29 PM-->
        <title>time</title>
        <para>Real and virtual time.
</para><variablelist>
            <?dbfo list-presentation="list"?>
            <varlistentry xml:id="ref.stdlib.time.Rtimer">
  		  <term><code>Rtimer</code></term>
        <listitem>
  		 	  <para><code>site Rtimer(Integer) :: Signal</code></para>
  			  <para><sitepropset>
   <siteprop propname="blocking"/>
</sitepropset>
</para><para>Publish a signal after the given number of milliseconds.
</para><variablelist>
            <?dbfo list-presentation="list"?>
            <varlistentry>
  		  <term><code>Rtimer</code></term>
        <listitem>
  		 	  <para><code>site Rtimer.time() :: Integer</code></para>
  			  <para><sitepropset>
   <siteprop propname="nonblocking"/>
</sitepropset>
</para><para>Return the current real time in milliseconds, as
measured from midnight January 1, 1970 UTC.
Ranges from 0 to <code>Long.MAX_VALUE</code>.
</para>
  			</listitem>
  		</varlistentry>
          </variablelist>
  			</listitem>
  		</varlistentry>
          </variablelist><variablelist>
            <?dbfo list-presentation="list"?>
            <varlistentry xml:id="ref.stdlib.time.Clock">
  		  <term><code>Clock</code></term>
        <listitem>
  		 	  <para><code>def Clock()() :: Number</code></para>
  			  <para>A call to <code>Clock</code> creates a new relative real-time clock.
Calling a relative clock returns the number
of milliseconds which have elapsed since the
clock was created.
</para><para>Example:
<programlisting language="orc-demo"><![CDATA[
-- Publishes a value near 1000
val c = Clock()
Rtimer(1000) >> c()]]></programlisting>
</para>
  			</listitem>
  		</varlistentry>
          </variablelist><variablelist>
            <?dbfo list-presentation="list"?>
            <varlistentry xml:id="ref.stdlib.time.Vtimer">
  		  <term><code>Vtimer</code></term>
        <listitem>
  		 	  <para><code>site Vtimer(Integer) :: Signal</code></para>
  			  <para><sitepropset>
   <siteprop propname="blocking"/>
</sitepropset>
</para><para>Publish a signal after the given amount of virtual time.
</para>
  			</listitem>
  		</varlistentry><varlistentry xml:id="ref.stdlib.time.Vclock">
  		  <term><code>Vclock</code></term>
        <listitem>
  		 	  <para><code>site Vclock() :: Integer</code></para>
  			  <para><sitepropset>
   <siteprop propname="nonblocking"/>
</sitepropset>
</para><para>Return the current virtual time.
</para>
  			</listitem>
  		</varlistentry>
          </variablelist><variablelist>
            <?dbfo list-presentation="list"?>
            <varlistentry xml:id="ref.stdlib.time.metronome">
  		  <term><code>metronome</code></term>
        <listitem>
  		 	  <para><code>def metronome(Integer) :: Signal</code></para>
  			  <para>Publish a signal at regular intervals, indefinitely. The period is given by the
argument, in milliseconds.
</para>
  			</listitem>
  		</varlistentry>
          </variablelist>
      </section>