<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.data.closure.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<section xml:id="ref.data.closure">
<title>Closures</title>

<para>
In Orc, functions are first-class values. <link linkend="ref.declarations.def">Defining a function</link> creates a special value called a 
<firstterm>closure</firstterm>; the defined name of the function is a variable and the value bound to it
 is the closure. A closure can be published, passed to a site, or put into a data structure, just 
 like any other value.
</para>
<para>
Since all declarations - including function declarations - are lexically scoped, these closures are
<emphasis><ulink url="http://en.wikipedia.org/wiki/Lexical_closure">lexical closures</ulink></emphasis>. 
When a closure is created, if the body of the function contains any variables other than the formal parameters, 
the bindings for those variables are stored in the closure. Then, when the closure is called, the evaluation 
of the function body uses those stored variable bindings.  
</para>


<section xml:id="ref.data.closure.type">
  <title>Type</title>
	<para>
		The type of a closure is a <firstterm>function type</firstterm> <code>lambda</code> <code>[</code><replaceable>X<subscript>0</subscript></replaceable> <code>,</code> &#x2026; <code>,</code> <replaceable>X<subscript>m</subscript></replaceable><code>]</code><code>(</code><replaceable>T<subscript>0</subscript></replaceable> <code>,</code> &#x2026; <code>,</code> <replaceable>T<subscript>n</subscript></replaceable><code>)</code> <code>::</code> <replaceable>R</replaceable>,
		where <replaceable>T<subscript>i</subscript></replaceable> are the argument types of the closure, <replaceable>R</replaceable> is its return type,
		and <replaceable>X<subscript>j</subscript></replaceable> are the type parameters if the function is <link linkend="ref.types.polymorphism">polymorphic</link>.
		This type is derived from the original <link linkend="ref.declarations.def.type">definition of the function</link>.
	</para>
</section>


<section xml:id="ref.data.closure.examples">
		  <title>Examples</title>

	<example xml:id="ref.data.closure.examples.stagedadd"><title>Staged Addition</title>
<programlisting language="orc-demo"><![CDATA[
{- Create a closure using inc, and then apply it -}

def inc(n) = 
  def addnto(x) = x + n
  addnto
  
val f = inc(3)
f(4)

{-
OUTPUT:
7
-}
]]></programlisting>
		  </example>

		  <example xml:id="ref.data.closure.examples.onetwosum"><title>One Two Sum</title>
<programlisting language="orc-demo"><![CDATA[
{- The function triple() is used as a closure -}

def onetwosum(f) = f(1) + f(2)
def triple(x) = x * 3
onetwosum(triple)

{-
OUTPUT:
9
-}
]]></programlisting>
		  </example>

</section>

<section xml:id="ref.data.closure.links">
<title>Related Links</title>

	<informaltable frame="none">
  		<tgroup cols="1" align="left">
    	<thead>
      		<row>
        		<entry align="left">Related Reference Topics</entry>
        	</row>
    	</thead>
    	<tbody valign="top">
     		<row>
        		<entry><itemizedlist>
        		  <listitem><para><link linkend="ref.declarations.def"><code>def</code></link></para></listitem>
          	  <listitem><para><link linkend="ref.expressions.lambda">Lambda</link></para></listitem>
          		<listitem><para><link linkend="ref.expressions.call.function">Function Calls</link></para></listitem>
        		</itemizedlist></entry>
        	</row>
    	</tbody>
  		</tgroup>
	  </informaltable>
	  
	  <informaltable frame="none">
  		<tgroup cols="1" align="left">
    	<thead>
      		<row>
        		<entry align="left">Related Tutorial Sections</entry>
        	</row>
    	</thead>
    	<tbody valign="top">
     		<row>
        		<entry><itemizedlist>
          			<listitem><para><olink targetdoc="userguide" targetptr="orc.language.currying">Currying</olink></para></listitem>
        		</itemizedlist></entry>
        	</row>
    	</tbody>
  		</tgroup>
	  </informaltable>
</section>

</section>
