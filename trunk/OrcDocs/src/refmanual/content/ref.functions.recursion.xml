<?xml version="1.0" encoding="UTF-8"?>
<!-- functions_recursion.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2010 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<!-- Recursive Functions -->
   <section xml:id="ref.functions.recursion">
      <title>Recursive Functions</title>
	  <section xml:id="ref.functions.recursion.behavior">
		  <title>Behavior</title>
		  <para>
		  Functions can be recursive; that is, the name of a function may be used in its own body.
		  </para>
		  <para>
		  A set of functions may be mutually recursive by naming each other in their bodies.
		  There is no special keyword for mutual recursion.
		  </para>
	  </section>
	  <section xml:id="ref.functions.recursion.examples">
		  <title>Examples</title>

		  <example xml:id="ref.functions.recursion.examples.one"><title>Simple example of a recursive function</title>
<programlisting language="orc"><![CDATA[
def sumto(n) = if n < 1 then 0 else n + sumto(n-1)
]]></programlisting>
		  </example>

		  <example xml:id="ref.functions.recursion.examples.two"><title>Mutually Recursive Parity v1</title>
<programlisting language="orc"><![CDATA[
{- 
Return true if parity of 1s in a binary string is even 
Equivalent to Mutually Recursive Parity v1
-}
def even([]) = true
def odd([]) = false
def even("1":xs) = odd(xs)
def odd("1":xs) = even(xs)
def even("_":xs) = even(xs)
def odd("_":xs) = odd(xs)
]]></programlisting>
		  </example>
		  
		  <example xml:id="ref.functions.recursion.examples.three"><title>Mutually Recursive Parity v2</title>
<programlisting language="orc"><![CDATA[
{- 
Return true if parity of 1s in a binary string is even
Equivalent to Mutually Recursive Parity v1
-}
def even([]) = true
def even("1":xs) = odd(xs)
def even("_":xs) = even(xs)

def odd([]) = false
def odd("1":xs) = even(xs)
def odd("_":xs) = odd(xs)
]]></programlisting>
		  </example>
		  
	  </section>
	  <section xml:id="ref.functions.recursion.links">
		  <title>Related Links</title>
		  
		  <informaltable frame="none">
	  		<tgroup cols="1" align="left">
	    	<thead>
	      		<row>
	        		<entry align="center">Related Reference Topics</entry>
	        	</row>
	    	</thead>
	    	<tbody valign="top">
	     		<row>
	        		<entry><itemizedlist>
	          			<listitem><olink targetdoc="ref.functions.clausal" targetptr="ref.functions.clausal">Clausal Functions</olink></listitem>
	        		</itemizedlist></entry>
	        	</row>
	    	</tbody>
	  		</tgroup>
		  </informaltable>
		  
		  <informaltable frame="none">
	  		<tgroup cols="1" align="left">
	    	<thead>
	      		<row>
	        		<entry align="left">Related Tutorial Sections</entry>
	        	</row>
	    	</thead>
	    	<tbody valign="top">
	     		<row>
	        		<entry><itemizedlist>
          				<listitem><para><olink targetdoc="root" targetptr="section.orc.recursion">Recursion</olink></para></listitem>
        			</itemizedlist></entry>
	        	</row>
	    	</tbody>
	  		</tgroup>
		  </informaltable>
		  
	  </section>
   </section>
