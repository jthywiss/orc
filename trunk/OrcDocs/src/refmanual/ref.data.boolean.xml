<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.data.boolean.xml - DocBook source for an Orc reference manual section

   $Id$

   Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

   Use and redistribution of this file is governed by the license terms in
   the LICENSE file found in the project's top-level directory and also found at
   URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<section xml:id="ref.data.boolean" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
<title>Booleans</title>

  <para>Orc supports <indexterm significance="preferred"><primary>Boolean</primary></indexterm><firstterm>Boolean</firstterm> values, <code>true</code> and <code>false</code>.</para>

	<section xml:id="ref.data.boolean.syntax">
	  <title>Syntax</title>
	  <para>
	    <productionset>
	    <productionrecap linkend="ebnf.literal.boolean"/>
	    </productionset>
	  </para>
	</section>

<section xml:id="ref.data.boolean.operations">
<title>Operations</title>

<para>Notable Boolean operations include:
<itemizedlist>
<listitem><para>Logical negation (not): <code>~</code></para></listitem>
<listitem><para>Logical and: <code>&amp;&amp;</code></para></listitem>
<listitem><para>Logical or: <code>||</code></para></listitem>
</itemizedlist>
as well as the comparison operators, which yield Boolean results:
<itemizedlist>
<listitem><para>Less than: <code>&lt;:</code></para></listitem>
<listitem><para>Greater than: <code>:></code></para></listitem>
<listitem><para>Less than or equal to: <code>&lt;=</code></para></listitem>
<listitem><para>Greater than or equal to: <code>>=</code></para></listitem>
<listitem><para>Equal to: <code>=</code></para></listitem>
<listitem><para>Not equal to: <code>/=</code></para></listitem>
</itemizedlist>
</para>

<para>
	Note:  Unlike the typical symbols <code>&lt;</code> and <code>&gt;</code>
	for arithmetic relations, Orc uses <code>&lt;:</code> and <code>:></code>
	respectively.  This usage avoids ambiguity with the 
	<link linkend="ref.combinators.sequential">sequential composition combinator</link>
	and <link linkend="ref.combinators.pruning">pruning combinator</link>.
</para>

</section>

<section xml:id="ref.data.boolean.type">
  <title>Type</title>
	<para>
		A Boolean value has type <code>Boolean</code>.
	</para>
</section>

<section xml:id="ref.data.boolean.javacalls">
<title>Java calls</title>

<para>Orc <code>Boolean</code> values are passed in calls to and returns
from Java code as <code language="java">java.lang.Boolean</code>, which is boxed and
unboxed per <citetitle pubwork="book" xlink:href="http://java.sun.com/docs/books/jls/third_edition/html/conversions.html#5.1.7">The Java Language Specification</citetitle> as <code language="java">boolean</code>.</para>

</section>

<section xml:id="ref.data.boolean.examples">
<title>Examples</title>

<example xml:id="ref.data.boolean.examples.implication">
<title>Boolean Implication</title>
<programlisting><![CDATA[
{- Define logical implication -}

def implies(a,b) = ~a || b

implies(true, true) | implies(false, false)

{-
OUTPUT:
true
true
-}
]]></programlisting>
</example>

<!-- 
<example xml:id="ref.data.boolean.examples.ifsites">
<title>Ift and Iff Sites</title>
<programlisting language="orc-demo"><![CDATA[
{- Orc makes use of the Ift and Iff sites to test conditionals 
   Ift returns a signal if the argument is true,
   Iff when the argument is false.
-}

  Ift(true) >> "Ift(true) signals" 
| Iff(true) >> "Iff(true) signals" 
| Ift(false) >> "Ift(false) signals"
| Iff(false) >> "Iff(false) signals"

{-
OUTPUT:PERMUTABLE
"Ift(true) signals"
"Iff(false) signals"
-}
]]></programlisting>
</example>

 -->

<example xml:id="ref.data.boolean.examples.xor">
<title>Boolean XOR</title>
<programlisting language="orc-demo"><![CDATA[
{- Define exclusive or -}

def xor(a,b) = (a || b) && ~(a && b)

xor(true, true) | xor(false, false)

{-
OUTPUT:
false
false
-}
]]></programlisting>
</example>
		  
</section>

<section xml:id="ref.data.boolean.links">
<title>Related Links</title>
		<itemizedlist>
			<title>Related Reference Topics</title>
			<listitem><para><link linkend="ref.expressions.ifthenelse"><code>if then else</code></link></para></listitem>
			<listitem><para><link linkend="ref.stdlib.core.Ift"><code>Ift</code></link></para></listitem>
			<listitem><para><link linkend="ref.stdlib.core.Iff"><code>Iff</code></link></para></listitem>
		</itemizedlist>
		<itemizedlist>
			<title>Related Tutorial Sections</title>
			<listitem><para><olink targetdoc="userguide" targetptr="orc.constants">Constants</olink></para></listitem>
			<listitem><para><olink targetdoc="userguide" targetptr="orc.conditionals">Conditionals</olink></para></listitem>
		</itemizedlist>

</section>

</section>
