<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.patterns.variable.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<!-- Variable Pattern -->
	<section xml:id="ref.patterns.variable" xmlns="http://docbook.org/ns/docbook">
		<title>Variable Pattern</title>
		<para>
		  When a <indexterm significance="preferred"><primary>variable pattern</primary></indexterm><firstterm>variable pattern</firstterm> <replaceable>x</replaceable> is matched against a value <replaceable>v</replaceable>, 
	    the <indexterm><primary>variable</primary></indexterm>variable <replaceable>x</replaceable> is bound to the value <replaceable>v</replaceable>.
		</para>
		
		<section xml:id="ref.patterns.variable.syntax">
	  <title>Syntax</title>
	  <para>
	    <productionset>
	    	<productionrecap linkend="ebnf.pattern.variable"/>
	    </productionset>
	  </para>
	  </section>
	  
	  <section xml:id="ref.patterns.variable.type">
	  <title>Type</title>
	  <para>
	    When a variable pattern <replaceable>x</replaceable> is matched against a type <replaceable>T</replaceable>, 
	    it produces the <link linkend="ref.types.context">typing context</link> { <replaceable>x</replaceable> has type <replaceable>T</replaceable> }.
	  </para>
	  </section>
		
		 <section xml:id="ref.patterns.variable.examples">
		  <title>Examples</title>

		  <example xml:id="ref.patterns.variable.examples.pairsum">
		  <title>Sum Pair</title>
<programlisting language="orc-demo"><![CDATA[
{- Sum the elements of a pair -}
val (x, y) = (3, 4)

x + y

{-
OUTPUT:
7
-}
]]></programlisting>
		  </example>
		  
		  <example xml:id="ref.patterns.variable.examples.pairtolist">
		  <title>Pair to List</title>
<programlisting language="orc-demo"><![CDATA[
{- Convert pairs to lists -}

( (3,4) | (2,6) | (1,5) ) >(x,y)> [x,y]

{-
OUTPUT:PERMUTABLE:
[1, 5]
[2, 6]
[3, 4]
-}
]]></programlisting>
		  </example>
		</section>
		
		<section xml:id="ref.patterns.variable.links">
		  <title>Related Links</title>
		<itemizedlist>
			<title>Related Reference Topics</title>
			<listitem><para><link linkend="ref.combinators.sequential">Sequential Combinator</link></para></listitem>
			<listitem><para><link linkend="ref.combinators.pruning">Pruning Combinator</link></para></listitem>
			<listitem><para><link linkend="ref.declarations.val"><code>val</code>:  Bind Value</link></para></listitem>
		</itemizedlist>
		<itemizedlist>
			<title>Related Tutorial Sections</title>
			<listitem><para><olink targetdoc="userguide" targetptr="patterns.extensions">Extensions to Pattern Matching</olink></para></listitem>
		</itemizedlist>
		  
	  </section>
	</section>
