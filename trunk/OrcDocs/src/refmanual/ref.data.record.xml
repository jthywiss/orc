<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.data.record.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<section xml:id="ref.data.record" xmlns="http://docbook.org/ns/docbook">
<title>Records</title>

<para>
A <indexterm significance="preferred"><primary>record</primary></indexterm><firstterm>record</firstterm> is an unordered finite map from <indexterm><primary>key</primary></indexterm>keys to values. 
The empty record is written as <code>{. .}</code>. 
</para>

<section xml:id="ref.data.record.syntax">
  <title>Syntax</title>
  <para>
    <productionset>
    <productionrecap linkend="ebnf.expression.record"/>
    </productionset>
  </para>
</section>

<section xml:id="ref.data.record.constructors">
<title>Constructors</title>

<para>
A record is constructed from a comma-separated sequence of bindings enclosed by dotted braces. Each binding
associates a key with an expression.
</para>
 
<para>
The record expression <code>{.</code> <replaceable>K<subscript>0</subscript></replaceable> <code>=</code> <replaceable>E<subscript>0</subscript></replaceable> <code>,</code> &#x2026; <code>,</code> <replaceable>K<subscript>n</subscript></replaceable> <code>=</code> <replaceable>E<subscript>n</subscript></replaceable> <code>.}</code> 
<link linkend="ref.concepts.publish">publishes</link> the record <code>{.</code> <replaceable>K<subscript>0</subscript></replaceable> <code>=</code> <replaceable>v<subscript>0</subscript></replaceable> <code>,</code> &#x2026; <code>,</code> <replaceable>K<subscript>n</subscript></replaceable> <code>=</code> <replaceable>v<subscript>n</subscript></replaceable> <code>.}</code>
only if each expression <replaceable>E<subscript>i</subscript></replaceable> <link linkend="ref.concepts.deflate">deflates</link> to value <replaceable>v<subscript>i</subscript></replaceable>. 
Otherwise, it <link linkend="ref.concepts.states.halt">halts</link> <link linkend="ref.concepts.silent">silently</link>.
</para>

<para>Duplicate bindings for the same key are allowed, but only the rightmost binding will
be used in the resulting record value.</para>

</section>

<section xml:id="ref.data.record.operations">
<title>Operations</title>

<para>Notable record operations include:
<itemizedlist>
<listitem><para>
Publish the value bound to key <replaceable>k</replaceable> in record <replaceable>r</replaceable> (a <indexterm><primary>dot</primary></indexterm><link linkend="ref.expressions.dot">dot access</link>): <replaceable>r</replaceable><code>.</code><replaceable>k</replaceable>
</para></listitem>
<listitem><para>
<indexterm significance="preferred"><primary>record extension</primary></indexterm>Extend a record <replaceable>r</replaceable> with new entries : <replaceable>r</replaceable><code> + </code><replaceable>s</replaceable> 
</para></listitem>
</itemizedlist>
</para>

<para>
A record extension <replaceable>r</replaceable><code> + </code><replaceable>s</replaceable> publishes a new record with all of the bindings of <replaceable>s</replaceable>, 
plus all of the bindings in <replaceable>r</replaceable> which do not bind keys mentioned in <replaceable>s</replaceable>. 
In other words, <replaceable>s</replaceable> overrides <replaceable>r</replaceable>. 
Record extension is associative, but not commutative.
The expression 
<code>{.</code> <replaceable>K<subscript>0</subscript></replaceable> <code>=</code> <replaceable>E<subscript>0</subscript></replaceable> <code>,</code> &#x2026; <code>,</code> <replaceable>K<subscript>n</subscript></replaceable> <code>=</code> <replaceable>E<subscript>n</subscript></replaceable> <code>.}</code> 
is equivalent to the expression
<code>{.</code> <replaceable>K<subscript>0</subscript></replaceable> <code>=</code> <replaceable>E<subscript>0</subscript></replaceable> <code>.}</code> <code>+</code> &#x2026; <code>+</code> <code>{.</code> <replaceable>K<subscript>n</subscript></replaceable> <code>=</code> <replaceable>E<subscript>n</subscript></replaceable> <code>.}</code>.
</para>

</section>

<section xml:id="ref.data.record.specialkeys">
<title>Special Keys</title>
<para>
There are two record keys that have special meanings:
</para>

<para> 
<itemizedlist>
<listitem><para>
If a record has a binding for the <indexterm><primary>apply</primary></indexterm><code>apply</code> key, then the record may be <link linkend="ref.expressions.call.record">called like a site or function</link>.
</para></listitem>
<listitem><para>
If a record has a binding for the <indexterm><primary>unapply</primary></indexterm><code>unapply</code> key, then the record may be <link linkend="ref.patterns.call">used in a call pattern</link>.
</para></listitem>
</itemizedlist>
</para>

</section>

<section xml:id="ref.data.record.type">
<title>Type</title>
<para>
The type of a record value <code>{.</code> <replaceable>K<subscript>0</subscript></replaceable> <code>=</code> <replaceable>v<subscript>0</subscript></replaceable> <code>,</code> &#x2026; <code>,</code> <replaceable>K<subscript>n</subscript></replaceable> <code>=</code> <replaceable>v<subscript>n</subscript></replaceable> <code>.}</code>
where <replaceable>v<subscript>i</subscript></replaceable> has type <replaceable>T<subscript>i</subscript></replaceable>,
is a record type, written <code>{.</code> <replaceable>K<subscript>0</subscript></replaceable> <code>::</code> <replaceable>T<subscript>0</subscript></replaceable> <code>,</code> &#x2026; <code>,</code> <replaceable>K<subscript>n</subscript></replaceable> <code>::</code> <replaceable>T<subscript>n</subscript></replaceable> <code>.}</code>.
</para>
</section>

<section xml:id="ref.data.record.javacalls">
<title>Java calls</title>

<para>Orc records do not correspond to any Java value, so if a record is passed to Java code, it will be as a <code language="java">java.lang.Object</code> of a type not specified here.</para>

</section>

<section xml:id="ref.data.record.examples">
<title>Examples</title>


<example xml:id="ref.data.record.examples.vecnorm">
<title>Normalizing Vectors</title>
<programlisting language="orc-demo"><![CDATA[
{- Normalize a given integer vector using records -}

def magnitude(v) = 
  (v.x * v.x + 
   v.y * v.y + 
   v.z * v.z) ** 0.5
  
def norm(v) = 
  val m = magnitude(v)
  {. x = v.x / m, 
     y = v.y / m, 
     z = v.z / m .}
     
val velocity = {. x = 3.0, y = 0.0, z = 4.0 .}      
norm(velocity) 

{-
OUTPUT:
{. x = 0.6, y = 0, z = 0.8 .}
-}

]]></programlisting>
</example>

<example xml:id="ref.data.record.examples.recexp">
<title>Record Extension</title>
<programlisting language="orc-demo"><![CDATA[
{- Add an alpha field to an rgb color record -}

val rgb = {. red = 60, green = 230, blue = 5 .}
val rgba = rgb + {. alpha = 128 .}
rgba.alpha

{-
OUTPUT:
128
-}
]]></programlisting>
</example>

</section>

<section xml:id="ref.data.record.links">
<title>Related Links</title>
		<itemizedlist>
			<title>Related Reference Topics</title>
			<listitem><para><link linkend="ref.patterns.record">Record pattern</link></para></listitem>
			<listitem><para><link linkend="ref.expressions.dot">Dot access</link></para></listitem>
		</itemizedlist>
		<itemizedlist>
			<title>Related Tutorial Sections</title>
			<listitem><para><olink targetdoc="userguide" targetptr="ug.additional.records">Records</olink></para></listitem>
		</itemizedlist>
</section>

</section>
