<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.data.mutable.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<section xml:id="ref.data.mutable" xmlns="http://docbook.org/ns/docbook">
<title>Mutable State</title>

<para>A mutable object is value on which operations may
yield different results when called at different times.
Mutable objects are common in imperative programming languages.
They reflect the concept of a storage location in a von Neumann style architecture.</para>

<para>Most of Orc's value types are immutable. Orc provides the following standard mutable value types:
<itemizedlist>
<listitem><para><code><indexterm><primary>Ref</primary></indexterm>Ref</code>: Reference to a value that can be changed</para></listitem>
<listitem><para><code><indexterm><primary>Cell</primary></indexterm>Cell</code>: A write-once <code>Ref</code></para></listitem>
<listitem><para><code>Channel</code>: A queue of values</para></listitem>
<listitem><para><code>BoundedChannel</code>: A queue of values with a maximum size</para></listitem>
<listitem><para><code>Array</code>: A mutable integer-indexed sequence of values</para></listitem>
<listitem><para><code>Set</code>: A mutable set of values</para></listitem>
<listitem><para><code>Counter</code>: A value that can be incremented and decremented atomically</para></listitem>
<listitem><para><code>Dictionary</code>: A mutable Record</para></listitem>
</itemizedlist>
See the <olink targetdoc="ref.stdlib.state">state library</olink> section for more details on the value types.
</para>


<section xml:id="ref.data.mutable.links">
<title>Related Links</title>
		<itemizedlist>
			<title>Related Reference Topics</title>
			<listitem><para><link linkend="ref.stdlib.state.Ref"><code>Ref</code> site</link></para></listitem>
			<listitem><para><link linkend="ref.stdlib.state.Cell"><code>Cell</code> site</link></para></listitem>
			<listitem><para><link linkend="ref.stdlib.state.Channel"><code>Channel</code> site</link></para></listitem>
			<listitem><para><link linkend="ref.stdlib.state.BoundedChannel"><code>BoundedChannel</code> site</link></para></listitem>
			<listitem><para><link linkend="ref.stdlib.state.Array"><code>Array</code> site</link></para></listitem>
			<listitem><para><link linkend="ref.stdlib.state.Set"><code>Set</code> site</link></para></listitem>
			<listitem><para><link linkend="ref.stdlib.state.Counter"><code>Counter</code> site</link></para></listitem>
			<listitem><para><link linkend="ref.stdlib.state.Dictionary"><code>Dictionary</code> site</link></para></listitem>
		</itemizedlist>
		<itemizedlist>
			<title>Related Tutorial Sections</title>
			<listitem><para><olink targetdoc="userguide" targetptr="methodology.mutable">Mutable References</olink></para></listitem>
			<listitem><para><olink targetdoc="userguide" targetptr="methodology.channels">Channels</olink></para></listitem>
		</itemizedlist>
</section>

</section>
