<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.declarations.class.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<!-- Class from Java -->
<section xml:id="ref.declarations.class" xmlns="http://docbook.org/ns/docbook">
	<title><code><indexterm><primary>class</primary></indexterm>class</code>:  Import Class from Java</title>

	<!-- Index pointers for unwritten terms -->
	<indexterm><primary>import class</primary></indexterm>

	<para>
Orc programs can use services of the platform on which the Orc runtime engine runs.
In this implementation of Orc, this platform is the Java Runtime Environment (JRE).
<indexterm><primary>Java</primary></indexterm>Java classes may be imported into Orc programs and invoked as Orc sites.
	</para>

	<para>
The declaration <code>class </code><replaceable>S</replaceable><code> = "</code><replaceable>J</replaceable><code>"</code>
binds the variable <replaceable>S</replaceable> to a site representing the Java class <replaceable>J</replaceable>.
Calls to <replaceable>S</replaceable> invoke the corresponding <indexterm><primary>constructor</primary></indexterm>constructor of the Java class <replaceable>J</replaceable>.
The created class instance is published from the site call.
Instance methods may be invoked on this published value.
Calls to <replaceable>S</replaceable><code>.</code><replaceable>m</replaceable> invoke the corresponding class static method of the Java class <replaceable>J</replaceable>.
The return value of the method is published from the site call.
Further details of the Orc-Java interface are in the <link linkend="ref.sites.java">Java sites</link> section.
	</para>

  <section xml:id="ref.declarations.class.syntax">
	  <title>Syntax</title>
	  <para>
	    <productionset>
	    	<productionrecap linkend="ebnf.declaration.class"/>
	    </productionset>
	  </para>
  </section>
  
   <section xml:id="ref.declarations.class.type">
	  <title>Type</title>
	  <para>
	    When typechecking declared classes, the Orc typechecker interfaces with the <indexterm><primary>Java</primary></indexterm>Java type system, so that operations on
	    Java objects typecheck as one would expect in a Java program, with a few exceptions.
	    
	    <itemizedlist>
	    <listitem><para>Methods with return type <code language="java">void</code> in Java have return type <code>Signal</code> in Orc.</para></listitem>
	    <listitem><para>Interfaces are not fully supported.</para></listitem>
	    <listitem><para>Type parameter bounds are not supported.</para></listitem>
	    </itemizedlist>
	    
	  </para>
	  
	  <para>
	  In addition to declaring a site, the <code>class</code> declaration also declares a type with the same name.
	  It is the Orc type for instances of that Java class. For example, the declaration <code language="orc">class File = java.io.File</code>
	  declares a type <code>File</code>, which is the type of all instances of <code language="java">java.io.File</code>.
		</para>	  
		
		<para>
		If a <code>class</code> declaration binds a generic Java class, then the corresponding Orc type is instead a type operator,
		and the constructor site takes type parameters.
		</para>

		<para>
		Subtyping between Java object types is determined by Java's subtyping relation: if
		one class is a subclass of another, then that type will be a subtype of the other.
		The typechecker does not implement a true join operation for Java types; it will
		find a common ancestor, but not the least common ancestor. 
		</para>
		
  </section>

	<section xml:id="ref.declarations.class.examples">
		<title>Examples</title>
	
		<example xml:id="ref.declarations.class.examples.call">
			<title>Invoke a Java constructor and instance method</title>
			<programlisting language="orc-demo"><![CDATA[
{- Use a Java class to count the number of tokens in a string -}

class StringTokenizer = "java.util.StringTokenizer"

-- Invoke a constructor:
val st = StringTokenizer("Elegance is not a dispensable luxury, but a quality that decides between success and failure.", " ")

-- Invoke a method
st.countTokens()

{-
OUTPUT:
15
-}
]]></programlisting>
		</example>
	
		<example xml:id="ref.declarations.class.examples.staticcall">
			<title>Invoke a Java static method</title>
			<programlisting language="orc-demo"><![CDATA[
{- Use a Java class to calculate a log value -}

class JavaMath = "java.lang.Math"

-- Invoke a static method:
JavaMath.log10(42.0)

{-
OUTPUT:
1.6232492903979006
-}
]]></programlisting>
		</example>
	
		<example xml:id="ref.declarations.class.examples.generic">
		<title>Declaring and instantiating a Java generic class</title>
		<programlisting language="orc"><![CDATA[
{- Use a Java class to represent tree data structures -}

class TreeSet = java.util.TreeSet

val s = TreeSet[String]()
s.add("Orc") >> s.add("Java") >> s.add("Orc") >> s.size()

{-
OUTPUT:
2
-} 
		]]></programlisting>
	  </example>
	  
	</section>

	


	<section xml:id="ref.declarations.class.links">
		<title>Related Links</title>

		<informaltable frame="none">
			<tgroup cols="1" align="left">
				<thead>
					<row>
						<entry align="left">Related Reference Topics</entry>
					</row>
				</thead>
				<tbody valign="top">
					<row>
		        		<entry><itemizedlist>
							<listitem><para><link linkend="ref.sites.java">Java Sites</link></para></listitem>
							<listitem><para><link linkend="ref.expressions.dot">Dot Access</link></para></listitem>
							<listitem><para><link linkend="ref.expressions.call.site">Site Calls</link></para></listitem>
						</itemizedlist></entry>
					</row>
				</tbody>
			</tgroup>
		</informaltable>
		  
		<informaltable frame="none">
			<tgroup cols="1" align="left">
				<thead>
					<row>
						<entry align="left">Related Tutorial Sections</entry>
					</row>
				</thead>
				<tbody valign="top">
					<row>
						<entry><itemizedlist>
							<listitem><para><olink targetdoc="userguide" targetptr="chapter.services">Accessing External Services</olink></para></listitem>
						</itemizedlist></entry>
					</row>
				</tbody>
			</tgroup>
		</informaltable>

	</section>
</section>
