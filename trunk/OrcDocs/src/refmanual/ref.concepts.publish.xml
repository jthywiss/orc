<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.concepts.publish.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<!-- Publish Concept -->
<section xml:id="ref.concepts.publish" xmlns="http://docbook.org/ns/docbook">
	<title>Publication</title>

	<para>
An Orc expression <indexterm significance="preferred"><primary>publish</primary></indexterm><firstterm baseform="publish">publishes</firstterm> a value when the expression produces a value to be used in the context enclosing the expression.
An extremely simple example of publication is a literal, for example the expression <code>1</code>, which publishes a single integer <indexterm><primary>value</primary></indexterm>value.
Orc expressions may publish zero or more values during their execution.
The effect of publication depends on the context.
For example, each publication of <replaceable>F</replaceable> in the <link linkend="ref.combinators.sequential">sequential combinator</link> expression <replaceable>F</replaceable><code> &gt;</code>x<code>&gt; </code><replaceable>G</replaceable>
causes <replaceable>G</replaceable> to be run with <code>x</code> bound to the published value.
An expression that never publishes is said to be <link linkend="ref.concepts.silent">silent</link>.
	</para>

	<para>
The following is the publication behavior of a few common forms of Orc expressions.
		<itemizedlist>
			<listitem><para><link linkend="ref.expressions.call.site">Site calls</link> publish only zero or one value.</para></listitem>
			<listitem><para><link linkend="ref.expressions.call.function">Function calls</link> may publish any number of values.</para></listitem>
			<listitem><para>A <link linkend="ref.expressions.literal">literal expression</link> publishes exactly one value.</para></listitem>
			<listitem><para><link linkend="ref.expressions.stop"><code>stop</code></link> never publishes.</para></listitem>
			<listitem><para>A <link linkend="ref.expressions.variable">variable expression</link>, when executed, publishes its value, if bound.
				If not, execution of the variable is <link linkend="ref.concepts.states.block">blocked</link> until it is bound.</para></listitem>
			<listitem><para>Each of the Orc <link linkend="ref.combinators">combinators</link> has a unique publication behavior.</para></listitem>
		</itemizedlist>
	</para>

	<section xml:id="ref.concepts.publish.examples">
		<title>Examples</title>

		<example xml:id="ref.concepts.publish.examples.pub0">
<title>Publish no values</title>
<programlisting language="orc-demo"><![CDATA[
(1 | 2) >> stop
{-
OUTPUT:
-}
]]></programlisting>
</example>


		<example xml:id="ref.concepts.publish.examples.pub2">
<title>Publish one value</title>
<programlisting language="orc-demo"><![CDATA[
1
{-
OUTPUT:
1
-}
]]></programlisting>
</example>

		<example xml:id="ref.concepts.publish.examples.pub2seq">
<title>Publish two values</title>
<programlisting language="orc-demo"><![CDATA[
(1 | 2) >x> x + 30
{-
OUTPUT:PERMUTABLE
31
32
-}
]]></programlisting>
</example>

<example xml:id="ref.concepts.publish.examples.metronome">
<title>Publish an unbounded number of values (metronome)</title>
<programlisting language="orc-demo"><![CDATA[
def metronome() = signal | Rwait(1000) >> metronome()

metronome()
]]></programlisting>
</example>

	</section>

	<section xml:id="ref.concepts.publish.links">
		<title>Related Links</title>
		<itemizedlist>
			<title>Related Reference Topics</title>
			<listitem><para><link linkend="ref.combinators">Combinators</link></para></listitem>
			<listitem><para><link linkend="ref.expressions.call.site">Site Call</link></para></listitem>
			<listitem><para><link linkend="ref.expressions.call.function">Function Call</link></para></listitem>
			<listitem><para><link linkend="ref.expressions.stop"><code>stop</code></link></para></listitem>
			<listitem><para><link linkend="ref.concepts.silent">Silent</link></para></listitem>
		</itemizedlist>
		<itemizedlist>
			<title>Related Tutorial Sections</title>
			<listitem><para><olink targetdoc="userguide" targetptr="orc">Orc expressions</olink></para></listitem>
			<listitem><para><olink targetdoc="userguide" targetptr="combinators">Combinators</olink></para></listitem>
			<listitem><para><olink targetdoc="userguide" targetptr="expression.nesting">Nesting expressions</olink></para></listitem>
			<listitem><para><olink targetdoc="userguide" targetptr="orc.sites.calling">Calling a site</olink></para></listitem>
		</itemizedlist>

	</section>
</section>
