<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.concepts.helpful.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<!-- Helpful Sites -->
<section xml:id="ref.concepts.helpful" xmlns="http://docbook.org/ns/docbook">
	<title>Helpful Sites</title>

	<!-- Index pointers for unwritten terms -->
	<indexterm><primary>halt</primary></indexterm>
	<indexterm><primary>otherwise combinator</primary></indexterm>

	<para>
		A <indexterm significance="preferred"><primary>helpful site</primary></indexterm><firstterm>helpful site</firstterm> responds with an indication that it will never <link linkend="ref.concepts.publish"><indexterm><primary>publish</primary></indexterm>publish</link>
		when it knows this outcome for a call. 
	</para>

	<para>
		All library sites in Orc are helpful. Thus, <link linkend="ref.stdlib.core.Ift"><code>Ift</code></link> is a helpful site, and
		<code>Ift(false)</code> sends an indication to the caller that it will never
		publish. A <link linkend="ref.stdlib.state.Channel"><code>Channel</code></link> is a helpful site, and some of its methods will send
		an indication that they will never publish. In particular, the <code>get</code>
		method is blocked on an empty channel, but it sends an indication it
		will never publish if the channel is closed.
	</para>

	<para>
		We do not expect arbitrary Web services to be helpful. 
	</para>

	<para>
		The indication from a helpful site that it will never publish can be
		exploited by the caller using the <link linkend="ref.combinators.otherwise">otherwise combinator</link>.
	</para>

	<section xml:id="ref.concepts.helpful.links">
		<title>Related Links</title>
		<itemizedlist>
			<title>Related Reference Topics</title>
			<listitem><para><link linkend="ref.combinators.otherwise">Otherwise Combinator</link></para></listitem>
			<listitem><para><link linkend="ref.concepts.states.halt">Halting</link></para></listitem>
			<listitem><para><link linkend="ref.stdlib">Standard Library</link></para></listitem>
		</itemizedlist>
		<!-- 
		<itemizedlist>
			<title>Related Tutorial Sections</title>
			<listitem><para>TODO</para></listitem>
		</itemizedlist>
		-->

	</section>
</section>
