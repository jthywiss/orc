<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.data.external.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<section xml:id="ref.data.external" xmlns="http://docbook.org/ns/docbook">
<title>External Values</title>

<para>Orc's value set is "open" &#x2014; any value returned from a site call can be used in Orc expressions.
Combined with Orc's ability to invoke arbitrary functions of the environment in with the Orc runtime engine is running,
this permits Orc programs to use any expressible value in its environment.
For example, Orc programs running on a Java virtual machine (JVM) can interact with any Java object.</para>

<section xml:id="ref.data.external.types">
  <title>Type</title>
  <para>
    External values usually have types that cannot be represented using Orc's primitive types or structured types.
    A <link linkend="ref.declarations.type.import"><code>type</code> declaration</link> may be used to import such a type into the Orc type system.
  </para>
</section>

<section xml:id="ref.data.external.examples">
<title>Examples</title>


<example xml:id="ref.data.external.examples.javabitset">
<title>Java BitSet</title>
<programlisting language="orc-demo"><![CDATA[
{- Using the Java class java.util.BitSet,
   construct a new instance, and then
   set bits 2 and 4 in the BitSet instance
-}

class BitSet = "java.util.BitSet"

BitSet() >b> b.set(2) >> b.set(4) >> b.toString()

{-
NONRUNNABLE
-}
]]></programlisting>
</example>

<example xml:id="ref.data.external.examples.javahashmap">
<title>Java HashMap</title>
<programlisting language="orc"><![CDATA[
{- Using the Java class java.util.HashMap, construct a new instance, 
   and then put and get some entries
-}

class HashMap = "java.util.HashMap"

HashMap[String, String]() >m> m.put("Mickey", "Minnie") >> 
m.put("Donald", "Daisy") >> m.get("Mickey")

{-
NONRUNNABLE
-}
]]></programlisting>
</example>

</section>

<section xml:id="ref.data.external.links">
<title>Related Links</title>
		<itemizedlist>
			<title>Related Reference Topics</title>
			<listitem><para><link linkend="ref.sites.java">Java Sites</link></para></listitem>
			<listitem><para><link linkend="ref.sites.web">Web Services</link></para></listitem>
			<listitem><para><link linkend="ref.sites.custom">Custom Sites</link></para></listitem>
			<listitem><para><link linkend="ref.declarations.site.type">Typing of Sites</link></para></listitem>
		</itemizedlist>
		<itemizedlist>
			<title>Related Tutorial Sections</title>
			<listitem><para><olink targetdoc="userguide" targetptr="section.services.scalavalues">Java/Scala Values in Orc</olink></para></listitem>
		</itemizedlist>
</section>

</section>
