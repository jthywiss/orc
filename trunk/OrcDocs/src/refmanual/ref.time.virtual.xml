<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.time.virtual.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2013 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<!-- Syntax: Lexical Specifications -->
	<section xml:id="ref.time.virtual" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
		<title>Virtual Time</title>
		<para>
			Virtual time provides the ability to order events in an Orc execution.
			As an expression is executed, the Orc runtime tracks the "current" virtual time.
			A <code>Vawait</code> site call waits for a particular point in time.
			Through use of <code>Vawait</code>, one can set up temporal dependencies among Orc expressions.
		</para>
		<para>
			Simulations in Orc can make use of virtual time to simulate time passage without the unproductive delays caused by real time waits.
			Certain algorithms can be succinctly expressed using virtual time.  (See the shortest path example.)
		</para>
		<para>
			An Orc virtual clock is created with four parameters, conceptually:
			<itemizedlist>
			<listitem><para>A set of points of time (for example, the integers)</para></listitem>
			<listitem><para>Equality and total ordering relations over this set (for example, = and &lt;)</para></listitem>
			<listitem><para>Optionally, a parent clock</para></listitem>
			<listitem><para>The scope (part of the program) over which it applies</para></listitem>
			</itemizedlist>
			(In an actual Orc program, only the total ordering relation is given as an actual argument to a <code>Vclock</code> call.
			The other three parameters are implicit.)
		</para>
		<para>
			During execution. a virtual clock tracks:
			<itemizedlist>
			<listitem><para>The current time</para></listitem>
			<listitem><para>A priority queue of pending <code>Vawait</code> calls, in order of their awaited time, as given by the clock's total ordering relation.</para></listitem>
			</itemizedlist>
			When <code>Vawait</code> is called with a time value greater than the current time, that call is enqueued, and does not return until that time.
			Virtual time advances when all execution in the clock's scope becomes <firstterm>quiescent</firstterm>, defined below.
			Upon quiescence in a clock's scope, the clock's current time is updated to least time among its waiters, and all <code>Vawait</code> calls for that time return.
		</para>
		<section xml:id="ref.time.virtual.quiescence">
			<title>Quiescence</title>
			<para>
				A region of code is <indexterm significance="preferred"><primary>quiescence</primary></indexterm><firstterm>quiescent</firstterm> when ....
			</para>
		</section>
		<section xml:id="ref.time.virtual.Vclock">
			<title>Vclock</title>
			<para>
				Executing <code>Vclock(timeOrder) >> e</code> executes the expression <code>e</code> with a virtual clock that has time values ordered by <code>timeOrder</code>.
				A time ordering operates on a particular time value type, for example integers.
				A time ordering is a site that takes two arguments, each of the time value type, and returns the value -1, 0, or 1 to indicate the first argument is less than, equal to, or greater than, respectively, the second argument.
				Note that in the current version of Orc, the site must be a Java site; it cannot be defined in Orc.
				(This limitation may be removed in a future Orc release.)
				When the expression <code>e</code> publishes, ....
			</para>
		</section>
		<section xml:id="ref.time.virtual.Vawait">
			<title>Vawait</title>
			<para>
				Vawait....
			</para>
		</section>
		<section xml:id="ref.time.virtual.Vtime">
			<title>Vtime</title>
			<para>
				Vtime....
			</para>
		</section>

		<section xml:id="ref.time.virtual.examples">
			<title>Examples</title>

			<example xml:id="ref.time.virtual.examples.xxxxx">
				<title>Xxxx xxxx xxxxx</title>
				<programlisting language="orc-demo"><![CDATA[
{- Example.... -}

Println("Example")

{-
OUTPUT:
Example
signal
-}
]]></programlisting>
			</example>

		</section>
		<section xml:id="ref.time.virtual.links">
			<title>Related Links</title>
			<itemizedlist>
				<title>Related Reference Topics</title>
				<listitem><para><link linkend="ref.stdlib.time">Standard Library: Time</link></para></listitem>
				<listitem><para><link linkend="ref.stdlib.time.Vclock"><code>Vclock</code> site</link></para></listitem>
				<listitem><para><link linkend="ref.stdlib.time.Vawait"><code>Vawait</code> site</link></para></listitem>
				<listitem><para><link linkend="ref.stdlib.time.Vtime"><code>Vtime</code> site</link></para></listitem>
			</itemizedlist>
			<itemizedlist>
				<title>Related Tutorial Sections</title>
				<listitem><para><olink targetdoc="userguide" targetptr="ug.idioms.timeout">...are there any?...</olink></para></listitem>
			</itemizedlist>
		</section>

	</section>
