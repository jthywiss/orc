<?xml version="1.0" encoding="UTF-8"?>
<!-- ref.declarations.site.xml - DocBook source for an Orc reference manual section

     $Id$

     Copyright (c) 2011 The University of Texas at Austin. All rights reserved.

     Use and redistribution of this file is governed by the license terms in
     the LICENSE file found in the project's top-level directory and also found at
     URL: http://orc.csres.utexas.edu/license.shtml .
  -->

<!-- Site -->
<section xml:id="ref.declarations.site" xmlns="http://docbook.org/ns/docbook">

	<title><code>import site</code>: Import Site</title>

	<para>
<indexterm><primary>import site</primary></indexterm>
A <firstterm>site declaration</firstterm> makes an Orc <link linkend="ref.sites">site</link> that is present in the environment available for use by the program.
	</para>

	<para>
Orc sites provide operations such as arithmetic functions, platform facilities, or Web services for Orc programs to invoke.
The Orc standard prelude, which is implicitly included in Orc programs by the compiler, contains declarations for all items in the Orc <link linkend="ref.stdlib">standard library</link>.
Sites beyond those in the standard library are made available by a site declaration.
A site declaration names a variable to bind to the site and specifies a location from with the site is obtained (<indexterm significance="preferred"><primary>site resolution</primary></indexterm>site resolution).
In the present Orc implementation, this location is specified as a fully qualified name of a class that can be loaded from the JVM classpath.
	</para>

	<section xml:id="ref.declarations.site.syntax">
		<title>Syntax</title>
		<para>
			<productionset>
				<productionrecap linkend="ebnf.declaration.site"/>
			</productionset>
		</para>
	</section>

	<section xml:id="ref.declarations.site.resolve">
		<title>Site Resolution</title>
		<para>
A site is resolved as follows:
The site class loader is requested to load the class of the fully qualified name specified in the site declaration.
The resolver verifies that the loaded class is a subtype of <code language="java">orc.values.site.Site</code>.
If so, that class is bound to the variable name in the site declaration.
If it is not, the resolver attempts to load the Scala companion module for this class.
If this exists and is a subtype of <code language="java">orc.values.site.Site</code>, it is bound to the variable name in the site declaration.
If it is not found, or is not the expected type, site resolution fails.
		</para>

		<para>
The site class loader referred to above is the usual JVM stack of delegating class loaders.
In the Orc implementation, the stack is initially the first non-<code language="java">null</code> of: 1) the current thread's context class loader, 2) the class loader of the site resolver class, or 3) the JVM system class loader.
This loader has a URL class loader stacked on it if a site classpath is configured.
Thus, if a site classpath is configured, is is searched first.
If no class is found on the site classpath, or the site classpath is not configured, then the normal classpath is searched.
		</para>
	</section>

	<section xml:id="ref.declarations.site.type">
		<title>Type</title>
		<para>
			The type of a site is determined entirely by the site itself. It may
			be representable in Orc, for example as a <link linkend="ref.data.closure.type">function type</link>,
			or it may be an entirely opaque type. The type of a site behaves very
			much like a site itself during typechecking; it is invoked with
			argument types and responds with a return type.
		</para>
		<para>
		  The Orc typechecker cannot independently verify that a site's stated type is correct.
		  If the site misrepresents its type, this may result in a runtime type error.
		</para>
	</section>

	<section xml:id="ref.declarations.site.examples">
		<title>Examples</title>

		<example xml:id="ref.declarations.site.examples.basic">
			<title>Declaring a user-supplied site</title>
			<programlisting language="orc"><![CDATA[
{-
 - Assume a JVM class file named com.example.MySite is
 - availalble on the classpath, and that it implements
 - the orc.values.site.Site trait.
 -}

import site MySite = "com.example.MySite"

MySite()
]]></programlisting>
		</example>

	</section>

	<section xml:id="ref.declarations.site.links">
		<title>Related Links</title>
		<itemizedlist>
			<title>Related Reference Topics</title>
			<listitem><para><link linkend="ref.stdlib">Standard Library</link></para></listitem>
		</itemizedlist>
		<itemizedlist>
			<title>Related Tutorial Sections</title>
			<listitem><para><olink targetdoc="userguide" targetptr="chapter.services">Accessing External Services</olink></para></listitem>
		</itemizedlist>

	</section>
</section>

