<appendix id="appendix.library" xmlns:xi="http://www.w3.org/2001/XInclude"><title>Standard Library</title>
<section><title>Overview</title>
<para>
The standard library is a set of declarations implicitly available to all Orc
programs.  In this section we give an informal description of the standard library,
including the type of each declaration and a short explanation of its use.
</para>

<para>
Orc programs are expected to rely on the host language and environment for
all but the most essential sites.  For example, in the Java implementation of
Orc, the entire Java standard library is available to Orc programs via
<code>class</code> declarations. Therefore the Orc standard library aims only
to provide convenience for the most common Orc idioms, not the complete set of
features needed for general-purpose programming.
</para>
</section>

<section><title>Types and Notation</title>

<para>
The standard library is fully compatible with the static type checker; all
library declarations have associated type declarations, which also serve as
helpful documentation. 
</para>

<para>
The documentation of library functions uses special notation for parametric 
types that have dot-accessible members.
Member names are written in the form Type.member, e.g.  <code>Foo.get</code>
refers to the <code>get</code> member of an object of type <code>Foo</code>.
The object type can include type variables which are referenced by the member
type, so for example <code>site Buffer[A].get() :: A</code> means that
when the <code>get</code> method is called on a <code>Buffer</code> holding an
arbitrary element type <code>A</code>, it will return a value of the same type.
</para>
 
</section>

<xi:include href="../stdlib.xml"/>

</appendix>