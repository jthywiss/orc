

@incollection{Kitchin2010,
	Author = {Kitchin, David and Quark, Adrian and Misra, Jayadev},
	Booktitle = {Reflections on the Work of C.A.R. Hoare},
	Date-Added = {2014-10-11 21:52:53 +0000},
	Date-Modified = {2014-10-11 21:52:53 +0000},
	Doi = {10.1007/978-1-84882-912-1_11},
	Editor = {Roscoe, A. W. and Jones, Cliff B. and Wood, Ken},
	Isbn = {978-1-84882-911-4},
	Keywords = {Orc; orchestration; concurrency; programming languages},
	Note = {Written in honor of Sir Tony Hoare's 75th birthday},
	Publisher = {Springer},
	Series = {History of Computing},
	Title = {Quicksort: Combining Concurrency, Recursion, and Mutable Data Structures},
	Year = {2010},
	Abstract = {Quicksort remains one of the most studied algorithms in computer science. It is important not only as a practical sorting method, but also as a splendid teaching aid for introducing recursion and systematic algorithm development. The algorithm has been studied extensively; so, it is natural to assume that everything that needs to be said about it has already been said. Yet, in attempting to code it using a recent programming language of our design, we discovered that its structure is more clearly expressed as a concurrent program that manipulates a shared mutable store, without any locking or explicit synchronization. In this paper, we describe the essential aspects of our programming language Orc, show a number of examples that combine its features in various forms, and then develop a concise description of Quicksort. We hope to highlight the importance of including concurrency, recursion and mutability within a single theory.},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-1-84882-912-1_11}}
