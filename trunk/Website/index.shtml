<!--#include virtual="header.shtml" --> 

<h2>Orc is ...</h2>

<p>A novel language for distributed and concurrent programming. Orc provides
uniform access to computational services, including distributed communication
and data manipulation, through <b><i>sites</i></b>. Using three simple
concurrency primitives, the programmer <b><i>orchestrates</i></b> the
invocation of sites to achieve a goal, while managing timeouts, priorities, and
failures.</p>

<p><a href="introduction.shtml">Learn more about Orc...</a></p>

<h2>What is it for?</h2>
<ul>
<li>Concurrent and distributed programming</li>
<li>Workflows (business process automation)</li>
<li>Discrete event simulation</li>
<li>Web service mashups</li>
</ul>

<p><a href="community.shtml">The Orc community...</a></p>

<h2>A Sample Program</h2>

<pre>
<font color="brown">-- Email an admin if a server does not
-- respond to a ping within t milliseconds</font>
<font color="blue">def</font> PingTest(<i>t</i>, <i>server</i>) = pong
  <font color="red">&lt;</font><i>pong</i><font color="red">&lt;</font>   Ping(<i>server</i>)
         <font color="red">|</font> Rtimer(<i>t</i>) <font color="red">>></font> EmailAdmin(<font color="grey">"Ping failed"</font>)

<font color="brown">-- Every minute, check if Google responds
-- within 10 seconds</font>
Metronome(60000) >> PingTest(10000, <font color="grey">"www.google.com"</font>)
</pre>

<p><a href="tutorial.shtml">Tutorial with more sample programs...</a></p>

<!--#include virtual="footer.shtml" --> 
