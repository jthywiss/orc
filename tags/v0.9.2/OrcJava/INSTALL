User Installation Instructions
------------------------------

Most users will just want to get the orc JAR and
run programs from the command line.

Download it from: http://sourceforge.net/projects/orc

Assuming you downloaded (for example) orc-0.9.1.jar,
run at the command line:

  java -jar orc-0.9.1.jar -help
  
to see command-line options.

Developer Installation Instructions
-----------------------------------

If you plan to develop Orc within Eclipse, these
instructions are for you.

0. Install Java >= 1.5
   http://java.sun.com/javase/6/webnotes/install/

1. Download Eclipse
   http://www.eclipse.org/downloads/

2. Install ANTLR plugin from within Eclipse
   http://antlreclipse.sourceforge.net/
   => follow Installation instructions

3. Checkout Orc SourceForge project from within Eclipse using
   Anonymous CVS Access (pserver)
   https://sourceforge.net/cvs/?group_id=33781
       
   File -> New -> Project... -> CVS -> Projects from CVS

   Host: orc.cvs.sourceforge.net
   Repository path: /cvsroot/orc
   User: anonymous
   Password: <leave blank>
   Connection type: pserver

   <click next>

   Use specified module name: OrcJava

   <click finish>

Running Orc programs in Eclipse
-------------------------------

Run -> Run... -> <right click> Java Application -> New

Name: Orc
Project: <browse to OrcMainline project>
Main class: orc.Orc

<click on Arguments tab>

Program arguments: ${resource_loc}

<click apply & close>

<click on sample orc file once in Package Explorer, Navigator, or Editor so
 that it's highlighted>

<click on Run button>

Note: ${resource_loc} is a variable whose value is the currently selected file
in your workspace. Therefore, whenever you want to run Orc, you must ensure
that you have an Orc source file selected.

There are a variety of sample programs in examples/.

Refer to the User's Guide in doc/userguide.pdf for more details of the Orc
language.

Importing Java objects
----------------------

list_test.orc
class List = java.util.ArrayList

List() >list>
    list.add("Item A") >>
    list.add("Item B") >>
    list.add("Item C") >>
    (   println(list.get(0))
      | println(list.get(1))
      | println(list.get(2))  ) >>
    null

Parsing XML using the Java library
----------------------------------

books.xml
<catalog>
  <book id="101">
    <title>XML in a Nutshell</title>
    <author>Elliotte Rusty Harold, W. Scott Means</author>
    <price>39.95</price>
  </book>
  <book id="121">
    <title>Who Moved My Cheese</title>
    <author>Spencer, M.D. Johnson, Kenneth H. Blanchard</author>
    <price>19.95</price>
  </book>
</catalog>

xml_test.orc
class DOMParser = com.sun.org.apache.xerces.internal.parsers.DOMParser

DOMParser() >parser>
    parser.parse("books.xml") >>
    parser.getDocument() >document>
    document.getElementsByTagName("title") >elements>
    elements.item(0).getTextContent()

xml_iter_test.orc
class DOMParser = com.sun.org.apache.xerces.internal.parsers.DOMParser

DOMParser() >parser>
    parser.parse("books.xml") >>
    parser.getDocument() >document>
    document.getElementsByTagName("title") >elements>
    each(elements) >element>
    element.getTextContent()
